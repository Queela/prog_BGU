
&НаСервере
Процедура АБК_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	СвойствоИерархияДоговоров = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя", "ГруппаДоговола_c2493e39f9364beea560b48d62390d6e");
	
	Если ЗначениеЗаполнено(СвойствоИерархияДоговоров) Тогда
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "Справочник.Договоры КАК СправочникДоговоры",
			"Справочник.Договоры КАК СправочникДоговоры
			|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Договоры.ДополнительныеРеквизиты КАК ИерархияДоговоров
			|		ПО СправочникДоговоры.Ссылка = ИерархияДоговоров.Ссылка
			|		И ИерархияДоговоров.Свойство = &СвойствоИерархияДоговоров");
		
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, "ПометкаУдаления КАК ПометкаУдаления,",
			"ПометкаУдаления КАК ПометкаУдаления,
			|	ЕстьNULL(ИерархияДоговоров.Значение, ""Без группы"") КАК ИерархияДоговоров,");  
		
		Список.Параметры.УстановитьЗначениеПараметра("СвойствоИерархияДоговоров", СвойствоИерархияДоговоров);
		
		КолонкаИерархия = Элементы.Вставить("АБК_ИерархияДоговоров", Тип("ПолеФормы"), Элементы.Список, Элементы.СписокКод); 
		КолонкаИерархия.Вид = ВидПоляФормы.ПолеВвода; 
		КолонкаИерархия.ПутьКДанным = "Список.ИерархияДоговоров";  
		
		ПолеГруппировки = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Использование = Истина;
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("ИерархияДоговоров");
		
	КонецЕсли;
	
КонецПроцедуры
