
&ИзменениеИКонтроль("ЗаполнитьПоДоговору")
Процедура АБК_ЗаполнитьПоДоговору(Договор, ЗаполнятьДанныеТабЧастей, ОснованиеЗаполнения)
	Перем Запрос, ТекстЗапроса;
	Перем Результат;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	Договоры.Организация КАК Организация,
	|	Договоры.Контрагент КАК Контрагент,
	|	Договоры.СчетКонтрагента КАК СчетКонтрагента,
	|	Договоры.Договор,
	|	ВЫБОР
	|		КОГДА Договоры.УчетПредметаДоговора
	|			ТОГДА ВЫБОР
	|					КОГДА Договоры.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ИноеОбязательство)
	|							И ЕСТЬNULL(СрокиСуммы.Регистратор, 0) <> 0
	|						ТОГДА ВЫБОР
	|								КОГДА (СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоПеререгистрация))
	|										И Договоры.РезультатЗавершенияКонкурсныхПроцедур = 1
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринятоеОбязательствоКонкурсныеПроцедуры)
	|								КОГДА (СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоПеререгистрация))
	|										И Договоры.РезультатЗавершенияКонкурсныхПроцедур = 2
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ОтказОтДоговораКонкурсныеПроцедуры)
	| //Изменение принимаемого
	|								КОГДА (СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоПеререгистрация))
	|										И НЕ Договоры.ПризнакЗавершенияКонкурсныхПроцедур
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	| //Изменение принимаемого
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ЗаявкаНаИзменениеОбязательстваУчетПредмета)
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Договоры.ЗаключаетсяПоРезультатамКонкурсныхПроцедур
	|									И Договоры.РезультатЗавершенияКонкурсныхПроцедур = 1
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринятоеОбязательствоКонкурсныеПроцедуры)
	|							КОГДА Договоры.ЗаключаетсяПоРезультатамКонкурсныхПроцедур
	|									И (Договоры.РезультатЗавершенияКонкурсныхПроцедур = 0
	|										ИЛИ Договоры.РезультатЗавершенияКонкурсныхПроцедур = 2)
	|								ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|							ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринятоеОбязательствоУчетПредмета)
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	#Вставка
	|				"+?(ТипЗнч(ОснованиеЗаполнения) = Тип("ДокументСсылка.РегистрацияОбязательствИСведенийПоДоговорам"),"КОГДА ЕСТЬNULL(СрокиСуммы.Регистратор, 0) <> 0","КОГДА ЕСТЬNULL(СрокиСуммы.Регистратор, 0) <> 0
	|				И	Договоры.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ИноеОбязательство)")+"
	#КонецВставки
	#Удаление
	|				КОГДА ЕСТЬNULL(СрокиСуммы.Регистратор, 0) <> 0
	#КонецУдаления 
	|					ТОГДА ВЫБОР
	|								КОГДА (СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоПеререгистрация))
	|										И Договоры.РезультатЗавершенияКонкурсныхПроцедур = 1
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринятоеОбязательствоКонкурсныеПроцедуры)
	|								КОГДА (СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоПеререгистрация))
	|										И Договоры.РезультатЗавершенияКонкурсныхПроцедур = 2
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ОтказОтДоговораКонкурсныеПроцедуры)
	| //Изменение принимаемого
	|								КОГДА (СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	|                                    ИЛИ СрокиСуммы.ВидОбязательства = ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоПеререгистрация))
	|										И НЕ Договоры.ПризнакЗавершенияКонкурсныхПроцедур
	|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения)
	| //Изменение принимаемого
	|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ЗаявкаНаИзменениеОбязательства)
	|							КОНЕЦ
	|		ИНАЧЕ ВЫБОР 
	|				КОГДА Договоры.ЗаключаетсяПоРезультатамКонкурсныхПроцедур
	|					И (Договоры.РезультатЗавершенияКонкурсныхПроцедур = 0
	|					ИЛИ Договоры.РезультатЗавершенияКонкурсныхПроцедур = 2)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринимаемоеОбязательство)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПринятыхОбязательств.ПринятоеОбязательство)	
	|			  КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ КАК ВидОбязательства,
	|	СрокиСуммы.НачалоДействия,
	|	СрокиСуммы.НачалоДействия КАК НачалоДействияДоИзменений,
	|	СрокиСуммы.ОкончаниеДействия,
	|	СрокиСуммы.ОкончаниеДействия КАК ОкончаниеДействияДоИзменений,
	|	СрокиСуммы.ВалютаРасчетов КАК ВалютаДокумента,
	|	СрокиСуммы.АвансПроцентом,
	|	СрокиСуммы.СуммаАванса,
	|	СрокиСуммы.Сумма,
	|	СрокиСуммы.СуммаВВалюте,
	|	СрокиСуммы.КурсРасчетов КАК Курс,
	|	СрокиСуммы.КратностьРасчетов КАК Кратность,
	|	ЕСТЬNULL(СрокиСуммы.ЛицевойСчет, Договоры.ОтдельныйСчетДляРасчетовПоГОЗ) КАК ЛицевойСчет,
	|	СрокиСуммы.ОрганКазначейства КАК ОрганКазначейства,
	|	СрокиСуммы.ИФО КАК ИФО,
	|	ВЫБОР
	|		КОГДА Договоры.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ИноеОбязательство)
	|			ТОГДА СрокиСуммы.Регистратор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Основание,
	|	Договоры.УчетПредметаДоговора,
	|	СрокиСуммы.СрокИсполнения,
	|	СрокиСуммы.СрокИсполнения КАК СрокИсполненияДоИзменений,
	|	Договоры.ВидДоговора,
	|	ВЫБОР
	|		КОГДА СрокиСуммы.Регистратор ССЫЛКА Документ.РегистрацияОбязательствИСведенийПоДоговорам
	|			ТОГДА СрокиСуммы.Регистратор.РеквизитыЛицевогоСчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.РеквизитыЛицевыхСчетов.ПустаяСсылка)
	|	КОНЕЦ КАК РеквизитыЛицевогоСчета,
	|	ВЫБОР
	|		КОГДА СрокиСуммы.Регистратор ССЫЛКА Документ.РегистрацияОбязательствИСведенийПоДоговорам
	|			ТОГДА ЕстьNULL(СрокиСуммы.Регистратор.НомерИзменения, -1) + 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		Договоры.Ссылка КАК Договор,
	|		Договоры.Организация КАК Организация,
	|		Договоры.Контрагент КАК Контрагент,
	|		Договоры.СчетКонтрагента КАК СчетКонтрагента,
	|		Договоры.ВидДоговора КАК ВидДоговора,
	|		Договоры.УчетПредметаДоговора КАК УчетПредметаДоговора,
	|		Договоры.ЗаключаетсяПоРезультатамКонкурсныхПроцедур КАК ЗаключаетсяПоРезультатамКонкурсныхПроцедур,
	|		Договоры.РезультатЗавершенияКонкурсныхПроцедур КАК РезультатЗавершенияКонкурсныхПроцедур,
	|		Договоры.ПризнакЗавершенияКонкурсныхПроцедур КАК ПризнакЗавершенияКонкурсныхПроцедур,
	|		Договоры.ОтдельныйСчетДляРасчетовПоГОЗ КАК ОтдельныйСчетДляРасчетовПоГОЗ
	|	ИЗ
	|		Справочник.Договоры КАК Договоры
	|	ГДЕ
	|		Договоры.Ссылка = &Договор) КАК Договоры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиИсполненияИСуммыОбязательств.СрезПоследних(
	|				&Период,
	|				Обязательство = &Договор
	|					И &УсловиеРегистратор) КАК СрокиСуммы
	|		ПО Договоры.Договор = СрокиСуммы.Обязательство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПФОСрезПоследних.КлючАналитики.КФО КАК КФО,
	|	ПФОСрезПоследних.КлючАналитики.КПС КАК КПС,
	|	ПФОСрезПоследних.КлючАналитики.КЭК КАК КЭК,
	|	ПФОСрезПоследних.КлючАналитики.ОбъектФАИП КАК ОбъектФАИП,
	|	ПФОСрезПоследних.КлючАналитики.Подразделение КАК Подразделение,
	|	ПФОСрезПоследних.КлючАналитики.Номенклатура КАК Номенклатура,
	|	ПФОСрезПоследних.КлючАналитики.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПФОСрезПоследних.КлючАналитики.ПериодПлана КАК ПериодПлана,
	|	ПФОСрезПоследних.КлючАналитики.РазделЛицевогоСчета КАК РазделЛицевогоСчета,
	|	ПФОСрезПоследних.КлючАналитики.КодЦели КАК КодЦели,
	|	ПФОСрезПоследних.КлючАналитики.КодМероприятия КАК КодМероприятия,
	|	ПФОСрезПоследних.КлючАналитики.ДопКлассификация КАК ДопКлассификация,
	|	ПФОСрезПоследних.Количество,
	|	ПФОСрезПоследних.Сумма,
	|	ПФОСрезПоследних.СуммаВВалюте,
	|	ПФОСрезПоследних.СуммаВВалютеБезусловная,
	|	ПФОСрезПоследних.СуммаИсполнено,
	|	ПФОСрезПоследних.СуммаИсполненоБезусловно,
	|	ИСТИНА КАК ЗапретИзменения,
	|	ПФОСрезПоследних.ОКП КАК ОКП
	|ИЗ
	|	РегистрСведений.ПланФинансированияОбязательств.СрезПоследних(
	|			&Период,
	|			Обязательство = &Договор
	|				И &УсловиеРегистратор) КАК ПФОСрезПоследних
	|ГДЕ
	|	(ПФОСрезПоследних.Количество <> 0
	|			ИЛИ ПФОСрезПоследних.Сумма <> 0
	|			ИЛИ ПФОСрезПоследних.СуммаВВалюте <> 0
	|			ИЛИ ПФОСрезПоследних.СуммаВВалютеБезусловная <> 0
	|			ИЛИ ПФОСрезПоследних.СуммаИсполнено <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПФОСрезПоследних.КлючАналитики.ОбъектФАИП,
	|	ПФОСрезПоследних.КлючАналитики.ПериодПлана.ДатаНачала,
	|	КФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыКонтрагенты.Контрагент,
	|	ДоговорыКонтрагенты.СчетКонтрагента
	|ИЗ
	|	Справочник.Договоры.Контрагенты КАК ДоговорыКонтрагенты
	|ГДЕ
	|	ДоговорыКонтрагенты.Ссылка = &Договор";
	   
	Запрос.УстановитьПараметр("Период", ?(ЭтоНовый(), ТекущаяДата(), Дата));
	Запрос.УстановитьПараметр("Договор", Договор);
	
	Если ТипЗнч(ОснованиеЗаполнения) = Тип("ДокументСсылка.РегистрацияОбязательствИСведенийПоДоговорам") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеРегистратор", "Регистратор = &Регистратор");
		Запрос.УстановитьПараметр("Регистратор", ОснованиеЗаполнения);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеРегистратор", "Регистратор <> &Регистратор");
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.ВыполнитьПакет();
	
	Контрагенты.Очистить();
	
	// Заполним данные шапки
	СтруктураШапки = Результат[0].Выбрать();
	СтруктураШапки.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураШапки);
	
	СписокКонтрагентов = Результат[2].Выбрать();
	Пока СписокКонтрагентов.Следующий() Цикл
		
		НовКонтрагент = Контрагенты.Добавить();
		ЗаполнитьЗначенияСвойств(НовКонтрагент, СписокКонтрагентов);
		
	КонецЦикла;
	
	// Заполним данные в ТЧ
	ВедетсяУчетОбязательств = УчетРасчетовКлиентСервер.ВедетсяУчетОбязательств(СтруктураШапки.ВидДоговора);
	Если ВедетсяУчетОбязательств
	 И  (ВидОбязательства = Перечисления.ВидыПринятыхОбязательств.ЗаявкаНаИзменениеОбязательства 
	 ИЛИ ВидОбязательства = Перечисления.ВидыПринятыхОбязательств.ЗаявкаНаИзменениеОбязательстваУчетПредмета 
	 ИЛИ ВидОбязательства = Перечисления.ВидыПринятыхОбязательств.ПринятоеОбязательствоКонкурсныеПроцедуры 
	 ИЛИ ВидОбязательства = Перечисления.ВидыПринятыхОбязательств.ОтказОтДоговораКонкурсныеПроцедуры 
	 ИЛИ ВидОбязательства = Перечисления.ВидыПринятыхОбязательств.ПринимаемоеОбязательствоИзменения) Тогда
	 
	    РасшифровкаОбязательстваБюджет.Очистить();
		РасшифровкаОбязательстваВнебюджет.Очистить();
	 
	 	БюджетВнебюджетПоКФО = РаботаСОбязательствамиПовтИсп.ПолучитьБюджетВнебюджетПоКФО();	
		ВыборкаДанных = Результат[1].Выбрать();
		
		Пока ВыборкаДанных.Следующий() Цикл
			
			ИмяТЧ = БюджетВнебюджетПоКФО[ВыборкаДанных.КФО];
			
			Если НЕ ПустаяСтрока(ИмяТЧ) Тогда
				
				ИмяТЧ = "РасшифровкаОбязательства" + ИмяТЧ;
				НоваяСтрока = ЭтотОбъект[ИмяТЧ].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДанных);
				
				Если ВидОбязательства = Перечисления.ВидыПринятыхОбязательств.ОтказОтДоговораКонкурсныеПроцедуры Тогда
					// сторно всех показателей
					НоваяСтрока.Количество 				= 0;
					НоваяСтрока.Сумма 					= 0;
					НоваяСтрока.СуммаВВалюте  			= 0;     
					НоваяСтрока.СуммаВВалютеБезусловная = 0;
				КонецЕсли;
			
			КонецЕсли;                                                                                  
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	Если ВалютаДокумента.Пустая() Тогда
		
		ВалютаДокумента = ОбщегоНазначенияБГУПовтИсп.ПолучитьВалютуРегламентированногоУчета();
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, ?(ЭтоНовый(), ТекущаяДата(), Дата));
		Курс = СтруктураКурса.Курс;
		Кратность = СтруктураКурса.Кратность;
		
	КонецЕсли; 
	
	КонтрольИсполненияДоговоров.ЗаполнитьГрафикиИсполненияПоДоговору(ЭтотОбъект, Договор, ОснованиеЗаполнения);
	
КонецПроцедуры

&Вместо("ПроверитьЗаполнениеТабЧастейЗаявкиНаИзменение")
Процедура АБК_ПроверитьЗаполнениеТабЧастейЗаявкиНаИзменение(Отказ, ПроверятьКоличество)

КонецПроцедуры
