
&ИзменениеИКонтроль("ЗаполнитьГрафикиИсполненияПоДоговору")
Процедура АБК_ЗаполнитьГрафикиИсполненияПоДоговору(ДокументОбъект, Договор, ДокументОснование, ВидГрафика)

	МетаданныеДокумента = ДокументОбъект.Метаданные();

	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор,
	"ВидДоговора,ВестиГрафикПлатежей,ВестиПланГрафикИсполнения");
	ВестиГрафикПлатежей = ?(РеквизитыДоговора.ВестиГрафикПлатежей = Неопределено, Ложь, РеквизитыДоговора.ВестиГрафикПлатежей);
	ВестиПланГрафикИсполнения = ?(РеквизитыДоговора.ВестиПланГрафикИсполнения = Неопределено, Ложь, РеквизитыДоговора.ВестиПланГрафикИсполнения);

	ЗаполнятьГрафикПлатежей = (ВидГрафика = "ГрафикПлатежей") ИЛИ НЕ ЗначениеЗаполнено(ВидГрафика);
	ЗаполнятьПланГрафикИсполнения = (ВидГрафика = "ПланГрафикИсполнения") ИЛИ НЕ ЗначениеЗаполнено(ВидГрафика);

	// Отбор плановых данных для заполнения.
	Отбор = Новый Структура("Контрагент,Договор");
	ЗаполнитьЗначенияСвойств(Отбор, ДокументОбъект);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоИФО")                  
		#Удаление
		И ОбщегоНазначенияБГУ.ЕстьРеквизитДокумента("ИФО", МетаданныеДокумента)
		И ЗначениеЗаполнено(ДокументОбъект.ИФО) Тогда     
		#КонецУдаления
		#Вставка  
		И ОбщегоНазначенияБГУ.ЕстьРеквизитДокумента("ИФО", МетаданныеДокумента) Тогда
		
		Если ТипЗнч(ДокументОбъект) <> Тип("ДокументОбъект.РегистрацияОбязательствИСведенийПоДоговорам")
			ИЛИ ЗначениеЗаполнено(ДокументОбъект.ИФО) Тогда
			#КонецВставки
			
			Отбор.Вставить("ИФО", ДокументОбъект.ИФО);  
			
			#Вставка
		КонецЕсли;
		#КонецВставки
	КонецЕсли;

	// Первоначальное заполнение графика платежей актуальными данными из регистров (AS-IS).
	Если ВестиГрафикПлатежей И ЗаполнятьГрафикПлатежей Тогда

		ДокументОбъект.ГрафикПлатежей.Очистить(); // Первоначальное заполнение, очищаем все имеющиеся данные.

		НеисполненныеПлатежи = Новый ТаблицаЗначений;
		Если РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком
			ИЛИ РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ПолученныйКредит
			ИЛИ РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВыпускЦенныхБумаг
			ИЛИ РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СоглашениеОСубсидии Тогда

			НеисполненныеПлатежи = КонтрольИсполненияДоговоров.НеисполненныеПлатежиПоставщикамКредиторам(
			Отбор, ДокументОбъект.Организация);

		ИначеЕсли РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем
			ИЛИ РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СОтправителемТрансферта
			ИЛИ РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ПредоставленныйКредит Тогда

			НеисполненныеПлатежи = КонтрольИсполненияДоговоров.НеисполненныеПлатежиОтПокупателейДебиторов(
			Отбор, ДокументОбъект.Организация);

		КонецЕсли;

		Если Не ЗначениеЗаполнено(ДокументОбъект.ВалютаДокумента)
			И НеисполненныеПлатежи.Количество() > 0 Тогда
			// Определяем валюту по первой строке графика, т.к. она должна быть единой для всего договора.
			ДокументОбъект.ВалютаДокумента = НеисполненныеПлатежи[0].Валюта;
		КонецЕсли;

		Для Каждого НеисполненныйПлатеж Из НеисполненныеПлатежи Цикл

			Если НеисполненныйПлатеж.Валюта <> ДокументОбъект.ВалютаДокумента Тогда
				Продолжить;
			КонецЕсли;

			НоваяСтрока = ДокументОбъект.ГрафикПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НеисполненныйПлатеж);

			НоваяСтрока.ЗапретИзменения = Истина;

			НоваяСтрока.СуммаВВалютеДоИзменений    = НеисполненныйПлатеж.Сумма;
			НоваяСтрока.СуммаВВалютеПослеИзменений = НеисполненныйПлатеж.Сумма;
			НоваяСтрока.СуммаВВалюте = 0;

		КонецЦикла;

		ДокументОбъект.ГрафикПлатежей.Сортировать("ОплатитьДо,ВидРасчетов,СчетРасчетов");

	КонецЕсли;

	// Первоначальное заполнение графика закупок (реализации) актуальными данными из регистров (AS-IS).
	Если ВестиПланГрафикИсполнения И ЗаполнятьПланГрафикИсполнения Тогда

		ДокументОбъект.ГрафикИсполнения.Очистить(); // Первоначальное заполнение, очищаем все имеющиеся данные.

		НеисполненныеОбязательства = Новый ТаблицаЗначений;
		Если РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда

			НеисполненныеОбязательства = КонтрольИсполненияДоговоров.НеисполненныеОбязательстваПоставщиков(
			Отбор, ДокументОбъект.Организация);

		ИначеЕсли РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем
			ИЛИ РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СОтправителемТрансферта Тогда

			НеисполненныеОбязательства = КонтрольИсполненияДоговоров.НеисполненныеДоговораСПокупателями(
			Отбор, ДокументОбъект.Организация);

		КонецЕсли;

		Если Не ЗначениеЗаполнено(ДокументОбъект.ВалютаДокумента)
			И НеисполненныеОбязательства.Количество() > 0 Тогда
			// Определяем валюту по первой строке графика, т.к. она должна быть единой для всего договора.
			ДокументОбъект.ВалютаДокумента = НеисполненныеОбязательства[0].Валюта;
		КонецЕсли;

		Для Каждого НеисполненноеОбязательство Из НеисполненныеОбязательства Цикл

			Если НеисполненноеОбязательство.Валюта <> ДокументОбъект.ВалютаДокумента Тогда
				Продолжить;
			КонецЕсли;

			НоваяСтрока = ДокументОбъект.ГрафикИсполнения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НеисполненноеОбязательство);

			НоваяСтрока.ЗапретИзменения = Истина;

			НоваяСтрока.СуммаВВалютеДоИзменений    = НеисполненноеОбязательство.Сумма;
			НоваяСтрока.СуммаВВалютеПослеИзменений = НеисполненноеОбязательство.Сумма;
			НоваяСтрока.СуммаВВалюте = 0;

		КонецЦикла;

		ДокументОбъект.ГрафикИсполнения.Сортировать("ИсполнитьДо,СчетРасчетов");

	КонецЕсли;

	// Добавим суммы в графики по данным документа-основания (TO-BE).
	// Из документов-оснований интересуют только документы оплаты (плюс, счета на оплату) и документы поступления (отгрузки),
	// т.к. из документов планирования все данные уже взяли на предыдущем этапе из регистров.
	Если ЗначениеЗаполнено(ДокументОснование)
		И НЕ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РегистрацияОбязательствИСведенийПоДоговорам")
		И НЕ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РегистрацияГрафиковИсполненияДоговоров") Тогда

		ЗаполанироватьОплату = Ложь;
		ЗаполанироватьПоступлениеОтгрузку = Ложь;
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РасходныйКассовыйОрдер")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КассовоеПоступление")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КассовоеВыбытие")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПлатежноеПоручение")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаКассовыйРасход")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаКассовыйРасходСокращенная")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВозврат") Тогда
			ЗаполанироватьПоступлениеОтгрузку = Истина;
		Иначе
			ЗаполанироватьОплату = Истина;
		КонецЕсли;

		Если ЗаполанироватьОплату И ЗаполнятьГрафикПлатежей Тогда

			ПроводкиПоступлениеАктивов   = БухгалтерскийУчет.ПроводкиДокументов(ДокументОснование, "302.00", "Кт").Выгрузить();
			ПроводкиЗачетАвансовВыданных = БухгалтерскийУчет.ПроводкиДокументов(ДокументОснование, "302.00", "Дт", "206.00").Выгрузить();

			// Рассчитаем суммы поступлений с учетом их оплаты авансом.
			ПроводкиПоступлениеАктивов.Колонки.Добавить("ОплаченоАвансом", Новый ОписаниеТипов("Число"));
			Для Каждого ЗачетАвансовВыданных Из ПроводкиЗачетАвансовВыданных Цикл

				Отбор = Новый Структура("Организация,ИФО,КФО");
				ЗаполнитьЗначенияСвойств(Отбор, ЗачетАвансовВыданных);
				Отбор.Вставить("СчетКт",      ЗачетАвансовВыданных.СчетДт);
				Отбор.Вставить("КПСКт",       ЗачетАвансовВыданных.КПСДт);
				Отбор.Вставить("СубконтоКт1", ЗачетАвансовВыданных.СубконтоДт1);
				Отбор.Вставить("СубконтоКт2", ЗачетАвансовВыданных.СубконтоДт2);
				Отбор.Вставить("СубконтоКт3", ЗачетАвансовВыданных.СубконтоДт3);
				НайденныеПроводки = ПроводкиПоступлениеАктивов.НайтиСтроки(Отбор);

				ОбщегоНазначенияБГУ.РаспределитьСуммуПоСтрокамТаблицы(ЗачетАвансовВыданных.Сумма,
				НайденныеПроводки, "ОплаченоАвансом", "Сумма");

			КонецЦикла;

			ПроводкиПоступлениеАктивов.Свернуть("КФО,СчетКт,КПСКт,СубконтоКт1,СубконтоКт2,КЭКДт", "Сумма, ОплаченоАвансом");
			АктуальныйГрафикПлатежей = ДокументОбъект.ГрафикПлатежей.Выгрузить();
			Для Каждого ПоступлениеАктивов Из ПроводкиПоступлениеАктивов Цикл

				Если ПоступлениеАктивов.СубконтоКт1 <> ДокументОбъект.Контрагент
					ИЛИ ПоступлениеАктивов.СубконтоКт2 <> ДокументОбъект.Договор Тогда
					Продолжить;
				КонецЕсли;

				// По графику платежей определим уже запланированную сумму платежей.
				Отбор = Новый Структура;
				Отбор.Вставить("КФО", ПоступлениеАктивов.КФО);
				Отбор.Вставить("КПС", ПоступлениеАктивов.КПСКт);
				Отбор.Вставить("КЭК", ПоступлениеАктивов.КЭКДт);
				Отбор.Вставить("СчетРасчетов", ПоступлениеАктивов.СчетКт);
				УжеЗапланированныеПлатежи = АктуальныйГрафикПлатежей.Скопировать(Отбор, "СуммаВВалютеДоИзменений").Итог("СуммаВВалютеДоИзменений");

				// Превышение поступлений над запланированной суммой платежей добавим в график отдельной строкой.
				НоваяСтрока = ДокументОбъект.ГрафикПлатежей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Отбор);
				НоваяСтрока.ЗапретИзменения = Ложь;
				НоваяСтрока.ВидРасчетов = Перечисления.ВидыРасчетовПоЗаймам.ОсновнойДолг; // по умолчанию
				НоваяСтрока.СуммаВВалюте = (ПоступлениеАктивов.Сумма - ПоступлениеАктивов.ОплаченоАвансом) - УжеЗапланированныеПлатежи;

			КонецЦикла;

		КонецЕсли;

		Если ЗаполанироватьПоступлениеОтгрузку И ЗаполнятьПланГрафикИсполнения Тогда

			ПроводкиАвансыВыданные = БухгалтерскийУчет.ПроводкиДокументов(ДокументОснование, "206.00", "Дт").Выгрузить();
			ПроводкиАвансыВыданные.Свернуть("КФО,СчетДт,КПСДт,СубконтоДт1,СубконтоДт2", "Сумма");

			АктуальныйГрафикИсполнения = ДокументОбъект.ГрафикИсполнения.Выгрузить();
			Для Каждого АвансВыданный Из ПроводкиАвансыВыданные Цикл

				Если АвансВыданный.СубконтоДт1 <> ДокументОбъект.Контрагент
					ИЛИ АвансВыданный.СубконтоДт1 <> ДокументОбъект.Договор Тогда
					Продолжить;
				КонецЕсли;

				// По графику поставок определим уже запланированную сумму поставок.
				Отбор = Новый Структура;
				Отбор.Вставить("КФО", АвансВыданный.КФО);
				Отбор.Вставить("КПС", АвансВыданный.КПСДт);
				Отбор.Вставить("КЭК", БухгалтерскийУчетПовтИсп.АналитическийКЭКпоСчету(АвансВыданный.СчетДт));
				Отбор.Вставить("СчетРасчетов", АвансВыданный.СчетДт);
				УжеЗапланированныеПоступления = АктуальныйГрафикИсполнения.Скопировать(Отбор, "СуммаВВалютеДоИзменений").Итог("СуммаВВалютеДоИзменений");

				// Превышение выданных авансов над запланированной суммой поступлений добавим в график отдельной строкой.
				НоваяСтрока = ДокументОбъект.ГрафикИсполнения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Отбор);
				НоваяСтрока.ЗапретИзменения = Ложь;
				НоваяСтрока.СуммаВВалюте = АвансВыданный.Сумма - УжеЗапланированныеПоступления;

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры