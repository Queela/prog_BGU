
&НаСервере
Процедура АБК_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	Элемент = Элементы.Добавить("РасшифровкаОбязательстваБюджетИФО", Тип("ПолеФормы"), Элементы.РасшифровкаОбязательстваБюджет);
	Элемент.ПутьКДанным = "Объект.РасшифровкаОбязательстваБюджет.ИФО";
	Элемент.Заголовок	= "ИФО";
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	
	Элемент = Элементы.Добавить("РасшифровкаОбязательстваВнебюджетИФО", Тип("ПолеФормы"), Элементы.РасшифровкаОбязательстваВнебюджет);
	Элемент.ПутьКДанным = "Объект.РасшифровкаОбязательстваВнебюджет.ИФО";
	Элемент.Заголовок	= "ИФО";
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	
	Элемент = Элементы.Добавить("ГрафикПлатежейИФО", Тип("ПолеФормы"), Элементы.ГрафикПлатежей);
	Элемент.ПутьКДанным = "Объект.ГрафикПлатежей.ИФО";
	Элемент.Заголовок	= "ИФО";
	Элемент.Вид			= ВидПоляФормы.ПолеВвода; 
	
	Элемент = Элементы.Добавить("ГрафикИсполненияИФО", Тип("ПолеФормы"), Элементы.ГрафикИсполнения);
	Элемент.ПутьКДанным = "Объект.ГрафикИсполнения.ИФО";
	Элемент.Заголовок	= "ИФО";
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	
	Элементы.РасшифровкаОбязательстваВнебюджетКФО.РежимВыбораИзСписка 						= Ложь;
	Элементы.РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчета.РежимВыбораИзСписка 	 	= Ложь;
	Элементы.РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчета.КнопкаВыпадающегоСписка 	= Ложь;
	Элементы.РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчета.КнопкаВыбора				= Истина;
	Элементы.РасшифровкаОбязательстваБюджетКФО.РежимВыбораИзСписка 							= Ложь;
	Элементы.РасшифровкаОбязательстваБюджетРазделЛицевогоСчета.РежимВыбораИзСписка 			= Ложь;
	Элементы.РасшифровкаОбязательстваБюджетРазделЛицевогоСчета.КнопкаВыпадающегоСписка 		= Ложь;
	Элементы.РасшифровкаОбязательстваБюджетРазделЛицевогоСчета.КнопкаВыбора 				= Истина;
	
	Элементы.ЛицевойСчет.АвтоОтметкаНезаполненного 	= Ложь;
	Элементы.ИФО.АвтоОтметкаНезаполненного 			= Ложь;
	
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("РасшифровкаОбязательстваБюджетРазделЛицевогоСчетаНачалоВыбора")
Процедура АБК_РасшифровкаОбязательстваБюджетРазделЛицевогоСчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	#Удаление
	ТекущаяСтрока = Элементы.РасшифровкаОбязательстваБюджет.ТекущиеДанные;
	Элемент.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.РазделыЛСпоКФО[ТекущаяСтрока.КФО]);
	#КонецУдаления
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчетаНачалоВыбора")
Процедура АБК_РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	#Удаление
	Если НЕ ЗначениеЗаполнено(Объект.ЛицевойСчет) Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.РасшифровкаОбязательстваВнебюджет.ТекущиеДанные;
	Элемент.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.РазделыЛСпоКФО[ТекущаяСтрока.КФО]);
	#КонецУдаления
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("РасшифровкаОбязательстваБюджетКФОНачалоВыбораИзСписка")
Процедура АБК_РасшифровкаОбязательстваБюджетКФОНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	#Удаление
	Если Объект.ЛицевойСчет.Пустая() Тогда
		СтандартнаяОбработка = Ложь;
		Текст = "ru = ""Укажите лицевой счет!""";
		ПоказатьПредупреждение(Неопределено, НСтр(Текст), 10);
	КонецЕсли; 
	#КонецУдаления
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("УстановитьСпискиВыбораКФО")
Процедура АБК_УстановитьСпискиВыбораКФО()
	#Удаление
	Элементы.РасшифровкаОбязательстваБюджетКФО.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.КФОпоЛСБюджет);
	Элементы.РасшифровкаОбязательстваБюджетКФО.СписокВыбора.СортироватьПоЗначению();
	
	Если ЗначениеЗаполнено(Объект.ЛицевойСчет) Тогда
		Элементы.РасшифровкаОбязательстваВнебюджетКФО.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.КФОпоЛСВнебюджет);	
	Иначе	
		Элементы.РасшифровкаОбязательстваВнебюджетКФО.СписокВыбора.ЗагрузитьЗначения(ДопустимыекКФООрганизации.ВыгрузитьЗначения());
	КонецЕсли;	
	Элементы.РасшифровкаОбязательстваВнебюджетКФО.СписокВыбора.СортироватьПоЗначению();
	#КонецУдаления
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьДанныеДоИзменений")
Процедура АБК_ЗаполнитьДанныеДоИзменений()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ДанныеДоИзменений.КлючАналитики.ОбъектФАИП КАК ОбъектФАИП,
	|	ДанныеДоИзменений.КлючАналитики.Подразделение КАК Подразделение,
	|	ДанныеДоИзменений.КлючАналитики.КФО КАК КФО,
	#Вставка
	|	ДанныеДоИзменений.ИФО КАК ИФО,
	#КонецВставки
	|	ДанныеДоИзменений.КлючАналитики.КПС КАК КПС,
	|	ДанныеДоИзменений.КлючАналитики.КЭК КАК КЭК,
	|	ДанныеДоИзменений.КлючАналитики.Номенклатура КАК Номенклатура,
	|	ДанныеДоИзменений.КлючАналитики.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ДанныеДоИзменений.КлючАналитики.ПериодПлана КАК ПериодПлана,
	|	ДанныеДоИзменений.КлючАналитики.РазделЛицевогоСчета КАК РазделЛицевогоСчета,
	|	ДанныеДоИзменений.КлючАналитики.КодЦели КАК КодЦели,
	|	ДанныеДоИзменений.КлючАналитики.КодМероприятия КАК КодМероприятия,
	|	ДанныеДоИзменений.КлючАналитики.ДопКлассификация КАК ДопКлассификация,
	|	ДанныеДоИзменений.ОКП КАК ОКП,
	|	ДанныеДоИзменений.Количество КАК Количество,
	|	ДанныеДоИзменений.Сумма КАК Сумма,
	|	ДанныеДоИзменений.СуммаВВалюте КАК СуммаВВалюте,
	|	ДанныеДоИзменений.СуммаВВалютеБезусловная
	|ИЗ
	|	РегистрСведений.ПланФинансированияОбязательств.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Регистратор
	|				И Обязательство = &Договор) КАК ДанныеДоИзменений";
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	Запрос.УстановитьПараметр("Договор", Объект.Договор);
	
	ТаблицаДоИзменений = Запрос.Выполнить().Выгрузить();
	#Удаление
	СтруктураПоиска = Новый Структура("ОбъектФАИП, Подразделение, КФО, КПС, КЭК, Номенклатура, ОКП, ЕдиницаИзмерения, ПериодПлана, РазделЛицевогоСчета, КодЦели, КодМероприятия, ДопКлассификация"); 
	#КонецУдаления
	#Вставка
	СтруктураПоиска = Новый Структура("ОбъектФАИП, Подразделение, КФО, ИФО, КПС, КЭК, Номенклатура, ОКП, ЕдиницаИзмерения, ПериодПлана, РазделЛицевогоСчета, КодЦели, КодМероприятия, ДопКлассификация");
	#КонецВставки
	Для каждого СтрокаТЧ Из Объект.РасшифровкаОбязательстваБюджет Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ);		
		МассивСтрок = ТаблицаДоИзменений.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() > 0 Тогда
			
			НайденнаяСтрока = МассивСтрок[0];
			СтрокаТЧ.КоличествоДоИзменений 				= НайденнаяСтрока.Количество;
			СтрокаТЧ.СуммаДоИзменений 					= НайденнаяСтрока.Сумма;
			СтрокаТЧ.СуммаВВалютеДоИзменений 			= НайденнаяСтрока.СуммаВВалюте;
			СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений = НайденнаяСтрока.СуммаВВалютеБезусловная;
			
		КонецЕсли; 
		
		СтрокаТЧ.КоличествоИзменения 				= СтрокаТЧ.Количество 	- СтрокаТЧ.КоличествоДоИзменений;
		СтрокаТЧ.СуммаИзменения 					= СтрокаТЧ.Сумма 		- СтрокаТЧ.СуммаДоИзменений;
		СтрокаТЧ.СуммаВВалютеИзменения 				= СтрокаТЧ.СуммаВВалюте - СтрокаТЧ.СуммаВВалютеДоИзменений;
		СтрокаТЧ.СуммаВВалютеБезусловнаяИзменения 	= СтрокаТЧ.СуммаВВалютеБезусловная - СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений;
		
	КонецЦикла; 
	
	Для каждого СтрокаТЧ Из Объект.РасшифровкаОбязательстваВнебюджет Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ);		
		МассивСтрок = ТаблицаДоИзменений.НайтиСтроки(СтруктураПоиска);
		
		Если МассивСтрок.Количество() > 0 Тогда
			
			НайденнаяСтрока = МассивСтрок[0];
			СтрокаТЧ.КоличествоДоИзменений 				= НайденнаяСтрока.Количество;
			СтрокаТЧ.СуммаДоИзменений 					= НайденнаяСтрока.Сумма;
			СтрокаТЧ.СуммаВВалютеДоИзменений 			= НайденнаяСтрока.СуммаВВалюте;
			СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений = НайденнаяСтрока.СуммаВВалютеБезусловная;
			
		КонецЕсли; 
		
		СтрокаТЧ.КоличествоИзменения 				= СтрокаТЧ.Количество - СтрокаТЧ.КоличествоДоИзменений;
		СтрокаТЧ.СуммаИзменения 					= СтрокаТЧ.Сумма - СтрокаТЧ.СуммаДоИзменений;
		СтрокаТЧ.СуммаВВалютеИзменения 				= СтрокаТЧ.СуммаВВалюте - СтрокаТЧ.СуммаВВалютеДоИзменений;
		СтрокаТЧ.СуммаВВалютеБезусловнаяИзменения 	= СтрокаТЧ.СуммаВВалютеБезусловная - СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьГрафикПлатежейНаСервере")
Процедура АБК_ЗаполнитьГрафикПлатежейНаСервере()
	
	ЗаполнитьСуммуИзмененияОбязательств = ЗаполнитьСуммуИзмененияОбязательствВГрафиках(ЭтоДокументКорректировка, Объект.ВидОбязательства);
	СуффиксИмениПоказателя = ?(ЗаполнитьСуммуИзмененияОбязательств, "Изменения", "");
	
	ОчиститьИзмененияГрафика(Объект.ГрафикПлатежей, ЗаполнитьСуммуИзмененияОбязательств);
	
	ПериодыПлана = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПериодыПлана,
		Объект.РасшифровкаОбязательстваБюджет.Выгрузить(,"ПериодПлана").ВыгрузитьКолонку("ПериодПлана"), Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПериодыПлана,
		Объект.РасшифровкаОбязательстваВнебюджет.Выгрузить(,"ПериодПлана").ВыгрузитьКолонку("ПериодПлана"), Истина);
	РеквизитыПериодов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ПериодыПлана, "ДатаНачала,ДатаОкончания");
	
	// Временная таблица с суммами изменений графика платежей.
	#Удаление
	ГрафикПлатежейИзменения = Объект.ГрафикПлатежей.Выгрузить(, "КФО,КПС,КЭК,КодЦели,КодМероприятия,ДопКлассификация,СчетРасчетов,ВидРасчетов,ОплатитьДо");
	#КонецУдаления
	#Вставка
	ГрафикПлатежейИзменения = Объект.ГрафикПлатежей.Выгрузить(, "КФО,КПС,КЭК,КодЦели,КодМероприятия,ДопКлассификация,СчетРасчетов,ВидРасчетов,ОплатитьДо,ИФО");  
	#КонецВставки
	ГрафикПлатежейИзменения.Колонки.Добавить("СуммаВВалюте", ОбщегоНазначенияБГУ.ПолучитьОписаниеТиповЧисла(15, 2));
	ГрафикПлатежейИзменения.Очистить();
	
	ТабЧастиОбязательств = Новый Массив;
	ТабЧастиОбязательств.Добавить("РасшифровкаОбязательстваБюджет");
	ТабЧастиОбязательств.Добавить("РасшифровкаОбязательстваВнебюджет");
	
	Для Каждого ТабЧасть Из ТабЧастиОбязательств Цикл
	
		Для Каждого СтрокаОбязательств Из Объект[ТабЧасть] Цикл
			
			СуммаВВалютеБезусловная = СтрокаОбязательств["СуммаВВалютеБезусловная" + СуффиксИмениПоказателя];
			СуммаВВалюте = СтрокаОбязательств["СуммаВВалюте" + СуффиксИмениПоказателя];
			
			Если СуммаВВалютеБезусловная <> 0 Тогда // Аванс.
				
				НоваяСтрока = ГрафикПлатежейИзменения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОбязательств,
				#Вставка
				"ИФО," +
				#КонецВставки
					"КФО,КПС,КЭК,КодЦели,КодМероприятия,ДопКлассификация");
				
				НоваяСтрока.СуммаВВалюте = СуммаВВалютеБезусловная;
				
				НоваяСтрока.СчетРасчетов = БухгалтерскийУчет.ПолучитьАналитическийСчетПоКЭК(
					НоваяСтрока.КЭК, "302.00",, Объект.Дата, Объект.Организация, Объект.ИФО);
				
				// Дата оплаты по умолчанию - конец выбранного периода.
				НоваяСтрока.ОплатитьДо  = РеквизитыПериодов[СтрокаОбязательств.ПериодПлана].ДатаНачала;
				НоваяСтрока.ВидРасчетов = Перечисления.ВидыРасчетовПоЗаймам.ОсновнойДолг;
				
			КонецЕсли;
			
			Если СуммаВВалюте - СуммаВВалютеБезусловная <> 0 Тогда // Оплата.
				
				НоваяСтрока = ГрафикПлатежейИзменения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОбязательств,
				#Вставка
				"ИФО," +
				#КонецВставки
					"КФО,КПС,КЭК,КодЦели,КодМероприятия,ДопКлассификация");
				
				НоваяСтрока.СуммаВВалюте = СуммаВВалюте - СуммаВВалютеБезусловная;
				
				НоваяСтрока.СчетРасчетов = БухгалтерскийУчет.ПолучитьАналитическийСчетПоКЭК(
					НоваяСтрока.КЭК, "302.00",, Объект.Дата, Объект.Организация, Объект.ИФО);
				
				// Дата оплаты по умолчанию - конец выбранного периода.
				НоваяСтрока.ОплатитьДо  = РеквизитыПериодов[СтрокаОбязательств.ПериодПлана].ДатаОкончания;
				НоваяСтрока.ВидРасчетов = Перечисления.ВидыРасчетовПоЗаймам.ОсновнойДолг;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ИспользоватьДетализациюПоКОСГУ = КонтрольИсполненияДоговоров.ИспользоватьДетализациюПоКОСГУВГрафикахПоДоговорам(
		ЭтотОбъект.КэшПараметров.Локальные.ВидДоговора);
	ИспользоватьДополнительнуюАналитику = КонтрольИсполненияДоговоров.ИспользоватьДополнительнуюАналитикуВГрафикахПлатежей(
		ЭтотОбъект.КэшПараметров.Локальные.ВидДоговора);
	
	Для Каждого СтрокаГрафика Из ГрафикПлатежейИзменения Цикл
		
		НайденнаяСтрока = Неопределено;
		Если ЗаполнитьСуммуИзмененияОбязательств Тогда // Возможно, в документе уже есть строка с такой аналитикой.
			Отбор = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаГрафика);
			Отбор.Удалить("СуммаВВалюте");
			Если Не ИспользоватьДетализациюПоКОСГУ Тогда
				Отбор.Удалить("КЭК");
			КонецЕсли;
			Если Не ИспользоватьДополнительнуюАналитику Тогда
				Отбор.Удалить("ДопКлассификация");
				Отбор.Удалить("КодМероприятия");
				Отбор.Удалить("КодЦели");
			КонецЕсли;
			НайденныеСтроки = Объект.ГрафикПлатежей.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденнаяСтрока = НайденныеСтроки[0];
			КонецЕсли;
		КонецЕсли;
		
		Если НайденнаяСтрока = Неопределено Тогда // Добавляем новую строку.
			НоваяСтрока = Объект.ГрафикПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаГрафика);
			НоваяСтрока.СуммаВВалютеПослеИзменений =
				НоваяСтрока.СуммаВВалютеДоИзменений + НоваяСтрока.СуммаВВалюте;
		Иначе // Пересчитываем существующую строку.
			НайденнаяСтрока.СуммаВВалюте = НайденнаяСтрока.СуммаВВалюте + СтрокаГрафика.СуммаВВалюте;
			НайденнаяСтрока.СуммаВВалютеПослеИзменений =
				НайденнаяСтрока.СуммаВВалютеДоИзменений + НайденнаяСтрока.СуммаВВалюте;
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.ГрафикПлатежей.Сортировать("ОплатитьДо,СуммаВВалютеДоИзменений УБЫВ,ВидРасчетов,СчетРасчетов");
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьГрафикИсполненияНаСервере")
Процедура АБК_ЗаполнитьГрафикИсполненияНаСервере()
	
	ЗаполнитьСуммуИзмененияОбязательств = ЗаполнитьСуммуИзмененияОбязательствВГрафиках(ЭтоДокументКорректировка, Объект.ВидОбязательства);
	СуффиксИмениПоказателя = ?(ЗаполнитьСуммуИзмененияОбязательств, "Изменения", "");
	
	ОчиститьИзмененияГрафика(Объект.ГрафикИсполнения, ЗаполнитьСуммуИзмененияОбязательств);
	
	ПериодыПлана = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПериодыПлана,
		Объект.РасшифровкаОбязательстваБюджет.Выгрузить(,"ПериодПлана").ВыгрузитьКолонку("ПериодПлана"), Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПериодыПлана,
		Объект.РасшифровкаОбязательстваВнебюджет.Выгрузить(,"ПериодПлана").ВыгрузитьКолонку("ПериодПлана"), Истина);
	РеквизитыПериодов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ПериодыПлана, "ДатаНачала,ДатаОкончания");
	
	// Временная таблица с суммами изменений плана-графика закупок, реализации.
	#Удаление
	ГрафикИсполненияИзменения = Объект.ГрафикИсполнения.Выгрузить(, "КФО,КПС,КЭК,СчетРасчетов,ИсполнитьДо");
	#КонецУдаления
	#Вставка
	ГрафикИсполненияИзменения = Объект.ГрафикИсполнения.Выгрузить(, "КФО,КПС,КЭК,СчетРасчетов,ИсполнитьДо,ИФО");  
	#КонецВставки
	ГрафикИсполненияИзменения.Колонки.Добавить("СуммаВВалюте", ОбщегоНазначенияБГУ.ПолучитьОписаниеТиповЧисла(15, 2));
	ГрафикИсполненияИзменения.Очистить();
	
	ТабЧастиОбязательств = Новый Массив;
	ТабЧастиОбязательств.Добавить("РасшифровкаОбязательстваБюджет");
	ТабЧастиОбязательств.Добавить("РасшифровкаОбязательстваВнебюджет");
	
	Для Каждого ТабЧасть Из ТабЧастиОбязательств Цикл
	
		Для Каждого СтрокаОбязательств Из Объект[ТабЧасть] Цикл
			
			СуммаВВалюте = СтрокаОбязательств["СуммаВВалюте" + СуффиксИмениПоказателя];
			
			Если СуммаВВалюте <> 0 Тогда
				
				НоваяСтрока = ГрафикИсполненияИзменения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОбязательств,
				#Вставка
				"ИФО," +
				#КонецВставки
					"КФО,КПС,КЭК");
				
				НоваяСтрока.СуммаВВалюте = СуммаВВалюте;
				
				НоваяСтрока.СчетРасчетов = БухгалтерскийУчет.ПолучитьАналитическийСчетПоКЭК(
					НоваяСтрока.КЭК, "302.00",, Объект.Дата, Объект.Организация, Объект.ИФО);
				
				// Дата исполнения по умолчанию - конец выбранного периода.
				НоваяСтрока.ИсполнитьДо = РеквизитыПериодов[СтрокаОбязательств.ПериодПлана].ДатаОкончания;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ИспользоватьДетализациюПоКОСГУ = КонтрольИсполненияДоговоров.ИспользоватьДетализациюПоКОСГУВГрафикахПоДоговорам(
		ЭтотОбъект.КэшПараметров.Локальные.ВидДоговора);
	
	Для Каждого СтрокаГрафика Из ГрафикИсполненияИзменения Цикл
		
		НайденнаяСтрока = Неопределено;
		Если ЗаполнитьСуммуИзмененияОбязательств Тогда // Возможно, в документе уже есть строка с такой аналитикой.
			Отбор = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаГрафика);
			Отбор.Удалить("СуммаВВалюте");
			Если Не ИспользоватьДетализациюПоКОСГУ Тогда
				Отбор.Удалить("КЭК");
			КонецЕсли;
			НайденныеСтроки = Объект.ГрафикИсполнения.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденнаяСтрока = НайденныеСтроки[0];
			КонецЕсли;
		КонецЕсли;
		
		Если НайденнаяСтрока = Неопределено Тогда // Добавляем новую строку.
			НоваяСтрока = Объект.ГрафикИсполнения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаГрафика);
			НоваяСтрока.СуммаВВалютеПослеИзменений =
				НоваяСтрока.СуммаВВалютеДоИзменений + НоваяСтрока.СуммаВВалюте;
		Иначе // Пересчитываем существующую строку.
			НайденнаяСтрока.СуммаВВалюте = НайденнаяСтрока.СуммаВВалюте + СтрокаГрафика.СуммаВВалюте;
			НайденнаяСтрока.СуммаВВалютеПослеИзменений =
				НайденнаяСтрока.СуммаВВалютеДоИзменений + НайденнаяСтрока.СуммаВВалюте;
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.ГрафикИсполнения.Сортировать("ИсполнитьДо,СуммаВВалютеДоИзменений УБЫВ,СчетРасчетов");
	
КонецПроцедуры
