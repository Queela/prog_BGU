
&НаСервере
Процедура АБК_ПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	Элемент = Элементы.Добавить("РасшифровкаОбязательстваБюджетИФО", Тип("ПолеФормы"), Элементы.РасшифровкаОбязательстваБюджет);
	Элемент.ПутьКДанным = "Объект.РасшифровкаОбязательстваБюджет.ИФО";
	Элемент.Заголовок	= "ИФО";
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	
	Элемент = Элементы.Добавить("РасшифровкаОбязательстваВнебюджетИФО", Тип("ПолеФормы"), Элементы.РасшифровкаОбязательстваВнебюджет);
	Элемент.ПутьКДанным = "Объект.РасшифровкаОбязательстваВнебюджет.ИФО";
	Элемент.Заголовок	= "ИФО";
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	
	Элементы.РасшифровкаОбязательстваВнебюджетКФО.РежимВыбораИзСписка 						= Ложь;
	Элементы.РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчета.РежимВыбораИзСписка 	 	= Ложь;
	Элементы.РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчета.КнопкаВыпадающегоСписка 	= Ложь;
	Элементы.РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчета.КнопкаВыбора				= Истина;
	Элементы.РасшифровкаОбязательстваБюджетКФО.РежимВыбораИзСписка 							= Ложь;
	Элементы.РасшифровкаОбязательстваБюджетРазделЛицевогоСчета.РежимВыбораИзСписка 			= Ложь;
	Элементы.РасшифровкаОбязательстваБюджетРазделЛицевогоСчета.КнопкаВыпадающегоСписка 		= Ложь;
	Элементы.РасшифровкаОбязательстваБюджетРазделЛицевогоСчета.КнопкаВыбора 				= Истина;
	
	Элементы.ЛицевойСчет.АвтоОтметкаНезаполненного 	= Ложь;
	Элементы.ИФО.АвтоОтметкаНезаполненного 			= Ложь;
	
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("РасшифровкаОбязательстваБюджетРазделЛицевогоСчетаНачалоВыбора")
Процедура АБК_РасшифровкаОбязательстваБюджетРазделЛицевогоСчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	#Удаление
	ТекущаяСтрока = Элементы.РасшифровкаОбязательстваБюджет.ТекущиеДанные;
	Элемент.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.РазделыЛСпоКФО[ТекущаяСтрока.КФО]);
	#КонецУдаления
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчетаНачалоВыбора")
Процедура АБК_РасшифровкаОбязательстваВнебюджетРазделЛицевогоСчетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	#Удаление
	Если НЕ ЗначениеЗаполнено(Объект.ЛицевойСчет) Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;

	ТекущаяСтрока = Элементы.РасшифровкаОбязательстваВнебюджет.ТекущиеДанные;
	Элемент.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.РазделыЛСпоКФО[ТекущаяСтрока.КФО]);
	#КонецУдаления
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("РасшифровкаОбязательстваБюджетКФОНачалоВыбораИзСписка")
Процедура АБК_РасшифровкаОбязательстваБюджетКФОНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	#Удаление
	Если Объект.ЛицевойСчет.Пустая() Тогда
		СтандартнаяОбработка = Ложь;
		Текст = "ru = ""Укажите лицевой счет!""";
		ПоказатьПредупреждение(Неопределено, НСтр(Текст), 10);
	КонецЕсли; 
	#КонецУдаления
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("УстановитьСпискиВыбораКФО")
Процедура АБК_УстановитьСпискиВыбораКФО()
	#Удаление
	Элементы.РасшифровкаОбязательстваБюджетКФО.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.КФОпоЛСБюджет);
	Элементы.РасшифровкаОбязательстваБюджетКФО.СписокВыбора.СортироватьПоЗначению();

	Если ЗначениеЗаполнено(Объект.ЛицевойСчет) Тогда
		Элементы.РасшифровкаОбязательстваВнебюджетКФО.СписокВыбора.ЗагрузитьЗначения(СвойстваЛицевогоСчета.КФОпоЛСВнебюджет);	
	Иначе	
		Элементы.РасшифровкаОбязательстваВнебюджетКФО.СписокВыбора.ЗагрузитьЗначения(ДопустимыекКФООрганизации.ВыгрузитьЗначения());
	КонецЕсли;	
	Элементы.РасшифровкаОбязательстваВнебюджетКФО.СписокВыбора.СортироватьПоЗначению();
	#КонецУдаления
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ЗаполнитьДанныеДоИзменений")
Процедура АБК_ЗаполнитьДанныеДоИзменений()

	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ДанныеДоИзменений.КлючАналитики.ОбъектФАИП КАК ОбъектФАИП,
	|	ДанныеДоИзменений.КлючАналитики.Подразделение КАК Подразделение,
	|	ДанныеДоИзменений.КлючАналитики.КФО КАК КФО,
	#Вставка
	|	ДанныеДоИзменений.ИФО КАК ИФО,
	#КонецВставки
	|	ДанныеДоИзменений.КлючАналитики.КПС КАК КПС,
	|	ДанныеДоИзменений.КлючАналитики.КЭК КАК КЭК,
	|	ДанныеДоИзменений.КлючАналитики.Номенклатура КАК Номенклатура,
	|	ДанныеДоИзменений.КлючАналитики.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ДанныеДоИзменений.КлючАналитики.ПериодПлана КАК ПериодПлана,
	|	ДанныеДоИзменений.КлючАналитики.РазделЛицевогоСчета КАК РазделЛицевогоСчета,
	|	ДанныеДоИзменений.КлючАналитики.КодЦели КАК КодЦели,
	|	ДанныеДоИзменений.КлючАналитики.КодМероприятия КАК КодМероприятия,
	|	ДанныеДоИзменений.КлючАналитики.ДопКлассификация КАК ДопКлассификация,
	|	ДанныеДоИзменений.ОКП КАК ОКП,
	|	ДанныеДоИзменений.Количество КАК Количество,
	|	ДанныеДоИзменений.Сумма КАК Сумма,
	|	ДанныеДоИзменений.СуммаВВалюте КАК СуммаВВалюте,
	|	ДанныеДоИзменений.СуммаВВалютеБезусловная
	|ИЗ
	|	РегистрСведений.ПланФинансированияОбязательств.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Регистратор
	|				И Обязательство = &Договор) КАК ДанныеДоИзменений";

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	Запрос.УстановитьПараметр("Договор", Объект.Договор);

	ТаблицаДоИзменений = Запрос.Выполнить().Выгрузить();
	#Удаление
	СтруктураПоиска = Новый Структура("ОбъектФАИП, Подразделение, КФО, КПС, КЭК, Номенклатура, ОКП, ЕдиницаИзмерения, ПериодПлана, РазделЛицевогоСчета, КодЦели, КодМероприятия, ДопКлассификация"); 
	#КонецУдаления
	#Вставка
	СтруктураПоиска = Новый Структура("ОбъектФАИП, Подразделение, КФО, ИФО, КПС, КЭК, Номенклатура, ОКП, ЕдиницаИзмерения, ПериодПлана, РазделЛицевогоСчета, КодЦели, КодМероприятия, ДопКлассификация");
	#КонецВставки
	Для каждого СтрокаТЧ Из Объект.РасшифровкаОбязательстваБюджет Цикл

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ);		
		МассивСтрок = ТаблицаДоИзменений.НайтиСтроки(СтруктураПоиска);

		Если МассивСтрок.Количество() > 0 Тогда

			НайденнаяСтрока = МассивСтрок[0];
			СтрокаТЧ.КоличествоДоИзменений 				= НайденнаяСтрока.Количество;
			СтрокаТЧ.СуммаДоИзменений 					= НайденнаяСтрока.Сумма;
			СтрокаТЧ.СуммаВВалютеДоИзменений 			= НайденнаяСтрока.СуммаВВалюте;
			СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений = НайденнаяСтрока.СуммаВВалютеБезусловная;

		КонецЕсли; 

		СтрокаТЧ.КоличествоИзменения 				= СтрокаТЧ.Количество 	- СтрокаТЧ.КоличествоДоИзменений;
		СтрокаТЧ.СуммаИзменения 					= СтрокаТЧ.Сумма 		- СтрокаТЧ.СуммаДоИзменений;
		СтрокаТЧ.СуммаВВалютеИзменения 				= СтрокаТЧ.СуммаВВалюте - СтрокаТЧ.СуммаВВалютеДоИзменений;
		СтрокаТЧ.СуммаВВалютеБезусловнаяИзменения 	= СтрокаТЧ.СуммаВВалютеБезусловная - СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений;

	КонецЦикла; 

	Для каждого СтрокаТЧ Из Объект.РасшифровкаОбязательстваВнебюджет Цикл

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ);		
		МассивСтрок = ТаблицаДоИзменений.НайтиСтроки(СтруктураПоиска);

		Если МассивСтрок.Количество() > 0 Тогда

			НайденнаяСтрока = МассивСтрок[0];
			СтрокаТЧ.КоличествоДоИзменений 				= НайденнаяСтрока.Количество;
			СтрокаТЧ.СуммаДоИзменений 					= НайденнаяСтрока.Сумма;
			СтрокаТЧ.СуммаВВалютеДоИзменений 			= НайденнаяСтрока.СуммаВВалюте;
			СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений = НайденнаяСтрока.СуммаВВалютеБезусловная;

		КонецЕсли; 

		СтрокаТЧ.КоличествоИзменения 				= СтрокаТЧ.Количество - СтрокаТЧ.КоличествоДоИзменений;
		СтрокаТЧ.СуммаИзменения 					= СтрокаТЧ.Сумма - СтрокаТЧ.СуммаДоИзменений;
		СтрокаТЧ.СуммаВВалютеИзменения 				= СтрокаТЧ.СуммаВВалюте - СтрокаТЧ.СуммаВВалютеДоИзменений;
		СтрокаТЧ.СуммаВВалютеБезусловнаяИзменения 	= СтрокаТЧ.СуммаВВалютеБезусловная - СтрокаТЧ.СуммаВВалютеБезусловнаяДоИзменений;

	КонецЦикла;

КонецПроцедуры
