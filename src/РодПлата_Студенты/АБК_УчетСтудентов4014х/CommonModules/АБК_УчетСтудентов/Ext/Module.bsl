
Функция ИспользуетсяУчет4014х() Экспорт
	Возврат Константы.АБК_УчетСтудентов4014х.Получить();
КонецФункции

Процедура ОбработатьИзменение_УчетСтудентов4014х() Экспорт
	
	АБК_УчетСтудентов4014х = ИспользуетсяУчет4014х(); 
	
	#Область НачислениеДБП
	МДДокумента_НачислениеДоходов = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.НачислениеДоходовБудущихПериодовОбразование")); 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТиповыеОперации.Ссылка КАК Ссылка, 
	|	ТиповыеОперации.НеИспользуется КАК НеИспользуется
	|ИЗ
	|	Справочник.ТиповыеОперации КАК ТиповыеОперации
	|ГДЕ
	|	ТиповыеОперации.ИдентификаторДокумента = &ИдентификаторДокумента
	|	И ТиповыеОперации.Наименование = &Наименование");        
	Запрос.Параметры.Вставить("ИдентификаторДокумента", МДДокумента_НачислениеДоходов);
	Запрос.Параметры.Вставить("Наименование", "Начисление доходов будущих периодов (205.00 - 401.41(49))");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда    
		
		Если Выборка.НеИспользуется <> (НЕ АБК_УчетСтудентов4014х) Тогда
			ТиповаяОперацияОбъект =  Выборка.Ссылка.ПолучитьОбъект();
			ТиповаяОперацияОбъект.НеИспользуется = НЕ АБК_УчетСтудентов4014х;	
			ТиповаяОперацияОбъект.Записать();
		КонецЕсли;

	ИначеЕсли АБК_УчетСтудентов4014х Тогда
		
		Операция = Справочники.ТиповыеОперации.НайтиПоНаименованию("Начисление доходов будущих периодов (205.00 - 401.40)",Истина);
		
		НоваяТиповая_Ссылка = Справочники.ТиповыеОперации.СкопироватьОперацию(Операция, "НачислениеДоходовБудущихПериодовОбразование");  
		
		ПоставляемаяТиповаяОперацияАпогей = Справочники.ПоставляемыеТиповыеОперации.СоздатьЭлемент();
		ПоставляемаяТиповаяОперацияАпогей.ИдентификаторДокумента = МДДокумента_НачислениеДоходов;
		ПоставляемаяТиповаяОперацияАпогей.Поставщик = "Апогей БК";
		ПоставляемаяТиповаяОперацияАпогей.Наименование = "Начисление доходов будущих периодов (205.00 - 401.41(49))";
		ПоставляемаяТиповаяОперацияАпогей.Записать();
		
		НоваяТиповая_Объект = НоваяТиповая_Ссылка.ПолучитьОбъект();	
		НоваяТиповая_Объект.Наименование = "Начисление доходов будущих периодов (205.00 - 401.41(49))";
		НоваяТиповая_Объект.СостояниеПоддержки = Перечисления.СостоянияПоддержкиТиповыхОпераций.РедактируетсяССохранениемПоддержки;
		НоваяТиповая_Объект.ПоставляемаяТиповаяОперация = ПоставляемаяТиповаяОперацияАпогей.Ссылка; 
		НоваяТиповая_Объект.Записать();                

		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ПроводкиТиповыхОпераций.Ссылка КАК Ссылка,
		|	ПроводкиТиповыхОпераций.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ПроводкиТиповыхОпераций КАК ПроводкиТиповыхОпераций
		|ГДЕ
		|	ПроводкиТиповыхОпераций.Владелец = &Владелец");
		Запрос.Параметры.Вставить("Владелец",НоваяТиповая_Ссылка);
		ТаблицаПроводок = Запрос.Выполнить().ВЫгрузить();
		
		Для Каждого СтрокаПроводки из ТаблицаПроводок Цикл
			
			Если СтрокаПроводки.Наименование <> "Доходы будущих периодов (205.00 - 401.40)" Тогда
				
				ПроводкаОбъект = СтрокаПроводки.Ссылка.ПолучитьОбъект();
				ПроводкаОбъект.НеИспользовать = Истина;
				ПроводкаОбъект.Записать();
				
			КонецЕсли;
			// Проводка 205.00 - 401.41
			Проводка401_41 = СтрокаПроводки.Ссылка.ПолучитьОбъект();
			Проводка401_41.Наименование = "Доходы будущих периодов (205.00 - 401.41)"; 
			Проводка401_41.Записать();
			
			МЗ = РегистрыСведений.ДанныеПроводокТиповыхОпераций.СоздатьМенеджерЗаписи();
			МЗ.Проводка = Проводка401_41.Ссылка;
			МЗ.Прочитать();
			
			ТД_Проводки_40141 = ПолучитьОбщийМакет("АБК_Макет_ПроводкаНачислениеДБП_205_401_41");
			Проводки_Сериализованные = ТД_Проводки_40141.ПолучитьТекст();
			СтруктураПроводок = ЗначениеИзСтрокиВнутр(Проводки_Сериализованные);
			
			ЗаполнитьЗначенияСвойств(МЗ,СтруктураПроводок); 
			МЗ.Проводка = Проводка401_41.Ссылка;
			
			МЗ.Записать();
			
			// Проводка 205.00 - 401.49
			Проводка401_49 = Проводка401_41.Ссылка.Скопировать();
			Проводка401_49.Наименование = "Доходы будущих периодов (205.00 - 401.49)";
			Проводка401_49.Записать();    
			
			МЗ = РегистрыСведений.ДанныеПроводокТиповыхОпераций.СоздатьМенеджерЗаписи();
			МЗ.Проводка = Проводка401_49.Ссылка;
			МЗ.Прочитать();
			
			ТД_Проводки_40149 = ПолучитьОбщийМакет("АБК_Макет_ПроводкаНачислениеДБП_205_401_49");
			Проводки_Сериализованные = ТД_Проводки_40149.ПолучитьТекст();
			СтруктураПроводок = ЗначениеИзСтрокиВнутр(Проводки_Сериализованные);
			
			ЗаполнитьЗначенияСвойств(МЗ,СтруктураПроводок);  
			МЗ.Проводка = Проводка401_49.Ссылка;
			
			МЗ.Записать();	
			
		КонецЦикла; 
		
		МЗ = РегистрыСведений.ДанныеПоставляемыхТиповыхОпераций.СоздатьМенеджерЗаписи();
		МЗ.ТиповаяОперация = ПоставляемаяТиповаяОперацияАпогей.Ссылка; 
		МЗ.ФормулаДата = "Документ.Дата";
		МЗ.ФормулаОрганизация = "Документ.Организация";
		МЗ.Записать(); 
		
		// Изменены проводки - Перезаписать типовую
		НоваяТиповая_Объект.Записать();
		
	КонецЕсли;
	#КонецОбласти
	
	#Область ГрупповаяКорректиировкаДБП
	МДДокумента_ГрупповаяКорректиировкаДБП = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.КорректировкаДолгосрочныхДоговоровОбразование")); 
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ТиповыеОперации.Ссылка КАК Ссылка, 
	|	ТиповыеОперации.НеИспользуется КАК НеИспользуется
	|ИЗ
	|	Справочник.ТиповыеОперации КАК ТиповыеОперации
	|ГДЕ
	|	ТиповыеОперации.ИдентификаторДокумента = &ИдентификаторДокумента
	|	И ТиповыеОперации.Наименование = &Наименование");        
	Запрос.Параметры.Вставить("ИдентификаторДокумента", МДДокумента_ГрупповаяКорректиировкаДБП);
	Запрос.Параметры.Вставить("Наименование", "Перенос доходов будущих периодов (401.41 - 401.49)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда    
		
		Если Выборка.НеИспользуется <> (НЕ АБК_УчетСтудентов4014х) Тогда
			ТиповаяОперацияОбъект =  Выборка.Ссылка.ПолучитьОбъект();
			ТиповаяОперацияОбъект.НеИспользуется = НЕ АБК_УчетСтудентов4014х;	
			ТиповаяОперацияОбъект.Записать();
		КонецЕсли;

	ИначеЕсли АБК_УчетСтудентов4014х Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ТиповыеОперации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ТиповыеОперации КАК ТиповыеОперации
		|ГДЕ
		|	ТиповыеОперации.ИдентификаторДокумента = &ИдентификаторДокумента
		|	И ТиповыеОперации.Наименование = &Наименование");
		Запрос.Параметры.Вставить("ИдентификаторДокумента", МДДокумента_ГрупповаяКорректиировкаДБП);
		Запрос.Параметры.Вставить("Наименование", "Корректировка доходов будущих периодов (205.00)");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Операция = Выборка.Ссылка;	
		Иначе
			Возврат;	
		КонецЕсли;
		
		НоваяТиповая_Ссылка = Справочники.ТиповыеОперации.СкопироватьОперацию(Операция, "КорректировкаДолгосрочныхДоговоровОбразование");  
		
		ПоставляемаяТиповаяОперацияАпогей = Справочники.ПоставляемыеТиповыеОперации.СоздатьЭлемент();
		ПоставляемаяТиповаяОперацияАпогей.ИдентификаторДокумента = МДДокумента_ГрупповаяКорректиировкаДБП;
		ПоставляемаяТиповаяОперацияАпогей.Поставщик = "Апогей БК";
		ПоставляемаяТиповаяОперацияАпогей.Наименование = "Перенос доходов будущих периодов (401.41 - 401.49)";
		ПоставляемаяТиповаяОперацияАпогей.Записать();
		
		НоваяТиповая_Объект = НоваяТиповая_Ссылка.ПолучитьОбъект();	
		НоваяТиповая_Объект.Наименование = "Перенос доходов будущих периодов (401.41 - 401.49)";
		НоваяТиповая_Объект.СостояниеПоддержки = Перечисления.СостоянияПоддержкиТиповыхОпераций.РедактируетсяССохранениемПоддержки;
		НоваяТиповая_Объект.ПоставляемаяТиповаяОперация = ПоставляемаяТиповаяОперацияАпогей.Ссылка; 
		НоваяТиповая_Объект.Записать();                

		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ПроводкиТиповыхОпераций.Ссылка КАК Ссылка,
		|	ПроводкиТиповыхОпераций.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ПроводкиТиповыхОпераций КАК ПроводкиТиповыхОпераций
		|ГДЕ
		|	ПроводкиТиповыхОпераций.Владелец = &Владелец");
		Запрос.Параметры.Вставить("Владелец",НоваяТиповая_Ссылка);
		ТаблицаПроводок = Запрос.Выполнить().ВЫгрузить();
		
		Для Каждого СтрокаПроводки из ТаблицаПроводок Цикл
			
			Если СтрокаПроводки.Наименование <> "Доходы будущих периодов (205.00 - 401.40)" Тогда
				
				ПроводкаОбъект = СтрокаПроводки.Ссылка.ПолучитьОбъект();
				ПроводкаОбъект.НеИспользовать = Истина;
				ПроводкаОбъект.Записать();
				
				Продолжить;	
			КонецЕсли;
			// Проводка 401.49 - 401.41
			Проводка401_49_41 = СтрокаПроводки.Ссылка.ПолучитьОбъект();
			Проводка401_49_41.Наименование = "Перенос ДБП (401.49 - 401.41)"; 
			Проводка401_49_41.Записать();
			
			МЗ = РегистрыСведений.ДанныеПроводокТиповыхОпераций.СоздатьМенеджерЗаписи();
			МЗ.Проводка = Проводка401_49_41.Ссылка;
			МЗ.Прочитать();
			
			ТД_Проводки_401_49_41 = ПолучитьОбщийМакет("АБК_Макет_ПроводкаНачислениеДБП_401_49_41");
			Проводки_Сериализованные = ТД_Проводки_401_49_41.ПолучитьТекст();
			СтруктураПроводок = ЗначениеИзСтрокиВнутр(Проводки_Сериализованные);
			
			ЗаполнитьЗначенияСвойств(МЗ,СтруктураПроводок); 
			МЗ.Проводка = Проводка401_49_41.Ссылка;
			
			МЗ.Записать();	
			
		КонецЦикла;
		
		МЗ = РегистрыСведений.ДанныеПоставляемыхТиповыхОпераций.СоздатьМенеджерЗаписи();
		МЗ.ТиповаяОперация = ПоставляемаяТиповаяОперацияАпогей.Ссылка; 
		МЗ.ФормулаДата = "Документ.Дата";
		МЗ.ФормулаОрганизация = "Документ.Организация";
		МЗ.Записать();   
		
		// Изменены проводки - Перезаписать типовую
		НоваяТиповая_Объект.Записать();
		
	КонецЕсли;
	#КонецОбласти
	
КонецПроцедуры