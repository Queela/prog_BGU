
&ИзменениеИКонтроль("РассчитатьНачисленияПоДолгосрочнымДоговорам")
Функция АБК_УчетСтудентов4014хРассчитатьНачисленияПоДолгосрочнымДоговорам(ДоговорыСтудентов, ПериодНачисления, Организация, Факультет, Номенклатура)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДоговорыСтудентов.Студент КАК Студент,
	|	ДоговорыСтудентов.Контрагент КАК Контрагент,
	|	ДоговорыСтудентов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДоговорыСтудентов.ДоляОплаты КАК ДоляОплаты,
	|	ДоговорыСтудентов.ПорядокВыпискиСФ КАК ПорядокВыпискиСФ
	|ПОМЕСТИТЬ ДоговорыСтудентов
	|ИЗ
	|	&ДоговорыСтудентов КАК ДоговорыСтудентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СУММА(1) КАК КоличествоСтудентовПоДоговору
	|ПОМЕСТИТЬ КоличествоСтрокПоДоговорам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоговорыСтудентов.Студент КАК Студент,
	|		ДоговорыСтудентов.Контрагент КАК Контрагент,
	|		ДоговорыСтудентов.ДоговорКонтрагента КАК ДоговорКонтрагента
	|	ИЗ
	|		ДоговорыСтудентов КАК ДоговорыСтудентов
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДоговорыСтудентов.Студент,
	|		ДоговорыСтудентов.Контрагент,
	|		ДоговорыСтудентов.ДоговорКонтрагента) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыСписанияДоходовБудущихПериодов.Договор КАК Договор,
	|	ПараметрыСписанияДоходовБудущихПериодов.СпособПризнанияДоходов КАК СпособПризнанияДоходов,
	|	ПараметрыСписанияДоходовБудущихПериодов.ДатаНачалаСписания КАК ДатаНачалаСписания,
	|	ПараметрыСписанияДоходовБудущихПериодов.ДатаОкончанияСписания КАК ДатаОкончанияСписания,
	|	ПараметрыСписанияДоходовБудущихПериодов.СчетДоходов КАК СчетДоходов,
	|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов1 КАК СубконтоДоходов1,
	|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов2 КАК СубконтоДоходов2,
	|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов3 КАК СубконтоДоходов3,
	|	ПараметрыСписанияДоходовБудущихПериодов.ВидДеятельностиНУ КАК ВидДеятельностиНУ,
	|	ПараметрыСписанияДоходовБудущихПериодов.СчетДоходовНУ КАК СчетДоходовНУ,
	|	ПараметрыСписанияДоходовБудущихПериодов.СтатьяПрочихДоходовНУ КАК СтатьяПрочихДоходовНУ
	|ПОМЕСТИТЬ ПараметрыСписанияДоходовБудущихПериодов
	|ИЗ
	|	РегистрСведений.ПараметрыСписанияДоходовБудущихПериодов.СрезПоследних(
	|			&КонецПериода,
	|			Организация = &Организация
	|				И Договор В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ДоговорыСтудентов.ДоговорКонтрагента
	|					ИЗ
	|						ДоговорыСтудентов)) КАК ПараметрыСписанияДоходовБудущихПериодов
	|ГДЕ
	|	ПараметрыСписанияДоходовБудущихПериодов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачисленияДБП.ДолгосрочныйДоговорОбразование)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиДБП.Организация КАК Организация,
	|	ЕСТЬNULL(ОстаткиДБП.ИФО, ЗНАЧЕНИЕ(Справочник.ИсточникиФинансовогоОбеспечения.ПустаяСсылка)) КАК ИФО,
	|	ОстаткиДБП.КФО КАК КФО,
	|	ОстаткиДБП.КПС КАК КПС,
	|	ОстаткиДБП.КЭК КАК КЭК,
	|	ОстаткиДБП.Счет КАК СчетДБП,
	|	ОстаткиДБП.Подразделение КАК Подразделение,
	|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто2 КАК Справочник.Договоры) КАК Договор,
	|	ОстаткиДБП.СуммаОстатокКт КАК Сумма
	|ПОМЕСТИТЬ ОстаткиДБП
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Остатки(
	|			&КонецПериода,
	|			Счет В (&СчетаДБП),
	|			&ВидыСубконтоДБП,
	|			Организация = &Организация
	|				И Субконто1 = &Номенклатура
	|				И Субконто2 В
	|					(ВЫБРАТЬ
	|						ДоговорыСтудентов.ДоговорКонтрагента
	|					ИЗ
	|						ДоговорыСтудентов)) КАК ОстаткиДБП
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОборотыДБП.Организация КАК Организация,
	|	ЕСТЬNULL(ОборотыДБП.ИФО, ЗНАЧЕНИЕ(Справочник.ИсточникиФинансовогоОбеспечения.ПустаяСсылка)) КАК ИФО,
	|	ОборотыДБП.КФО КАК КФО,
	|	ОборотыДБП.КПС КАК КПС,
	|	ОборотыДБП.КЭК КАК КЭК,
	|	ОборотыДБП.Счет КАК СчетДБП,
	|	ОборотыДБП.Подразделение КАК Подразделение,
	|	ВЫРАЗИТЬ(ОборотыДБП.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ОборотыДБП.Субконто2 КАК Справочник.Договоры) КАК Договор,
	|	ОборотыДБП.СуммаОборотДт КАК СписаноВТекущемМесяце
	|ПОМЕСТИТЬ ОборотыДБП
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Обороты(
	|			&НачалоМесяца,
	|			&КонецПериода,
	|			,
	|			Счет В (&СчетаДБП),
	|			&ВидыСубконтоДБП,
	|			Организация = &Организация
	|				И Субконто1 = &Номенклатура
	|				И Субконто2 В
	|					(ВЫБРАТЬ
	|						ДоговорыСтудентов.ДоговорКонтрагента
	|					ИЗ
	|						ДоговорыСтудентов),
	|			КорСчет В (&Счета40110),
	|			) КАК ОборотыДБП
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыСтудентов.Студент КАК Студент,
	|	ДоговорыСтудентов.Контрагент КАК Контрагент,
	|	ДоговорыСтудентов.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДоговорыСтудентов.ДоляОплаты КАК ДоляОплаты,
	|	ДоговорыСтудентов.ПорядокВыпискиСФ КАК ПорядокВыпискиСФ,
	|	ПараметрыСписанияДоходовБудущихПериодов.СпособПризнанияДоходов КАК СпособПризнанияДоходов,
	|	ПараметрыСписанияДоходовБудущихПериодов.ДатаНачалаСписания КАК ДатаНачалаСписания,
	|	ПараметрыСписанияДоходовБудущихПериодов.ДатаОкончанияСписания КАК ДатаОкончанияСписания,
	|	ПараметрыСписанияДоходовБудущихПериодов.СчетДоходов КАК СчетДоходов,
	|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов1 КАК СубконтоДоходов1,
	|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов2 КАК СубконтоДоходов2,
	|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов3 КАК СубконтоДоходов3,
	|	ПараметрыСписанияДоходовБудущихПериодов.ВидДеятельностиНУ КАК ВидДеятельностиНУ,
	|	ПараметрыСписанияДоходовБудущихПериодов.СчетДоходовНУ КАК СчетДоходовНУ,
	|	ПараметрыСписанияДоходовБудущихПериодов.СтатьяПрочихДоходовНУ КАК СтатьяПрочихДоходовНУ,
	|	ОстаткиДБП.ИФО КАК ИФО,
	|	ОстаткиДБП.КФО КАК КФО,
	|	ОстаткиДБП.КПС КАК КПС,
	|	ОстаткиДБП.КЭК КАК КЭК,
	|	ОстаткиДБП.СчетДБП КАК СчетДБП,
	|	ОстаткиДБП.Подразделение КАК Подразделение,
	|	ОстаткиДБП.Договор.Наименование КАК ДоговорПредставление,
	|	ОстаткиДБП.Договор.Контрагент.Наименование КАК КонтрагентПредставление,
	|	ОстаткиДБП.Номенклатура КАК Номенклатура,
	|	ОстаткиДБП.Номенклатура.Наименование КАК НоменклатураПредставление,
	|	ОстаткиДБП.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(ОборотыДБП.СписаноВТекущемМесяце, 0) КАК СписаноВТекущемМесяце,
	|	ЕСТЬNULL(ОстаткиДБП.Сумма, 0) КАК ОстатокДБП,
	|	КоличествоСтрокПоДоговорам.КоличествоСтудентовПоДоговору КАК КоличествоСтудентовПоДоговору
	|ИЗ
	|	ДоговорыСтудентов КАК ДоговорыСтудентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыСписанияДоходовБудущихПериодов КАК ПараметрыСписанияДоходовБудущихПериодов
	|		ПО ДоговорыСтудентов.ДоговорКонтрагента = ПараметрыСписанияДоходовБудущихПериодов.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиДБП КАК ОстаткиДБП
	|		ПО ДоговорыСтудентов.ДоговорКонтрагента = ОстаткиДБП.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыДБП КАК ОборотыДБП
	|		ПО ДоговорыСтудентов.ДоговорКонтрагента = ОборотыДБП.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоСтрокПоДоговорам КАК КоличествоСтрокПоДоговорам
	|		ПО ДоговорыСтудентов.ДоговорКонтрагента = КоличествоСтрокПоДоговорам.ДоговорКонтрагента
	|ГДЕ
	|	ЕСТЬNULL(ОборотыДБП.СписаноВТекущемМесяце, 0) = 0
	|	И ЕСТЬNULL(ОстаткиДБП.Сумма, 0) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетДБП,
	|	КонтрагентПредставление,
	|	ДоговорПредставление,
	|	НоменклатураПредставление,
	|	Студент";

	Если ДоговорыСтудентов.Колонки.Найти("ДоляОплаты") = Неопределено Тогда // Прочие услуги.
		ДоговорыСтудентов.Колонки.Добавить("ДоляОплаты", Новый ОписаниеТипов("Число"));
		ДоговорыСтудентов.ЗаполнитьЗначения(100, "ДоляОплаты");
	КонецЕсли;

	Запрос.УстановитьПараметр("ДоговорыСтудентов", ДоговорыСтудентов); // Таблица подбора студентов.

	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ПериодНачисления));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодНачисления));
	#Удаление
	Запрос.УстановитьПараметр("СчетаДБП",     БухгалтерскийУчет.СписокСчетов("401.40"));
	#КонецУдаления
	#Вставка
	СчетаДБП = БухгалтерскийУчет.СписокСчетов("401.40");
	Если АБК_УчетСтудентов.ИспользуетсяУчет4014х() тогда
		СчетаДБП = БухгалтерскийУчет.СписокСчетов("401.41,401.49");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СчетаДБП", СчетаДБП);
	#КонецВставки
	Запрос.УстановитьПараметр("Счета40110",   БухгалтерскийУчет.СписокСчетов("401.10"));

	ВидыСубконто = Новый Массив();
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Договоры);
	Запрос.УстановитьПараметр("ВидыСубконтоДБП", ВидыСубконто);

	ТаблицаОстатковДБП = Запрос.Выполнить().Выгрузить();
	#Вставка
	Если АБК_УчетСтудентов.ИспользуетсяУчет4014х() тогда
		ТаблицаОстатковДБП.ЗаполнитьЗначения(БухгалтерскийУчет.СчетПоКоду("401.41", ПериодНачисления), "СчетДБП");
		ТаблицаОстатковДБП.Свернуть("Студент,Контрагент,ДоговорКонтрагента,ДоляОплаты,ПорядокВыпискиСФ,СпособПризнанияДоходов,
									|ДатаНачалаСписания,ДатаОкончанияСписания,СчетДоходов,СубконтоДоходов1,СубконтоДоходов2,СубконтоДоходов3,
									|ВидДеятельностиНУ,СчетДоходовНУ,СтатьяПрочихДоходовНУ,ИФО,КФО,КПС,КЭК,СчетДБП,Подразделение,
									|ДоговорПредставление,КонтрагентПредставление,Номенклатура,НоменклатураПредставление,СтавкаНДС,КоличествоСтудентовПоДоговору", "СписаноВТекущемМесяце,ОстатокДБП");
	КонецЕсли;
	#КонецВставки

	// Получим данные графиков оплат для договоров с признанием доходов текущего периода по графику.
	ПризнаниеДоходовПоГрафику = Новый Структура("СпособПризнанияДоходов", Перечисления.СпособыПризнанияРасходов.ПоГрафику);
	СтрокиСПризнаниемПоГрафику = ТаблицаОстатковДБП.НайтиСтроки(ПризнаниеДоходовПоГрафику);
	Если СтрокиСПризнаниемПоГрафику.Количество() > 0 Тогда

		ТаблицаОстатковДБП.Колонки.Добавить("СуммаПоГрафику",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18, 2, ДопустимыйЗнак.Любой)));

		ДоговорыПоОдномуСтуденту = Новый Массив;
		СтрокиПоОдномуСтуденту = Новый Массив;
		ДоговорыПоНесколькимСтудентам = Новый Массив;
		СтрокиПоНесколькимСтудентам = Новый Массив;
		Для Каждого Строка Из СтрокиСПризнаниемПоГрафику Цикл
			Если Строка.КоличествоСтудентовПоДоговору > 1 Тогда
				ДоговорыПоНесколькимСтудентам.Добавить(Строка.ДоговорКонтрагента);
				СтрокиПоНесколькимСтудентам.Добавить(Строка);
			Иначе
				ДоговорыПоОдномуСтуденту.Добавить(Строка.ДоговорКонтрагента);
				СтрокиПоОдномуСтуденту.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;

		Если ДоговорыПоОдномуСтуденту.Количество() > 0 Тогда // Расчет в модели "1 Договор = 1 Студент".

			ГрафикНачисления = КонтрольИсполненияДоговоров.ГрафикИсполненияПоДоговору(
			Организация,
			ОбщегоНазначенияБГУ.УдалитьПовторяющиесяЭлементыМассива(ДоговорыПоОдномуСтуденту),
			"Месяц",
			НачалоМесяца(ПериодНачисления));

			// Распределим остаток предстоящих доходов по всем периодам графика по договору.
			ГрафикНачисления.Колонки.Добавить("ДоходыОтРеализации",
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18, 2, ДопустимыйЗнак.Любой)));
			Для Каждого СтрокаТаблицы Из СтрокиПоОдномуСтуденту Цикл

				//ОтборСтрок = Новый Структура("ИФО,КФО,Контрагент");
				ОтборСтрок = Новый Структура("ИФО,КФО");
				ЗаполнитьЗначенияСвойств(ОтборСтрок, СтрокаТаблицы);
				ОтборСтрок.Вставить("Договор", СтрокаТаблицы.ДоговорКонтрагента);
				ОтборСтрок.Вставить("КПС", СтрокаТаблицы.КПС);
				ОтборСтрок.Вставить("КЭК", СтрокаТаблицы.КЭК);
				НайденныеСтрокиГрафика = ГрафикНачисления.НайтиСтроки(ОтборСтрок);

				ОбщегоНазначенияБГУ.РаспределитьСуммуПоСтрокамТаблицы(СтрокаТаблицы.ОстатокДБП,
				НайденныеСтрокиГрафика, "ДоходыОтРеализации", "Сумма", Ложь);

			КонецЦикла;

			// Распределим сумму по графику по строкам ДБП пропорционально остатку оплаты.
			Для Каждого СтрокаПоГрафику Из ГрафикНачисления Цикл

				Если СтрокаПоГрафику.Период < НачалоМесяца(ПериодНачисления)
					ИЛИ СтрокаПоГрафику.Период > КонецМесяца(ПериодНачисления) Тогда
					Продолжить; // Пропускаем строки графика из других периодов.
				КонецЕсли;

				//ОтборСтрок = Новый Структура("ИФО,КФО,Контрагент");
				ОтборСтрок = Новый Структура("ИФО,КФО");
				ЗаполнитьЗначенияСвойств(ОтборСтрок, СтрокаПоГрафику);
				ОтборСтрок.Вставить("ДоговорКонтрагента", СтрокаПоГрафику.Договор);
				ОтборСтрок.Вставить("КПС", СтрокаПоГрафику.КПС);
				ОтборСтрок.Вставить("КЭК", СтрокаПоГрафику.КЭК);
				НайденныеСтрокиДБП = ТаблицаОстатковДБП.НайтиСтроки(ОтборСтрок);

				ОбщегоНазначенияБГУ.РаспределитьСуммуПоСтрокамТаблицы(СтрокаПоГрафику.ДоходыОтРеализации,
				НайденныеСтрокиДБП, "СуммаПоГрафику", "ОстатокДБП", Ложь);

			КонецЦикла;

		КонецЕсли;

		Если ДоговорыПоНесколькимСтудентам.Количество() > 0 Тогда // Расчет в модели "1 Договор = N Студентов".

			ГрафикНачисления = РаботаСоСтудентами.ГрафикНачисленийПоДолгосрочнымДоговорам(
			ОбщегоНазначенияБГУ.УдалитьПовторяющиесяЭлементыМассива(ДоговорыПоНесколькимСтудентам),
			Организация,
			КонецДня(ПериодНачисления),
			НачалоМесяца(ПериодНачисления),
			КонецМесяца(ПериодНачисления));

			Для Каждого СтрокаТаблицы Из СтрокиПоНесколькимСтудентам Цикл

				ОтборСтрок = Новый Структура();
				ОтборСтрок.Вставить("Договор", СтрокаТаблицы.ДоговорКонтрагента);
				ОтборСтрок.Вставить("Учащийся", СтрокаТаблицы.Студент);
				ОтборСтрок.Вставить("Контрагент", СтрокаТаблицы.Контрагент);
				НайденныеСтрокиГрафика = ГрафикНачисления.НайтиСтроки(ОтборСтрок);

				Для Каждого СтрокаГрафика Из НайденныеСтрокиГрафика Цикл
					СтрокаТаблицы.СуммаПоГрафику = СтрокаТаблицы.СуммаПоГрафику + СтрокаГрафика.СуммаВВалюте;
				КонецЦикла;

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

	ТаблицаНачислений = ТаблицаОстатковДБП.СкопироватьКолонки();
	ТаблицаНачислений.Колонки.Добавить("Сумма",
	ОбщегоНазначенияБГУ.ПолучитьОписаниеТиповЧисла(15, 2));
	ТаблицаНачислений.Колонки.Добавить("СуммаНДС",
	ОбщегоНазначенияБГУ.ПолучитьОписаниеТиповЧисла(15, 2));
	ТаблицаНачислений.Колонки.Добавить("Коэффициент",
	ОбщегоНазначенияБГУ.ПолучитьОписаниеТиповЧисла(10, 8));
	ТаблицаНачислений.Колонки.Добавить("КоэффициентЧислитель",
	ОбщегоНазначенияБГУ.ПолучитьОписаниеТиповЧисла(14, 8));
	ТаблицаНачислений.Колонки.Добавить("КоэффициентЗнаменатель",
	ОбщегоНазначенияБГУ.ПолучитьОписаниеТиповЧисла(14, 8));
	ТаблицаНачислений.Колонки.Добавить("ОтразитьВГрафикеИсполненияДоговора",
	Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыДокументовКонтрольИсполненияДоговоров"));

	// Расчет сумм списания доходов будущих периодов.
	Для Каждого ОстаткиДБП Из ТаблицаОстатковДБП Цикл

		Доля = 0;
		ПротоколРасчета = Новый Структура("Числитель, Знаменатель", 0, 0);
		Если ОстаткиДБП.СпособПризнанияДоходов = Перечисления.СпособыПризнанияРасходов.ПоКалендарнымДням
			ИЛИ ОстаткиДБП.СпособПризнанияДоходов = Перечисления.СпособыПризнанияРасходов.ПоМесяцам Тогда

			Доля = БухгалтерскийУчет.ДоляОчередногоМесяцаПриРавномерномПризнанииДоходовРасходов(
			ОстаткиДБП.СпособПризнанияДоходов,
			ПериодНачисления,
			ОстаткиДБП.ДатаНачалаСписания,
			ОстаткиДБП.ДатаОкончанияСписания,
			ПротоколРасчета);

			Если Доля = 0
				И ЗначениеЗаполнено(ОстаткиДБП.ДатаНачалаСписания)
				И КонецМесяца(ПериодНачисления) < КонецМесяца(ОстаткиДБП.ДатаОкончанияСписания) Тогда
				Продолжить; // Срок списания еще не начался.
			КонецЕсли;

		ИначеЕсли ОстаткиДБП.СпособПризнанияДоходов = Перечисления.СпособыПризнанияРасходов.ПоГрафику Тогда

			Если ОстаткиДБП.СуммаПоГрафику = 0 Тогда
				Продолжить; // Не начисляется в данном месяце.
			КонецЕсли;

		КонецЕсли;

		НоваяСтрока = ТаблицаНачислений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОстаткиДБП);

		Если ОстаткиДБП.СпособПризнанияДоходов = Перечисления.СпособыПризнанияРасходов.ПоКалендарнымДням
			ИЛИ ОстаткиДБП.СпособПризнанияДоходов = Перечисления.СпособыПризнанияРасходов.ПоМесяцам Тогда

			НоваяСтрока.Коэффициент            = Доля;
			НоваяСтрока.КоэффициентЧислитель   = ПротоколРасчета.Числитель;
			НоваяСтрока.КоэффициентЗнаменатель = ПротоколРасчета.Знаменатель;

			// Ставка НДС по умолчанию установлена в карточке номенклатуры.
			СтавкаНДС = УчетНДСКлиентСервер.ЗначениеСтавкиНДС(НоваяСтрока.СтавкаНДС);

			ДоляОплаты = ОстаткиДБП.ДоляОплаты / 100;

			// Заполним сумму и НДС по договору.
			НоваяСтрока.Сумма = Доля * ДоляОплаты * НоваяСтрока.ОстатокДБП;
			НоваяСтрока.СуммаНДС = НоваяСтрока.Сумма * СтавкаНДС / (100 + СтавкаНДС);

		ИначеЕсли ОстаткиДБП.СпособПризнанияДоходов = Перечисления.СпособыПризнанияРасходов.ПоГрафику Тогда

			// Ставка НДС по умолчанию установлена в карточке номенклатуры.
			СтавкаНДС = УчетНДСКлиентСервер.ЗначениеСтавкиНДС(НоваяСтрока.СтавкаНДС);

			// Заполним сумму и НДС по договору.
			НоваяСтрока.Сумма = МИН(ОстаткиДБП.СуммаПоГрафику, ОстаткиДБП.ОстатокДБП);
			НоваяСтрока.СуммаНДС = НоваяСтрока.Сумма * СтавкаНДС / (100 + СтавкаНДС);

			// Коэффициент списания рассчитываем по фактической стоимости списания, как если бы указали ее вручную.
			НоваяСтрока.Коэффициент = ?(НоваяСтрока.ОстатокДБП = 0, 0,
			НоваяСтрока.Сумма / НоваяСтрока.ОстатокДБП);
			НоваяСтрока.КоэффициентЧислитель	= 0;
			НоваяСтрока.КоэффициентЗнаменатель	= 0;

		КонецЕсли;

		НоваяСтрока.ОтразитьВГрафикеИсполненияДоговора = Перечисления.СтатусыДокументовКонтрольИсполненияДоговоров.ОтразитьСейчас;

		// Налоговый учет.
		Если НалоговыйУчетКлиентСервер.ОтражатьВНалоговомУчете(Организация, ПериодНачисления, НоваяСтрока.КФО) Тогда

			Если НЕ ЗначениеЗаполнено(ОстаткиДБП.ВидДеятельностиНУ) Тогда
				// По умолчанию - основная система налогообложения.
				НоваяСтрока.ВидДеятельностиНУ = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
			КонецЕсли;

			Если НЕ ЗначениеЗаполнено(ОстаткиДБП.СчетДоходовНУ) Тогда
				// По умолчанию - доходы от обычных видов деятельности.
				НоваяСтрока.СчетДоходовНУ = БухгалтерскийУчет.СчетПоКоду("Н90.01", ПериодНачисления);
			КонецЕсли;

			Если НЕ БухгалтерскийУчет.СчетВИерархии(ОстаткиДБП.СчетДоходовНУ, "Н91.01") Тогда
				НоваяСтрока.СтатьяПрочихДоходовНУ = Неопределено;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Возврат ТаблицаНачислений;

КонецФункции
