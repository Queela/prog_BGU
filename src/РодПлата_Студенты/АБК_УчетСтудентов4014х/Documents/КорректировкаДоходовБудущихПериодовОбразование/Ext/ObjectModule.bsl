
&ИзменениеИКонтроль("ЗаполнитьДокумент")
Процедура АБК_УчетСтудентов4014хЗаполнитьДокумент(ЗаполнитьСуммыДоходов, ЗаполнитьПорядокУчетаДоходов, ЗаполнитьПорядокОплаты)

	Если Не ЗначениеЗаполнено(Организация)
		Или Не ЗначениеЗаполнено(Студент)
		Или Не ЗначениеЗаполнено(Контрагент)
		Или Не ЗначениеЗаполнено(Договор) Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Дата));
	Запрос.УстановитьПараметр("Студент",      Студент);
	Запрос.УстановитьПараметр("Договор",      Договор);
	Запрос.УстановитьПараметр("Контрагент",   Контрагент);
	#Удаление
	Запрос.УстановитьПараметр("СчетаДБП",     БухгалтерскийУчет.СписокСчетов("401.40"));
	#КонецУдаления
	#Вставка
	СчетаДБП = БухгалтерскийУчет.СписокСчетов("401.40");
	Если АБК_УчетСтудентов.ИспользуетсяУчет4014х() тогда
		СчетаДБП = БухгалтерскийУчет.СписокСчетов("401.41,401.49");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СчетаДБП", СчетаДБП);
	#КонецВставки

	ВидыСубконто = Новый Массив();
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Договоры);
	Запрос.УстановитьПараметр("ВидыСубконтоДБП", ВидыСубконто);

	НомераТаблиц = Новый Структура;

	Если ЗаполнитьПорядокУчетаДоходов Тогда

		НомераТаблиц.Вставить("ПараметрыСписанияДоходовБудущихПериодов", НомераТаблиц.Количество());
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПараметрыСписанияДоходовБудущихПериодов.Организация КАК Организация,
		|	ПараметрыСписанияДоходовБудущихПериодов.Договор КАК Договор,
		|	ПараметрыСписанияДоходовБудущихПериодов.ВидОперации КАК ВидОперации,
		|	ПараметрыСписанияДоходовБудущихПериодов.СпособПризнанияДоходов КАК СпособПризнанияДоходов,
		|	ПараметрыСписанияДоходовБудущихПериодов.ДатаНачалаСписания КАК ДатаНачалаСписания,
		|	ПараметрыСписанияДоходовБудущихПериодов.ДатаОкончанияСписания КАК ДатаОкончанияСписания,
		|	ПараметрыСписанияДоходовБудущихПериодов.СчетДоходов КАК СчетДоходов,
		|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов1 КАК СубконтоДоходов1,
		|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов2 КАК СубконтоДоходов2,
		|	ПараметрыСписанияДоходовБудущихПериодов.СубконтоДоходов3 КАК СубконтоДоходов3,
		|	ПараметрыСписанияДоходовБудущихПериодов.ВидДеятельностиНУ КАК ВидДеятельностиНУ,
		|	ПараметрыСписанияДоходовБудущихПериодов.СчетДоходовНУ КАК СчетДоходовНУ,
		|	ПараметрыСписанияДоходовБудущихПериодов.СтатьяПрочихДоходовНУ КАК СтатьяПрочихДоходовНУ
		|ИЗ
		|	РегистрСведений.ПараметрыСписанияДоходовБудущихПериодов.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И Договор = &Договор) КАК ПараметрыСписанияДоходовБудущихПериодов
		|ГДЕ
		|	ПараметрыСписанияДоходовБудущихПериодов.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНачисленияДБП.ДолгосрочныйДоговорОбразование)";

	КонецЕсли;

	Если ЗаполнитьСуммыДоходов Тогда

		ДоходыБудущихПериодов.Очистить();
		ИзменитьСуммыДоходов = Истина;

		НомераТаблиц.Вставить("ДоходыБудущихПериодов", НомераТаблиц.Количество());
		Запрос.Текст = Запрос.Текст + ?(ЗначениеЗаполнено(Запрос.Текст), ОбщегоНазначения.РазделительПакетаЗапросов(), "") +
		"ВЫБРАТЬ
		|	ОстаткиДБП.Организация КАК Организация,
		|	ЕСТЬNULL(ОстаткиДБП.ИФО, ЗНАЧЕНИЕ(Справочник.ИсточникиФинансовогоОбеспечения.ПустаяСсылка)) КАК ИФО,
		|	ОстаткиДБП.КФО КАК КФО,
		|	ОстаткиДБП.КПС КАК КПС,
		|	ОстаткиДБП.КЭК КАК КЭК,
		|	ОстаткиДБП.Счет КАК СчетДБП,
		|	ОстаткиДБП.Подразделение КАК Подразделение,
		|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто1 КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто1 КАК Справочник.Номенклатура).Наименование КАК НоменклатураПредставление,
		|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто1 КАК Справочник.Номенклатура).СтавкаНДС КАК СтавкаНДС,
		|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто2 КАК Справочник.Договоры) КАК Договор,
		|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто2 КАК Справочник.Договоры).Наименование КАК ДоговорПредставление,
		|	ВЫРАЗИТЬ(ОстаткиДБП.Субконто2 КАК Справочник.Договоры).Контрагент.Наименование КАК КонтрагентПредставление,
		|	ОстаткиДБП.СуммаОстатокКт КАК ОстатокДБП
		|ИЗ
		|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Остатки(
		|			&КонецПериода,
		|			Счет В (&СчетаДБП),
		|			&ВидыСубконтоДБП,
		|			Организация = &Организация
		|				И &УсловиеИФО
		|				И Субконто2 = &Договор) КАК ОстаткиДБП
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетДБП,
		|	КонтрагентПредставление,
		|	ДоговорПредставление,
		|	НоменклатураПредставление";

		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоИФО") И ЗначениеЗаполнено(ИФО) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеИФО", "ИФО = &ИФО");
			Запрос.УстановитьПараметр("ИФО", ИФО);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеИФО", "ИСТИНА");
		КонецЕсли;

	КонецЕсли;

	Если ЗаполнитьПорядокОплаты Тогда

		ПорядокОплаты.Очистить();

		НомераТаблиц.Вставить("ПериодДвижений", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ПорядокОплатыОбразование", НомераТаблиц.Количество());
		Запрос.Текст = Запрос.Текст + ?(ЗначениеЗаполнено(Запрос.Текст), ОбщегоНазначения.РазделительПакетаЗапросов(), "") +
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПорядокОплатыОбразованиеСрезПоследних.Период КАК Период,
		|	ПорядокОплатыОбразованиеСрезПоследних.Регистратор КАК Регистратор,
		|	ПорядокОплатыОбразованиеСрезПоследних.Активность КАК Активность,
		|	ПорядокОплатыОбразованиеСрезПоследних.Организация КАК Организация,
		|	ПорядокОплатыОбразованиеСрезПоследних.Договор КАК Договор,
		|	ПорядокОплатыОбразованиеСрезПоследних.Учащийся КАК Учащийся,
		|	ПорядокОплатыОбразованиеСрезПоследних.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ПериодДвижений
		|ИЗ
		|	РегистрСведений.ПорядокОплатыОбразование.СрезПоследних(
		|			&КонецПериода,
		|			Активность = ИСТИНА
		|				И Организация = &Организация
		|				И Договор = &Договор
		|				И Учащийся = &Студент
		|				И Контрагент = &Контрагент) КАК ПорядокОплатыОбразованиеСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ,
		|	Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПорядокОплатыОбразование.Учащийся КАК Учащийся,
		|	ПорядокОплатыОбразование.Факультет КАК Факультет,
		|	ПорядокОплатыОбразование.ОплатитьДо КАК ОплатитьДо,
		|	ПорядокОплатыОбразование.Валюта КАК Валюта,
		|	ПорядокОплатыОбразование.СуммаВВалюте КАК СуммаВВалюте,
		|	ПорядокОплатыОбразование.НачалоПериода КАК НачалоПериода,
		|	ПорядокОплатыОбразование.КонецПериода КАК КонецПериода,
		|	ПорядокОплатыОбразование.Примечание КАК Примечание
		|ИЗ
		|	ПериодДвижений КАК ПериодДвижений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОплатыОбразование КАК ПорядокОплатыОбразование
		|		ПО ПериодДвижений.Период = ПорядокОплатыОбразование.Период
		|			И ПериодДвижений.Регистратор = ПорядокОплатыОбразование.Регистратор
		|			И ПериодДвижений.Активность = ПорядокОплатыОбразование.Активность
		|			И ПериодДвижений.Организация = ПорядокОплатыОбразование.Организация
		|			И ПериодДвижений.Договор = ПорядокОплатыОбразование.Договор
		|			И ПериодДвижений.Учащийся = ПорядокОплатыОбразование.Учащийся
		|			И ПериодДвижений.Контрагент = ПорядокОплатыОбразование.Контрагент
		|ГДЕ
		|	ПорядокОплатыОбразование.СуммаВВалюте <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Факультет,
		|	Валюта,
		|	ОплатитьДо,
		|	НачалоПериода,
		|	КонецПериода";

	КонецЕсли;

	Результат = Запрос.ВыполнитьПакет();

	Если ЗаполнитьПорядокУчетаДоходов Тогда

		// Заполним реквизиты шапки по параметрам списания ДБП, установленных для договора.
		ПараметрыСписанияДоходовБудущихПериодов = Результат[НомераТаблиц.ПараметрыСписанияДоходовБудущихПериодов].Выбрать();
		Если ПараметрыСписанияДоходовБудущихПериодов.Следующий() Тогда

			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыСписанияДоходовБудущихПериодов,
			"СпособПризнанияДоходов,ДатаНачалаСписания,ДатаОкончанияСписания,
			|СчетДоходов,СубконтоДоходов1,СубконтоДоходов2,СубконтоДоходов3,
			|ВидДеятельностиНУ,СчетДоходовНУ,СтатьяПрочихДоходовНУ");

		КонецЕсли;

	КонецЕсли;

	Если ЗаполнитьСуммыДоходов Тогда

		ДатаУчетнойПолитики = ?(ЗначениеЗаполнено(ВидМежотчетногоПериода), КонецГода(Дата) + 1, Дата);

		ВедетсяУчетДБППоПодразделениям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоПодразделениям")
		И БухгалтерскийУчетПовтИсп.ПолучитьПризнакиУчета("401.40").УчетПоПодразделениям;

		// Расчет сумм доходов будущих периодов.
		ТаблицаОстатковДБП = Результат[НомераТаблиц.ДоходыБудущихПериодов].Выгрузить();
		Для Каждого ОстаткиДБП Из ТаблицаОстатковДБП Цикл

			НоваяСтрока = ДоходыБудущихПериодов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОстаткиДБП);

			НоваяСтрока.СчетРасчетов = БухгалтерскийУчет.ПолучитьАналитическийСчетПоКЭК(
			НоваяСтрока.КЭК, "205.00",, ДатаУчетнойПолитики, Организация, ИФО);

		КонецЦикла;

	КонецЕсли;

	Если ЗаполнитьПорядокОплаты Тогда

		ПорядокОплатыОбразование = Результат[НомераТаблиц.ПорядокОплатыОбразование].Выбрать();
		Пока ПорядокОплатыОбразование.Следующий() Цикл

			НоваяСтрока = ПорядокОплаты.Добавить();

			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПорядокОплатыОбразование,
			"ОплатитьДо,НачалоПериода,КонецПериода,Примечание,Факультет,Валюта");

			НоваяСтрока.СуммаВВалютеДоИзменений    = ПорядокОплатыОбразование.СуммаВВалюте;
			НоваяСтрока.СуммаВВалюте               = 0;
			НоваяСтрока.СуммаВВалютеПослеИзменений = ПорядокОплатыОбразование.СуммаВВалюте;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры
