
&НаСервере
Процедура АБК_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)

	СтруктураЗаполнения = ХранилищеНастроекДанныхФорм.Загрузить(,"АБК_ГрафикиОплатыОбразование_НастрйокиЗаполнения");
	Если СтруктураЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,СтруктураЗаполнения);	 
		Если СтруктураЗаполнения.Свойство("ТаблицаОплат") Тогда
			ТаблицаДатыОплат.Загрузить(СтруктураЗаполнения.ТаблицаОплат);		
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Периодичность.СписокВыбора.Добавить("Месяца","Месяц");
	Элементы.Периодичность.СписокВыбора.Добавить("Квартала","Квартал");
	Элементы.Периодичность.СписокВыбора.Добавить("Года","Год");
	
	Элементы.ГруппаДатаОплаты.Видимость = НестандартныеДатыОплаты; 
	Элементы.ПорядокОплатыНестандартныеДатыОплаты.Пометка = НестандартныеДатыОплаты;
	
КонецПроцедуры

&НаКлиенте
Процедура АБК_ПриЗакрытииПосле(ЗавершениеРаботы)
	
	СохранитьНастройкиНаСервере(); 
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере()
	
	СтруктураЗаполнения = Новый Структура("Сумма,СуммаНаВесьПериод,Период,Периодичность,ИсключатьИюльАвгуст,НестандартныеДатыОплаты");
	ЗаполнитьЗначенияСвойств(СтруктураЗаполнения,ЭтаФорма);  
	СтруктураЗаполнения.Вставить("ТаблицаОплат", ТаблицаДатыОплат.Выгрузить());
	ХранилищеНастроекДанныхФорм.Сохранить(,"АБК_ГрафикиОплатыОбразование_НастрйокиЗаполнения",СтруктураЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура АБК_ЗаполнитьПосле(Команда)
	
	Если ЗначениеЗаполнено(Период) И ЗначениеЗаполнено(Периодичность) И ЗначениеЗаполнено(Сумма) Тогда
		
		Объект.ПорядокОплаты.Очистить(); 
		
		Если Период.ДатаНачала>Период.ДатаОкончания Тогда
			Возврат;
		КонецЕсли;
		
		Дата = Период.ДатаНачала;
		Выполнить("Дата = Конец"+Периодичность+"(Период.ДатаНачала)");
		
		ВПериоде=Истина;
		Пока ВПериоде Цикл
			
			Если ИсключатьИюльАвгуст И Периодичность = "Месяца" Тогда
				Если Месяц(Дата) = 7 или Месяц(Дата) = 8  Тогда
					Если Периодичность = "Месяца" Тогда
						Дата=ДобавитьМесяц(Дата,1);
					ИначеЕсли Периодичность = "Квартала" Тогда 
						Дата=ДобавитьМесяц(Дата,3);
					ИначеЕсли Периодичность = "Года" Тогда
						Дата=ДобавитьМесяц(Дата,12);	
					КонецЕсли;
					Если Дата > КонецМесяца(Период.ДатаОкончания) тогда
						ВПериоде=Ложь;	
					КонецЕсли;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			
			НовСтр=Объект.ПорядокОплаты.Добавить();
			 
			НовСтр.КонецПериода = Дата;
			Если НовСтр.КонецПериода > Период.ДатаОкончания Тогда
				НовСтр.КонецПериода = Период.ДатаОкончания;	
			КонецЕсли;
			НовСтр.ОплатитьДо 	= НовСтр.КонецПериода;
			
			Выполнить("НовСтр.НачалоПериода = Начало"+Периодичность+"(Дата)");	
			
			Если НовСтр.НачалоПериода < Период.ДатаНачала Тогда
				НовСтр.НачалоПериода = Период.ДатаНачала;	
			КонецЕсли;		
			
			НовСтр.СуммаПроцент=Сумма;
			Если Периодичность = "Месяца" Тогда
				Дата=КонецМесяца(ДобавитьМесяц(Дата,1));
			ИначеЕсли Периодичность = "Квартала" Тогда 
				Дата=КонецМесяца(ДобавитьМесяц(Дата,3));
			ИначеЕсли Периодичность = "Года" Тогда
				Дата=КонецМесяца(ДобавитьМесяц(Дата,12));	
			КонецЕсли;   
			
			Если Дата > КонецМесяца(Период.ДатаОкончания) тогда
				ВПериоде=Ложь;	
			КонецЕсли;
			
			// Нестандартные периоды оплаты  
			Если НестандартныеДатыОплаты Тогда
				Для Каждого СтрокаДатыОплат из ТаблицаДатыОплат Цикл 
					
					Попытка     
						
						МассивПериода	= СтрРазделить(СтрокаДатыОплат.Период,"-");
						ДатаНачала		= СтроковыеФункцииКлиентСервер.СтрокаВДату("" + 	СокрЛП(МассивПериода[0]) + "." + Формат(Год(НовСтр.ОплатитьДо),"ЧГ="));
						ДатаОкончания	= СтроковыеФункцииКлиентСервер.СтрокаВДату("" + 	СокрЛП(МассивПериода[1]) + "." + Формат(Год(НовСтр.ОплатитьДо),"ЧГ=")); 			
						
						Если ДатаНачала > ДатаОкончания Тогда
							ДатаОкончания = СтроковыеФункцииКлиентСервер.СтрокаВДату("" + 	СокрЛП(МассивПериода[1]) + "." + Формат(Год(НовСтр.ОплатитьДо)+1,"ЧГ="));			
							
							ДатаНачала_ПредыдущийГод 	= СтроковыеФункцииКлиентСервер.СтрокаВДату("" + 	СокрЛП(МассивПериода[0]) + "." + Формат(Год(НовСтр.ОплатитьДо)-1,"ЧГ="));
							ДатаОкончания_ПредыдущийГод = СтроковыеФункцииКлиентСервер.СтрокаВДату("" + 	СокрЛП(МассивПериода[1]) + "." + Формат(Год(НовСтр.ОплатитьДо),"ЧГ="));
							
							Если НовСтр.ОплатитьДо >= ДатаНачала_ПредыдущийГод
								И НовСтр.ОплатитьДо <= ДатаОкончания_ПредыдущийГод Тогда
								
								НовСтр.ОплатитьДо = СтроковыеФункцииКлиентСервер.СтрокаВДату("" + 	СтрокаДатыОплат.ДатаОплаты + "." + Формат(Год(НовСтр.ОплатитьДо),"ЧГ="));
								Прервать;          
							КонецЕсли;
						КонецЕсли; 
						
						Если НовСтр.ОплатитьДо >= ДатаНачала
							И НовСтр.ОплатитьДо <= ДатаОкончания Тогда
							
							НовСтр.ОплатитьДо = СтроковыеФункцииКлиентСервер.СтрокаВДату("" + СтрокаДатыОплат.ДатаОплаты + "." + Формат(Год(НовСтр.ОплатитьДо),"ЧГ="));
							Прервать;          
						КонецЕсли;
						
					Исключение
					КонецПопытки;
					
				КонецЦикла;
			КонецЕсли;
			
			
		КонецЦикла; 
		
	КонецЕсли;  

	Если СуммаНаВесьПериод Тогда      
		
		Для Каждого Строка из Объект.ПорядокОплаты Цикл
			Строка.СуммаПроцент = Сумма / Объект.ПорядокОплаты.Количество(); 		
		КонецЦикла;    
		
		Разница = Объект.ПорядокОплаты.Итог("СуммаПроцент") - Сумма;
		Если Разница <> 0 И Объект.ПорядокОплаты.Количество() Тогда
			Объект.ПорядокОплаты[Объект.ПорядокОплаты.Количество()-1].СуммаПроцент = Объект.ПорядокОплаты[Объект.ПорядокОплаты.Количество()-1].СуммаПроцент - Разница;	
		КонецЕсли;	
		
	КонецЕсли;  
	
КонецПроцедуры

&НаКлиенте
Процедура АБК_НестандартныеДатыОплатыПосле(Команда)
	
	НестандартныеДатыОплаты = Не НестандартныеДатыОплаты;
	Элементы.ГруппаДатаОплаты.Видимость = НестандартныеДатыОплаты; 
	Элементы.ПорядокОплатыНестандартныеДатыОплаты.Пометка = НестандартныеДатыОплаты; 
	
	Если НестандартныеДатыОплаты И ТаблицаДатыОплат.Количество() = 0 Тогда
		НовСтрТаблицыОплат = ТаблицаДатыОплат.Добавить();
		НовСтрТаблицыОплат.Период = "01.02 - 31.07";	  
		НовСтрТаблицыОплат.ДатаОплаты = "01.08";
		
		НовСтрТаблицыОплат = ТаблицаДатыОплат.Добавить();
		НовСтрТаблицыОплат.Период = "01.08 - 31.01";	  
		НовСтрТаблицыОплат.ДатаОплаты = "01.02";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АБК_ТаблицаДатыОплатПериодНачалоВыбораПосле(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	

	ТекущиеДанные = Элементы.ТаблицаДатыОплат.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
        
    СтандартныйПериод = Новый СтандартныйПериод();
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Период) И СтрНайти(ТекущиеДанные.Период,"-") Тогда
		
		Попытка
			МассивПериода = СтрРазделить(ТекущиеДанные.Период,"-");
			СтандартныйПериод.ДатаНачала = СтроковыеФункцииКлиентСервер.СтрокаВДату("" + 	СокрЛП(МассивПериода[0]) + ".1488");
			СтандартныйПериод.ДатаОкончания = СтроковыеФункцииКлиентСервер.СтрокаВДату("" + СокрЛП(МассивПериода[1]) + ".1488"); 
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
    Диалог.Период = СтандартныйПериод;       
	
	ДопПараметры = Новый Структура();
	ДопПараметры.Вставить("ИдентификаторСтроки", ТекущиеДанные.ПолучитьИдентификатор());
    
    ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПериода",ЭтаФорма, ДопПараметры);
    
    Диалог.Показать(ОписаниеОповещения);  
	
КонецПроцедуры        

&НаКлиенте
Процедура ОбработкаВыбораПериода(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		СтрокаТаблицы = ТаблицаДатыОплат.НайтиПоИдентификатору(ДопПараметры.ИдентификаторСтроки);
		Если СтрокаТаблицы <>  Неопределено Тогда
			
			СтрокаТаблицы.Период = "" + Формат(Результат.ДатаНачала,"ДФ=dd.MM") + " - " + Формат(Результат.ДатаОкончания,"ДФ=dd.MM");	
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
