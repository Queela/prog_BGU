
&НаСервере
Процедура АБК_АктСверкиВзаиморасчетов_НесколькоДоговоров_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("АБК_СписокДоговоров", Новый ОписаниеТипов("СписокЗначений"),, "Договоры"));
	ИзменитьРеквизиты(МассивРеквизитов);
	ЭтотОбъект["АБК_СписокДоговоров"].ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Договоры");
	
	НовыйЭлемент = Элементы.Вставить("АБК_СписокДоговоров", Тип("ПолеФормы"), Элементы.ГруппаКФО, Элементы.КФО);
	НовыйЭлемент.Вид 		  = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным  = "АБК_СписокДоговоров";
   	НовыйЭлемент.КнопкаВыбора = Истина;
	НовыйЭлемент.УстановитьДействие("ПриИзменении", "АБК_СписокДоговоровПриИзменении");
   	НовыйЭлемент.УстановитьДействие("НачалоВыбора", "АБК_СписокДоговоровНачалоВыбора");
	
	Элементы.Договор.Видимость = Ложь;
	
	НовыйЭлемент.СвязиПараметровВыбора = Элементы.Договор.СвязиПараметровВыбора;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Свойство = НайтиСоздатьДополнительноеСведение("АБК_СписокДоговоров");
		
		Если ЗначениеЗаполнено(Свойство) Тогда
			
			НЗ = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
			НЗ.Отбор.Объект.Установить(Объект.Ссылка);
			НЗ.Отбор.Свойство.Установить(Свойство);
			НЗ.Прочитать();
			ТЧРеквизитов = НЗ.Выгрузить();
			
			Если ТЧРеквизитов.Количество() И ЗначениеЗаполнено(ТЧРеквизитов[0].Значение) Тогда
				
				МассивДоговоров = ЗначениеИзСтрокиВнутр(ТЧРеквизитов[0].Значение);
				ЭтотОбъект["АБК_СписокДоговоров"].ЗагрузитьЗначения(МассивДоговоров);
				
			КонецЕсли;
			
		КонецЕсли;  
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура АБК_СписокДоговоровНачалоВыбора(Элемент)
		
КонецПроцедуры

&НаКлиенте
Процедура АБК_СписокДоговоровПриИзменении(Элемент)
	
	Если ЭтотОбъект["АБК_СписокДоговоров"].Количество() > 12 Тогда
		
		АБК_СписокДоговоровПриИзмененииНаСервере();
		    				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Недопустимое количество договоров
						  |Максимальное количество 12";
		Сообщение.Поле = "АБК_СписокДоговоров";
		Сообщение.ПутьКДанным = "АБК_СписокДоговоров";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();                                                 
	
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Процедура АБК_СписокДоговоровПриИзмененииНаСервере()
	ЭтотОбъект["АБК_СписокДоговоров"].Удалить(ЭтотОбъект["АБК_СписокДоговоров"].Количество()-1);	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ПолучитьПараметрыПроцедуры")
Функция АБК_АктСверкиВзаиморасчетов_НесколькоДоговоров_ПолучитьПараметрыПроцедуры()

	ПараметрыПроцедуры = Новый Структура();
	ПараметрыПроцедуры.Вставить("ШапкаДокумента",			Документы.АктСверкиВзаиморасчетов.ПолучитьСтруктуруШапкиДокумента(Объект));
	#Вставка
	МассивДоговоров = Новый Массив;
	МассивДоговоров = ЭтотОбъект["АБК_СписокДоговоров"].ВыгрузитьЗначения();
	
	ПараметрыПроцедуры.ШапкаДокумента.Вставить("МассивДоговоров", МассивДоговоров);
	#КонецВставки
	ПараметрыПроцедуры.Вставить("СписокОтмеченныхСчетов",	Документы.АктСверкиВзаиморасчетов.ПолучитьСписокОтмеченныхСчетов(Объект));

	Возврат ПараметрыПроцедуры;

КонецФункции 

&НаСервере
Процедура АБК_АктСверкиВзаиморасчетов_НесколькоДоговоров_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	
	МассивДоговоров = ЭтотОбъект["АБК_СписокДоговоров"].ВыгрузитьЗначения();
	
	Если МассивДоговоров.Количество() < 13 Тогда
		
		ЗаписатьЗначениеДопРеквизитаСФормы(Объект.Ссылка, МассивДоговоров, "АБК_СписокДоговоров");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначениеДопРеквизитаСФормы(СсылкаНаВладельца, ЗначениеРеквизита, ИдентификаторДляФормул)
	
	Свойство = НайтиСоздатьДополнительноеСведение(ИдентификаторДляФормул);
	
	Если ЗначениеЗаполнено(Свойство) И ЗначениеЗаполнено(СсылкаНаВладельца) Тогда
		
		МЗ = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
		МЗ.Объект   	= СсылкаНаВладельца;
		МЗ.Свойство   = Свойство;
		МЗ.Значение   = ЗначениеВСтрокуВнутр(ЗначениеРеквизита);
		МЗ.Записать();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция НайтиСоздатьДополнительноеСведение(ИдентификаторДляФормул)
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторДляФормул", ИдентификаторДляФормул);
	Запрос.Текст = "ВЫБРАТЬ
		|	ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		|ГДЕ
		|	ДополнительныеРеквизитыИСведения.ИдентификаторДляФормул = &ИдентификаторДляФормул";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	ДопСведение = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	ДопСведение.Наименование = ИдентификаторДляФормул;
	ДопСведение.ИдентификаторДляФормул = ИдентификаторДляФормул;
	ДопСведение.Виден = Ложь;
	ДопСведение.Комментарий = "Техничесикий доп реквизит для работы расширения";
	ДопСведение.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(1024));
	ДопСведение.ЭтоДополнительноеСведение = Ложь;  
	
	// Формирование имени дополнительного реквизита (сведения).
	Если Не ЗначениеЗаполнено(ДопСведение.Имя) Тогда
		
		ДопСведение.Имя = "";
		ЗаголовокОбъекта = ДопСведение.Заголовок;
		УправлениеСвойствамиСлужебный.УдалитьНедопустимыеСимволы(ЗаголовокОбъекта);
		ЗаголовокОбъектаЧастями = СтрРазделить(ЗаголовокОбъекта, " ", Ложь);
		Для Каждого ЧастьЗаголовка Из ЗаголовокОбъектаЧастями Цикл
			ДопСведение.Имя = ДопСведение.Имя + ВРег(Лев(ЧастьЗаголовка, 1)) + Сред(ЧастьЗаголовка, 2);
		КонецЦикла;
		
		Если ИмяНачинаетсяСЦифры(ДопСведение.Имя) Тогда
			ДопСведение.Имя = "_" + ДопСведение.Имя;
		КонецЕсли;
		
		УИД = Новый УникальныйИдентификатор();
		СтрокаУИД = СтрЗаменить(Строка(УИД), "-", "");
		ДопСведение.Имя = ДопСведение.Имя + "_" + СтрокаУИД;
		
	КонецЕсли;
	
	ДопСведение.Записать();
	
	Возврат ДопСведение.Ссылка;
	
КонецФункции  

&НаСервере
Функция ИмяНачинаетсяСЦифры(ИмяРеквизита)
	
	ПервыйСимвол = Лев(ИмяРеквизита, 1);
	Если СтрНайти("0123456789", ПервыйСимвол) > 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
