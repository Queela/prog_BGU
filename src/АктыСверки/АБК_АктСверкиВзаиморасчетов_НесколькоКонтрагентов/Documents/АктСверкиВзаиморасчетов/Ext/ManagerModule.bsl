&ИзменениеИКонтроль("ПолучитьДанныеБухУчета")
Процедура АБК_ПолучитьДанныеБухУчета(ПараметрыПроцедуры, АдресРезультата)

	Параметры = ПолучитьПараметрыЗаполнения(ПараметрыПроцедуры);

	РезультатыСверки = ВыполнитьСтандартнуюСверку(Параметры);

	СверкаПоДолгосрочнымДоговорам = ВыполнитьСверкуПоДолгосрочнымДоговорам(Параметры);

	// Добавляем обороты
	ТаблицаПриемник = РезультатыСверки["Обороты"];
	ТаблицаИсточник = СверкаПоДолгосрочнымДоговорам["Обороты"];
	Для Каждого СтрокаТаблицы Из ТаблицаИсточник Цикл
		НоваяСтрока = ТаблицаПриемник.Добавить();

		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;

	УдалитьСтрокиСНулевымиСуммами(РезультатыСверки["Обороты"]);

	// Добавляем остатки на начало
	ТаблицаПриемник = РезультатыСверки["ОстаткиНаНачало"];
	ТаблицаИсточник = СверкаПоДолгосрочнымДоговорам["ОстаткиНаНачало"];
	Для Каждого СтрокаТаблицы Из ТаблицаИсточник Цикл
		НоваяСтрока = ТаблицаПриемник.Добавить();

		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	#Удаление
	РезультатыСверки["ОстаткиНаНачало"].Свернуть("Организация,Договор", "ОстатокНаНачало");
	#КонецУдаления
	#Вставка
	РезультатыСверки["ОстаткиНаНачало"].Свернуть("Организация,Договор,Контрагент", "ОстатокНаНачало");
	#КонецВставки

	// Заполним представления документов в таблице оборотов

	РеквизитыПервичногоДокумента = Новый Структура("
	|ВидПервичногоДокумента,
	|ДатаПервичногоДокумента,
	|НомерПервичногоДокумента");

	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("РеквизитыПервичногоДокумента",	РеквизитыПервичногоДокумента);
	ДополнительныеПараметры.Вставить("ДлительныеДоговоры",			Параметры["ДоговорыСКонтрагентом"]["ДлительныеДоговоры"]);

	ИнициализироватьДополнительныеПараметрыПредставлениеДокументаДлительныеДоговоры(ДополнительныеПараметры);

	РезультатыСверки.Вставить("ОшибкиНастроекПредставленияДокументаДлительныеДоговоры", ДополнительныеПараметры.ПредставлениеДокументаНастройкиСКД.Ошибки);

	СтруктураШапки = ПолучитьСтруктуруШапкиДляОпределенияПредставленияДокумента();

	ЗаполнитьЗначенияСвойств(СтруктураШапки, ПараметрыПроцедуры);

	Таблица = РезультатыСверки["Обороты"];

	Таблица.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));

	Для Каждого СтрокаТаблицы Из Таблица Цикл

		ЗаполнитьЗначенияСвойств(РеквизитыПервичногоДокумента, СтрокаТаблицы);

		ПредставлениеДокумента = ПолучитьПредставлениеДокумента(
		СтрокаТаблицы,
		СтруктураШапки,
		ДополнительныеПараметры);

		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПредставлениеДокумента, "Представление,Дата");

	КонецЦикла;

	Таблица.Сортировать("Дата Возр, Представление Возр");

	Таблица.Колонки.Добавить("ДатаУчетногоДокумента", Новый ОписаниеТипов("Дата",,,,,Новый КвалификаторыДаты(ЧастиДаты.Дата)));

	ЗаполнитьДатыУчетныхДокументов(, Таблица);

	ПоместитьВоВременноеХранилище(РезультатыСверки, АдресРезультата);

КонецПроцедуры

&ИзменениеИКонтроль("ПодготовитьДанныеДляЗаполненияЭДО")
Процедура АБК_ПодготовитьДанныеДляЗаполненияЭДО(ПараметрыПроцедуры, АдресРезультата)

	УстановитьПривилегированныйРежим(Истина);

	Параметры = ПолучитьПараметрыЗаполнения(ПараметрыПроцедуры);

	РезультатыСверки = ВыполнитьСтандартнуюСверку(Параметры);

	РезультатыСверки.Вставить("Успешно", Ложь);
	РезультатыСверки.Вставить("ЗаполнятьДанныеКонтрагента", ПараметрыПроцедуры.ЗаполнятьДанныеКонтрагента);

	СверкаПоДолгосрочнымДоговорам = ВыполнитьСверкуПоДолгосрочнымДоговорам(Параметры);

	// Добавляем обороты
	ТаблицаПриемник = РезультатыСверки["Обороты"];
	ТаблицаИсточник = СверкаПоДолгосрочнымДоговорам["Обороты"];
	Для Каждого СтрокаТаблицы Из ТаблицаИсточник Цикл
		НоваяСтрока = ТаблицаПриемник.Добавить();

		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;

	// Добавляем остатки на начало
	ТаблицаПриемник = РезультатыСверки["ОстаткиНаНачало"];
	ТаблицаИсточник = СверкаПоДолгосрочнымДоговорам["ОстаткиНаНачало"];
	Для Каждого СтрокаТаблицы Из ТаблицаИсточник Цикл
		НоваяСтрока = ТаблицаПриемник.Добавить();

		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	#Удаление
	РезультатыСверки.ОстаткиНаНачало.Свернуть("Организация,Договор", "ОстатокНаНачало");
	#КонецУдаления
	#Вставка
	РезультатыСверки.ОстаткиНаНачало.Свернуть("Организация,Договор,Контрагент", "ОстатокНаНачало");
	#КонецВставки

	ПараметрыПроцедуры.ОстатокНаНачало = РезультатыСверки.ОстаткиНаНачало.Итог("ОстатокНаНачало");
	РезультатыСверки.Вставить("ОстатокНаНачало", ПараметрыПроцедуры.ОстатокНаНачало);

	// Заполним представления документов в таблице оборотов

	РеквизитыПервичногоДокумента = Новый Структура("
	|ВидПервичногоДокумента,
	|ДатаПервичногоДокумента,
	|НомерПервичногоДокумента");

	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("РеквизитыПервичногоДокумента",	РеквизитыПервичногоДокумента);
	ДополнительныеПараметры.Вставить("ДлительныеДоговоры",			Параметры["ДоговорыСКонтрагентом"]["ДлительныеДоговоры"]);

	ИнициализироватьДополнительныеПараметрыПредставлениеДокументаДлительныеДоговоры(ДополнительныеПараметры);

	РезультатыСверки.Вставить("ОшибкиНастроекПредставленияДокументаДлительныеДоговоры", ДополнительныеПараметры.ПредставлениеДокументаНастройкиСКД.Ошибки);

	СтруктураШапки = ПолучитьСтруктуруШапкиДляОпределенияПредставленияДокумента();

	ЗаполнитьЗначенияСвойств(СтруктураШапки, ПараметрыПроцедуры);

	ТаблицаПоДаннымОрганизации = РезультатыСверки["Обороты"];

	ТаблицаПоДаннымОрганизации.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	ТаблицаПоДаннымОрганизации.Колонки.Добавить("НомерДокумента", Новый ОписаниеТипов("Строка"));
	ТаблицаПоДаннымОрганизации.Колонки.Добавить("ДатаДокумента", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТаблицаПоДаннымОрганизации.Колонки.Добавить("НаименованиеДокумента", Новый ОписаниеТипов("Строка"));
	ТаблицаПоДаннымОрганизации.Колонки.Добавить("НаименованиеОперации", Новый ОписаниеТипов("Строка"));
	ТаблицаПоДаннымОрганизации.Колонки.Добавить("ДатаВходящегоДокумента", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));

	Для Каждого СтрокаТаблицы Из ТаблицаПоДаннымОрганизации Цикл

		ЗаполнитьЗначенияСвойств(РеквизитыПервичногоДокумента, СтрокаТаблицы);

		ПредставлениеДокумента = ПолучитьПредставлениеДокумента(
		СтрокаТаблицы,
		СтруктураШапки,
		ДополнительныеПараметры);

		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ПредставлениеДокумента, "Представление,Дата");

		Если ПараметрыПроцедуры.ЭтоЭлектронныйДокумент Тогда

			// Номер
			НомерДокумента = СтрокаТаблицы.НомерПервичногоДокумента;

			Если Не ЗначениеЗаполнено(НомерДокумента) Тогда
				НомерДокумента = ПредставлениеДокумента.Номер;
			КонецЕсли;

			Если Не ЗначениеЗаполнено(НомерДокумента) Тогда
				НомерДокумента = НСтр("ru='б/н'");
			КонецЕсли;

			// Дата
			ДатаДокумента = СтрокаТаблицы.ДатаПервичногоДокумента;

			Если Не ЗначениеЗаполнено(ДатаДокумента) Тогда
				ДатаДокумента = ПредставлениеДокумента.Дата;
			КонецЕсли;

			// Наименование
			НаименованиеДокумента = Строка(СтрокаТаблицы.ВидДокумента);

			Если Не ЗначениеЗаполнено(НаименованиеДокумента) Тогда
				НаименованиеДокумента = Строка(ТипЗнч(СтрокаТаблицы.Документ));
			КонецЕсли;

			СтрокаТаблицы.НомерДокумента			= НомерДокумента;
			СтрокаТаблицы.ДатаДокумента				= ДатаДокумента;
			СтрокаТаблицы.ДатаВходящегоДокумента	= ДатаДокумента;
			СтрокаТаблицы.НаименованиеДокумента		= НаименованиеДокумента;

			СтрокаТаблицы.НаименованиеОперации = ПредставлениеХозяйственнойОперации(СтрокаТаблицы.Документ, СтрокаТаблицы.Дебет, СтрокаТаблицы.Кредит);
		КонецЕсли;

	КонецЦикла;

	ТаблицаПоДаннымОрганизации.Сортировать("Дата Возр, Представление Возр");

	// Заполним возвращаемую структуру
	РезультатыСверки.Вставить("ПоДаннымОрганизации", ТаблицаПоДаннымОрганизации);
	Если РезультатыСверки.ЗаполнятьДанныеКонтрагента Тогда
		РезультатыСверки.Вставить("ПоДаннымКонтрагента", ТаблицаПоДаннымКонтрагента(ТаблицаПоДаннымОрганизации));
	КонецЕсли;
	РезультатыСверки.Успешно = Истина;

	ПоместитьВоВременноеХранилище(РезультатыСверки, АдресРезультата);

КонецПроцедуры

&ИзменениеИКонтроль("ВыполнитьСтандартнуюСверку")
Функция АБК_ВыполнитьСтандартнуюСверку(Параметры)

	ЗапросПоиск = Новый Запрос();
	ЗапросПоиск.УстановитьПараметр("ДатаНачалаОбороты",								Параметры.ДатаНачалаОбороты);
	ЗапросПоиск.УстановитьПараметр("ДатаНачалаОстатки",								Параметры.ДатаНачалаОстатки);
	ЗапросПоиск.УстановитьПараметр("ДатаОкончанияОбороты",							Параметры.ДатаОкончанияОбороты);
	ЗапросПоиск.УстановитьПараметр("ДатаОкончанияОстатки",							Параметры.ДатаОкончанияОстатки);
	ЗапросПоиск.УстановитьПараметр("АнализируемыеСчета",							Параметры.СчетаСтандартнойСверки.АнализируемыеСчета);
	ЗапросПоиск.УстановитьПараметр("Контрагент",									Параметры.Контрагент);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоОрганизации",				Параметры.ИспользоватьОтборПоОрганизации);
	ЗапросПоиск.УстановитьПараметр("Организация",									Параметры.Организация);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоПодразделению",				Параметры.ИспользоватьОтборПоПодразделению);
	ЗапросПоиск.УстановитьПараметр("Подразделение",									Параметры.Подразделение);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоДоговору",					Параметры.ИспользоватьОтборПоДоговору);
	ЗапросПоиск.УстановитьПараметр("Договоры",										Параметры.ДоговорыСКонтрагентом.ВсеДоговоры);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоИФО",						Параметры.ИспользоватьОтборПоИФО);
	ЗапросПоиск.УстановитьПараметр("ИФО",											Параметры.ИФО);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоКФО",						Параметры.ИспользоватьОтборПоКФО);
	ЗапросПоиск.УстановитьПараметр("КФО",											Параметры.КФО);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоВалюте",						Параметры.ИспользоватьОтборПоВалюте);
	ЗапросПоиск.УстановитьПараметр("Валюта",										Параметры.Валюта);
	ЗапросПоиск.УстановитьПараметр("ДетализироватьОстаткиПоДоговорам",				Параметры.ДетализироватьОстаткиПоДоговорам);
	ЗапросПоиск.УстановитьПараметр("ВыбиратьВалютныеСуммы",							Параметры.ВыбиратьВалютныеСуммы);
	ЗапросПоиск.УстановитьПараметр("ТипыПлатежныхДокументов",							Параметры.ТипыПлатежныхДокументов);
	ЗапросПоиск.УстановитьПараметр("ТипыДокументовСНесколькимиПервичнымиДокументами",	Параметры.ТипыДокументовСНесколькимиПервичнымиДокументами);
	ЗапросПоиск.УстановитьПараметр("ИсключаемыеТипыРегистратора",						Параметры.ИсключаемыеТипыРегистратора);
	ЗапросПоиск.УстановитьПараметр("СчетаДЗ",										Параметры.СчетаСтандартнойСверки.СчетаДЗ);
	ЗапросПоиск.УстановитьПараметр("СчетаКЗ",										Параметры.СчетаСтандартнойСверки.СчетаКЗ);

	// Для фильтра операций
	ЗапросПоиск.УстановитьПараметр("Счета10440",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета10440);
	ЗапросПоиск.УстановитьПараметр("Счета11140",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета11140);
	ЗапросПоиск.УстановитьПараметр("Счета20500",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета20500);
	ЗапросПоиск.УстановитьПараметр("Счета21005",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета21005);
	ЗапросПоиск.УстановитьПараметр("Счета30220",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета30220);
	ЗапросПоиск.УстановитьПараметр("Счета40140",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета40140);
	ЗапросПоиск.УстановитьПараметр("Счета40150",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета40150);
	ЗапросПоиск.УстановитьПараметр("СчетаИсправленияОшибокПрошлыхЛет",	Параметры.СчетаСтандартнойСверки.СчетаИсправленияОшибокПрошлыхЛет);

	// Для сверки по аренде
	ЗапросПоиск.УстановитьПараметр("ВсеДлительныеДоговоры",						Параметры.ДоговорыСКонтрагентом.ДлительныеДоговоры.Все);
	ЗапросПоиск.УстановитьПараметр("ДлительныеДоговорыУчреждениеПродавец",		Параметры.ДоговорыСКонтрагентом.ДлительныеДоговоры.УчреждениеЯвляетсяПродавцом.Все);
	ЗапросПоиск.УстановитьПараметр("ДлительныеДоговорыУчреждениеПокупатель",	Параметры.ДоговорыСКонтрагентом.ДлительныеДоговоры.УчреждениеЯвляетсяПокупателем.Все);

	ЗапросПоиск.Текст = "
	|///////////////////////////////////////////////////////////////////////////////
	|// [0]. Все обороты с учетом отбора
	|//		НЕочищенные от некоторых операций длительных договоров
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация								КАК Организация,
	|	ВЫБОР
	|		// Для платежных документов берем дату непосредственно из документов
	|		// Явно перечисляем все типы платежных документов, заданные в параметре &ТипыПлатежныхДокументов
	|		// чтобы исключить обращение Регистратор.Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(Регистратор) = ТИП(Документ.ЗаявкаНаКассовыйРасход) ТОГДА
	|			ВЫРАЗИТЬ(Регистратор	КАК Документ.ЗаявкаНаКассовыйРасход).Дата
	|		КОГДА ТИПЗНАЧЕНИЯ(Регистратор) = ТИП(Документ.ЗаявкаНаКассовыйРасходСокращенная) ТОГДА
	|			ВЫРАЗИТЬ(Регистратор	КАК Документ.ЗаявкаНаКассовыйРасходСокращенная).Дата
	|		ИНАЧЕ
	|			// Для всех остальных документов считаем,
	|			// что дата документа совпадает с периодом проводок
	|			Период
	|	КОНЕЦ									КАК Дата,
	|	Регистратор								КАК Документ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Регистратор) В(&ТипыПлатежныхДокументов) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ									КАК ЭтоПлатежныйДокумент,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Регистратор) В(&ТипыДокументовСНесколькимиПервичнымиДокументами) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ									КАК ЭтоДокументСНесколькимиПервичнымиДокументами, 
	#Вставка
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Контрагенты) ТОГДА
	|			Субконто1
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Контрагенты) ТОГДА
	|			Субконто2
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Контрагенты) ТОГДА
	|			Субконто3
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ									КАК Контрагент,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|			Субконто1
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|			Субконто2
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|			Субконто3
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|	КОНЕЦ									КАК Договор,
	|	ВЫБОР
	|		КОГДА Счет В(&СчетаДЗ) ТОГДА
	|			СуммаОборот
	|		КОГДА Счет В(&СчетаКЗ) ТОГДА
	|			0
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаОборотДт
	|		ИНАЧЕ
	|			СуммаОборотДт
	|	КОНЕЦ									КАК Дебет,
	|	ВЫБОР
	|		КОГДА Счет В(&СчетаДЗ) ТОГДА
	|			0
	|		КОГДА Счет В(&СчетаКЗ) ТОГДА
	|			СуммаОборот
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаОборотКт
	|		ИНАЧЕ
	|			СуммаОборотКт
	|	КОНЕЦ									КАК Кредит,
	|	// Фильтр операций
	|	(Счет В(&Счета20500) И КорСчет В(&Счета40140)
	|		ИЛИ Счет В(&Счета21005) И КорСчет В(&Счета40140)
	|		ИЛИ Счет В(&Счета21005) И КорСчет В(&Счета40150)
	|		ИЛИ Счет В(&Счета20500) И КорСчет В(&СчетаИсправленияОшибокПрошлыхЛет)
	|		ИЛИ Счет В(&Счета21005) И КорСчет В(&СчетаИсправленияОшибокПрошлыхЛет)
	|)	КАК ЭтоИсключаемаяОперацияПродавцаПоДлительномуДоговору,
	|	(Счет В(&Счета30220) И КорСчет В(&Счета11140)
	|		// Исключаем операцию переноса кредиторской задолженности по арендной плате при переходе на СГС Аренда
	|		ИЛИ Счет В(&Счета30220) И КорСчет В(&Счета10440))	КАК ЭтоИсключаемаяОперацияПокупателяПоДлительномуДоговору
	|	
	|ПОМЕСТИТЬ
	|	ВсеОборотыНеочищенные
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Обороты(
	|		&ДатаНачалаОбороты,				// 1
	|		&ДатаОкончанияОбороты,			// 2
	|		Регистратор,					// 3
	|		Счет В(&АнализируемыеСчета),	// 4.Счет
	|		,								// 5.Субконто
	|		// 6.Условия
	|		// (одинаковые для отбора оборотов, остатков)
	|		// Отбор по контрагенту
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Контрагенты) ТОГДА
	#Удаление
	|				Субконто1 = &Контрагент                
	#КонецУдаления                
	#Вставка
	|				Субконто1 В (&Контрагент)                
	#КонецВставки
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Контрагенты) ТОГДА   
	#Удаление
	|				Субконто2 = &Контрагент                          
	#КонецУдаления          
	#Вставка
	|				Субконто2 В (&Контрагент)                
	#КонецВставки
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Контрагенты) ТОГДА  
	#Удаление
	|				Субконто3 = &Контрагент   
	#КонецУдаления            
	#Вставка
	|				Субконто3 В (&Контрагент)                
	#КонецВставки
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ
	|		// Отбор по договору
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоДоговору ТОГДА
	|				ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто1 В(&Договоры)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто2 В(&Договоры)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто3 В(&Договоры)
	|					ИНАЧЕ
	|						ЛОЖЬ
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоОрганизации ТОГДА
	|				Организация = &Организация
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоПодразделению ТОГДА
	|				Подразделение = &Подразделение
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоИФО ТОГДА
	|				ИФО = &ИФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоКФО ТОГДА
	|				КФО = &КФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоВалюте ТОГДА
	|				Валюта = &Валюта
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|	) КАК Обороты
	|ГДЕ
	|	НЕ ТИПЗНАЧЕНИЯ(Регистратор) В (&ИсключаемыеТипыРегистратора)
	|	
	|	// Исключаем обороты, которые не изменяют состояние расчетов (Контрагент + Договор)
	|	И НЕ ВЫБОР
	|		КОГДА КорСчет В(&АнализируемыеСчета) ТОГДА
	|			// Обороты по одному и тому же контрагенту
	|			ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Контрагенты) ТОГДА
	|					ЕСТЬNULL(Субконто1 = КорСубконто1, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто1 = КорСубконто2, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто1 = КорСубконто3, ЛОЖЬ)
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Контрагенты) ТОГДА
	|					ЕСТЬNULL(Субконто2 = КорСубконто1, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто2 = КорСубконто2, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто2 = КорСубконто3, ЛОЖЬ)
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Контрагенты) ТОГДА
	|					ЕСТЬNULL(Субконто3 = КорСубконто1, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто3 = КорСубконто2, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто3 = КорСубконто3, ЛОЖЬ)
	|				ИНАЧЕ
	|					// Отсутствует субконто Контрагенты
	|					// Здесь обороты не исключаем (это уже сделано отбором в виртуальной таблице оборотов)
	|					ЛОЖЬ
	|			КОНЕЦ
	|			// Обороты по одному и тому же договору
	|			И ВЫБОР
	|		  		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|					ЕСТЬNULL(Субконто1 = КорСубконто1, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто1 = КорСубконто2, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто1 = КорСубконто3, ЛОЖЬ)
	|		  		КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|					ЕСТЬNULL(Субконто2 = КорСубконто1, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто2 = КорСубконто2, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто2 = КорСубконто3, ЛОЖЬ)
	|		  		КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|					ЕСТЬNULL(Субконто3 = КорСубконто1, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто3 = КорСубконто2, ЛОЖЬ) ИЛИ ЕСТЬNULL(Субконто3 = КорСубконто3, ЛОЖЬ)
	|				ИНАЧЕ
	|					// Отсутствует субконто Договоры
	|					// Здесь обороты не исключаем (это уже сделано отбором в виртуальной таблице оборотов)
	|					ЛОЖЬ
	|			КОНЕЦ
	|		ИНАЧЕ
	|			// Для других кор.счетов обороты не исключаем
	|			ЛОЖЬ
	|	КОНЕЦ
	|;		
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [1]. Все обороты с учетом отбора, очищенные от некоторых операций
	|//
	|// Обороты по всем договорам, за исключением длительных договоров
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	ВсеОбороты
	|ИЗ
	|	ВсеОборотыНеочищенные
	|ГДЕ	
	|	// Фильтр операций вынесен в отдельный запрос ради упрощения предыдущего запроса
	|	// По длительным договорам исключаем любые обороты, вне зависимости от настроек
	|	// По всем иным (обычным, не длительным) договорам ничего не исключаем
	|	НЕ Договор В(&ВсеДлительныеДоговоры)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обороты по длительным договорам
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВсеОборотыНеочищенные
	|ГДЕ	
	|	// Фильтр операций вынесен в отдельный запрос ради упрощения предыдущего запроса
	|	// По длительным договорам добавляем обороты, вне зависимости от настроек
	|	// По всем прочим договорам ничего не добавляем
	|	(Договор В(&ДлительныеДоговорыУчреждениеПродавец) И НЕ ЭтоИсключаемаяОперацияПродавцаПоДлительномуДоговору)
	|	ИЛИ (Договор В(&ДлительныеДоговорыУчреждениеПокупатель) И НЕ ЭтоИсключаемаяОперацияПокупателяПоДлительномуДоговору)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;		
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [2]. Подготовка оборотов из отдельных проводок
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация								КАК Организация,
	|	Период									КАК Дата,
	|	Регистратор								КАК Документ,
	|	(СчетДт В(&АнализируемыеСчета))			КАК СчетДтПринадлежитСписку,
	|	(СчетКт В(&АнализируемыеСчета))			КАК СчетКтПринадлежитСписку,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт1) = ТИП(Справочник.Контрагенты) ТОГДА
	|			СубконтоДт1
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт2) = ТИП(Справочник.Контрагенты) ТОГДА
	|			СубконтоДт2
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт3) = ТИП(Справочник.Контрагенты) ТОГДА
	|			СубконтоДт3
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ									КАК КонтрагентДт,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоКт1) = ТИП(Справочник.Контрагенты) ТОГДА
	|			СубконтоКт1
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоКт2) = ТИП(Справочник.Контрагенты) ТОГДА
	|			СубконтоКт2
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоКт3) = ТИП(Справочник.Контрагенты) ТОГДА
	|			СубконтоКт3
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ									КАК КонтрагентКт,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт1) = ТИП(Справочник.Договоры) ТОГДА
	|			СубконтоДт1
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт2) = ТИП(Справочник.Договоры) ТОГДА
	|			СубконтоДт2
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт3) = ТИП(Справочник.Договоры) ТОГДА
	|			СубконтоДт3
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|	КОНЕЦ									КАК ДоговорДт,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоКт1) = ТИП(Справочник.Договоры) ТОГДА
	|			СубконтоКт1
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоКт2) = ТИП(Справочник.Договоры) ТОГДА
	|			СубконтоКт2
	|		КОГДА ТИПЗНАЧЕНИЯ(СубконтоКт3) = ТИП(Справочник.Договоры) ТОГДА
	|			СубконтоКт3
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|	КОНЕЦ									КАК ДоговорКт,
	|	ВЫБОР
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаДт
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ									КАК ВалютнаяСуммаДт,
	|	ВЫБОР
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаКт
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ									КАК ВалютнаяСуммаКт,
	|	Сумма									КАК Сумма,
	|	ВидПервичногоДокумента					КАК ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента					КАК ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента				КАК НомерПервичногоДокумента,
	|	(СчетДт В(&СчетаДЗ))					КАК СчетДтЭтоСчетДЗ,
	|	(СчетДт В(&СчетаКЗ))					КАК СчетДтЭтоСчетКЗ,
	|	(СчетКт В(&СчетаДЗ))					КАК СчетКтЭтоСчетДЗ,
	|	(СчетКт В(&СчетаКЗ))					КАК СчетКтЭтоСчетКЗ
	|ПОМЕСТИТЬ
	|	ПодготовкаОтдельныеПроводки
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ДвиженияССубконто(
	|		&ДатаНачалаОбороты,					// 1
	|		&ДатаОкончанияОбороты,				// 2
	|		Регистратор В						// 3. Условия
	|			(ВЫБРАТЬ
	|				Документ
	|			ИЗ
	|				ВсеОбороты
	|			ГДЕ
	|				ЭтоДокументСНесколькимиПервичнымиДокументами)
	|		И Счет В(&АнализируемыеСчета)
	|		// (одинаковые для отбора оборотов, остатков)
	|		// Отбор по контрагенту
	|		И ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Контрагенты) ТОГДА    
	#Удаление
	|				Субконто1 = &Контрагент       
	#КонецУдаления            
	#Вставка
	|				Субконто1 В (&Контрагент)                
	#КонецВставки
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Контрагенты) ТОГДА   
	#Удаление
	|				Субконто2 = &Контрагент 
	#КонецУдаления            
	#Вставка
	|				Субконто2 В (&Контрагент)                
	#КонецВставки
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Контрагенты) ТОГДА 
	#Удаление
	|				Субконто3 = &Контрагент 
	#КонецУдаления            
	#Вставка
	|				Субконто3 В (&Контрагент)                
	#КонецВставки
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ
	|		// Отбор по договору
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоДоговору ТОГДА
	|				ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто1 В(&Договоры)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто2 В(&Договоры)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто3 В(&Договоры)
	|					ИНАЧЕ
	|						ЛОЖЬ
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоОрганизации ТОГДА
	|				Организация = &Организация
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоПодразделению ТОГДА
	|				Подразделение = &Подразделение
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоИФО ТОГДА
	|				ИФО = &ИФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоКФО ТОГДА
	|				КФО = &КФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоВалюте ТОГДА
	|				Валюта = &Валюта
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		,
	|		Регистратор							// 4
	|	) КАК ДвиженияССубконто
	|ГДЕ
	|	// Исключаем обороты, которые не изменяют состояние расчетов (Контрагент + Договор)
	|	НЕ ВЫБОР
	|		КОГДА СчетДт В(&АнализируемыеСчета) И СчетКт В(&АнализируемыеСчета) ТОГДА
	|			// Обороты по одному и тому же контрагенту
	|			ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт1) = ТИП(Справочник.Контрагенты) ТОГДА
	|					ЕСТЬNULL(СубконтоДт1 = СубконтоКт1, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт1 = СубконтоКт2, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт1 = СубконтоКт3, ЛОЖЬ)
	|		  		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт2) = ТИП(Справочник.Контрагенты) ТОГДА
	|					ЕСТЬNULL(СубконтоДт2 = СубконтоКт1, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт2 = СубконтоКт2, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт2 = СубконтоКт3, ЛОЖЬ)
	|		  		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт3) = ТИП(Справочник.Контрагенты) ТОГДА
	|					ЕСТЬNULL(СубконтоДт3 = СубконтоКт1, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт3 = СубконтоКт2, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт3 = СубконтоКт3, ЛОЖЬ)
	|				ИНАЧЕ
	|					// Отсутствует субконто Контрагенты
	|					// Здесь обороты не исключаем (это уже сделано отбором в виртуальной таблице оборотов)
	|					ЛОЖЬ
	|			КОНЕЦ
	|			// Обороты по одному и тому же договору
	|			И ВЫБОР
	|		  		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт1) = ТИП(Справочник.Договоры) ТОГДА
	|					ЕСТЬNULL(СубконтоДт1 = СубконтоКт1, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт1 = СубконтоКт2, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт1 = СубконтоКт3, ЛОЖЬ)
	|		  		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт2) = ТИП(Справочник.Договоры) ТОГДА
	|					ЕСТЬNULL(СубконтоДт2 = СубконтоКт1, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт2 = СубконтоКт2, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт2 = СубконтоКт3, ЛОЖЬ)
	|		  		КОГДА ТИПЗНАЧЕНИЯ(СубконтоДт3) = ТИП(Справочник.Договоры) ТОГДА
	|					ЕСТЬNULL(СубконтоДт3 = СубконтоКт1, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт3 = СубконтоКт2, ЛОЖЬ) ИЛИ ЕСТЬNULL(СубконтоДт3 = СубконтоКт3, ЛОЖЬ)
	|				ИНАЧЕ
	|					// Отсутствует субконто Договоры
	|					// Здесь обороты не исключаем (это уже сделано отбором в виртуальной таблице оборотов)
	|					ЛОЖЬ
	|			КОНЕЦ
	|		ИНАЧЕ
	|			// Для других кор.счетов обороты не исключаем
	|			ЛОЖЬ
	|	КОНЕЦ
	|;		
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [3]. Обороты из отдельных проводок
	|//
	|ВЫБРАТЬ
	|	Организация						КАК Организация,
	|	Дата							КАК Дата,
	|	Документ						КАК Документ,
	|	ВидПервичногоДокумента			КАК ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента			КАК ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента		КАК НомерПервичногоДокумента,
	|	Сумма							КАК Сумма,
	|	КонтрагентДт					КАК КонтрагентДт,
	|	КонтрагентКт					КАК КонтрагентКт,
	|	ДоговорДт						КАК ДоговорДт,
	|	ДоговорКт						КАК ДоговорКт,
	|	ВалютнаяСуммаДт					КАК ВалютнаяСуммаДт,
	|	ВалютнаяСуммаКт					КАК ВалютнаяСуммаКт,
	|	ВЫБОР
	|		КОГДА СчетДтПринадлежитСписку И СчетКтПринадлежитСписку ТОГДА
	|			// Оба счета принадлежат списку
	|			ВЫБОР
	|				КОГДА &ИспользоватьОтборПоДоговору И (КонтрагентДт = КонтрагентКт) ТОГДА
	|					// Контрагенты совпадают
	|					// Выбираем сторону договора
	|				    (ДоговорДт В(&Договоры))
	|				ИНАЧЕ
	|					// Контрагенты различаются
	|					// Выбираем сторону контрагента  
	#Удаление
	|				    (КонтрагентДт = &Контрагент)   
	#КонецУдаления            
	#Вставка
	|				    (КонтрагентДт В (&Контрагент))   
	#КонецВставки
	|			КОНЕЦ
	|		ИНАЧЕ
	|			// Лишь один из счетов принадлежит списку
	|			// Выбираем сторону счета, принадлежащего списку
	|			СчетДтПринадлежитСписку
	|	КОНЕЦ							КАК ИспользоватьСторонуДт,
	|	ВЫБОР
	|		КОГДА СчетДтПринадлежитСписку И СчетКтПринадлежитСписку И (КонтрагентДт = КонтрагентКт) И НЕ &ИспользоватьОтборПоДоговору ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ							КАК ИспользоватьОбеСтороны,
	|	СчетДтЭтоСчетДЗ					КАК СчетДтЭтоСчетДЗ,
	|	СчетДтЭтоСчетКЗ					КАК СчетДтЭтоСчетКЗ,
	|	СчетКтЭтоСчетДЗ					КАК СчетКтЭтоСчетДЗ,
	|	СчетКтЭтоСчетКЗ					КАК СчетКтЭтоСчетКЗ
	|ПОМЕСТИТЬ
	|	ОтдельныеПроводки
	|ИЗ
	|	ПодготовкаОтдельныеПроводки
	|;	
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [4]. Все первичные документы для документов из найденных оборотов
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000000
	|	Регистратор					КАК Регистратор,
	|	ВидПервичногоДокумента		КАК ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента		КАК ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента	КАК НомерПервичногоДокумента,
	|	НомерСтроки					КАК НомерСтроки
	|ПОМЕСТИТЬ
	|	ВсеПервичныеДокументыРегистраторов
	|ИЗ
	|	// Для не платежных документов - выбираем первичный документ из бух.проводок:
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ДвиженияССубконто(
	|		&ДатаНачалаОбороты,		// 1
	|		&ДатаОкончанияОбороты,	// 2
	|		// 3. Условия
	|		Счет В(&АнализируемыеСчета)
	|		И Регистратор В
	|			(ВЫБРАТЬ
	|				Документ
	|			ИЗ
	|				ВсеОбороты
	|			ГДЕ
	|				НЕ ЭтоПлатежныйДокумент
	|				И НЕ ЭтоДокументСНесколькимиПервичнымиДокументами),
	|		Регистратор				// 4
	|		) КАК ДвиженияССубконто
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Для платежных документов - выбираем первичный документ из регистра СостояниеПлатежноРасчетныхДокументов:
	|ВЫБРАТЬ
	|	ВсеОбороты.Документ													КАК Регистратор,
	|	""""																	КАК ВидПервичногоДокумента,
	|	СостояниеПлатежноРасчетныхДокументов.ДатаПодтверждающегоДокумента	КАК ДатаПервичногоДокумента,
	|	СостояниеПлатежноРасчетныхДокументов.НомерПодтверждающегоДокумента	КАК НомерПервичногоДокумента,
	|	1																	КАК НомерСтроки
	|ИЗ
	|	ВсеОбороты
	|	ЛЕВОЕ СОЕДИНЕНИЕ	РегистрСведений.СостояниеПлатежноРасчетныхДокументов	КАК СостояниеПлатежноРасчетныхДокументов
	|		ПО	ВсеОбороты.Документ = СостояниеПлатежноРасчетныхДокументов.ПлатежноРасчетныйДокумент
	|		И	СостояниеПлатежноРасчетныхДокументов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИсполненияДокумента.Исполнен)
	|ГДЕ
	|	ВсеОбороты.ЭтоПлатежныйДокумент
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [5]. Один первичный документ для каждого регистратора
	|//
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Регистратор					КАК Регистратор,
	|	ВидПервичногоДокумента		КАК ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента		КАК ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента	КАК НомерПервичногоДокумента
	|ПОМЕСТИТЬ
	|	ПервичныйДокументРегистратора
	|ИЗ
	|	ВсеПервичныеДокументыРегистраторов КАК ВТ
	|ГДЕ
	|	НомерСтроки В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			НомерСтроки
	|		ИЗ
	|			ВсеПервичныеДокументыРегистраторов Как ВсеПервичныеДокументыРегистраторов
	|		ГДЕ
	|			ВсеПервичныеДокументыРегистраторов.Регистратор = ВТ.Регистратор 
	|		)
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [6]. Обороты и реквизиты первичных документов
	|//		(Финальная таблица)
	|//
	|ВЫБРАТЬ
	|	ВсеОбороты.Организация				КАК Организация,
	|	ВсеОбороты.Дата						КАК Дата,
	|	ВсеОбороты.Документ					КАК Документ,
	|	ТИПЗНАЧЕНИЯ(ВсеОбороты.Документ)	КАК ВидДокумента,
	|	ПДР.ВидПервичногоДокумента			КАК ВидПервичногоДокумента,
	|	ПДР.ДатаПервичногоДокумента			КАК ДатаПервичногоДокумента,
	|	ПДР.НомерПервичногоДокумента		КАК НомерПервичногоДокумента,
	#Вставка    
	|	ВсеОбороты.Контрагент				КАК Контрагент,
	#КонецВставки
	|	ВсеОбороты.Договор					КАК Договор,
	|	СУММА(ВсеОбороты.Дебет)				КАК Дебет,
	|	СУММА(ВсеОбороты.Кредит)			КАК Кредит
	|ИЗ
	|	ВсеОбороты
	|	ЛЕВОЕ СОЕДИНЕНИЕ	ПервичныйДокументРегистратора КАК ПДР
	|		ПО	ВсеОбороты.Документ = ПДР.Регистратор
	|ГДЕ
	|	НЕ ВсеОбороты.ЭтоДокументСНесколькимиПервичнымиДокументами
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеОбороты.Организация,
	|	ВсеОбороты.Дата,
	|	ВсеОбороты.Документ,
	|	ТИПЗНАЧЕНИЯ(ВсеОбороты.Документ),
	|	ПДР.ВидПервичногоДокумента,
	|	ПДР.ДатаПервичногоДокумента,
	|	ПДР.НомерПервичногоДокумента,
	#Вставка    
	|	ВсеОбороты.Контрагент,
	#КонецВставки
	|	ВсеОбороты.Договор
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ВсеОбороты.Дебет) = 0 ИЛИ НЕ СУММА(ВсеОбороты.Кредит) = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обороты, выбираемые из проводок лишь с одной стороны
	|ВЫБРАТЬ
	|	Организация							КАК Организация,
	|	Дата								КАК Дата,
	|	Документ							КАК Документ,
	|	ТИПЗНАЧЕНИЯ(Документ)				КАК ВидДокумента,
	|	ВидПервичногоДокумента				КАК ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента				КАК ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента			КАК НомерПервичногоДокумента,  
	#Вставка    
	|	ВЫБОР
	|		КОГДА ИспользоватьСторонуДт ТОГДА
	|			КонтрагентДт
	|		ИНАЧЕ
	|			КонтрагентКт
	|	КОНЕЦ								КАК Контрагент,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА ИспользоватьСторонуДт ТОГДА
	|			ДоговорДт
	|		ИНАЧЕ
	|			ДоговорКт
	|	КОНЕЦ								КАК Договор,
	|	СУММА(ВЫБОР
	|		КОГДА СчетДтЭтоСчетДЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаДт
	|		КОГДА СчетДтЭтоСчетДЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			Сумма
	|		КОГДА СчетКтЭтоСчетДЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			-ВалютнаяСуммаДт
	|		КОГДА СчетКтЭтоСчетДЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			-Сумма
	|		КОГДА СчетДтЭтоСчетКЗ ИЛИ СчетКтЭтоСчетКЗ ТОГДА
	|			0
	|		КОГДА ИспользоватьСторонуДт И &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаДт
	|		КОГДА ИспользоватьСторонуДт И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			Сумма
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ)								КАК Дебет,
	|	СУММА(ВЫБОР
	|		КОГДА СчетДтЭтоСчетКЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			-ВалютнаяСуммаКт
	|		КОГДА СчетДтЭтоСчетКЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			-Сумма
	|		КОГДА СчетКтЭтоСчетКЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаКт
	|		КОГДА СчетКтЭтоСчетКЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			Сумма
	|		КОГДА СчетДтЭтоСчетДЗ ИЛИ СчетКтЭтоСчетДЗ ТОГДА
	|			0
	|		КОГДА НЕ ИспользоватьСторонуДт И &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаКт
	|		КОГДА НЕ ИспользоватьСторонуДт И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			Сумма
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ)								КАК Кредит
	|ИЗ
	|	ОтдельныеПроводки
	|ГДЕ
	|	НЕ ИспользоватьОбеСтороны
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Дата,
	|	Документ,
	|	ТИПЗНАЧЕНИЯ(Документ),
	|	ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента,   
	#Вставка    
	|	ВЫБОР
	|		КОГДА ИспользоватьСторонуДт ТОГДА
	|			КонтрагентДт
	|		ИНАЧЕ
	|			КонтрагентКт
	|	КОНЕЦ,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА ИспользоватьСторонуДт ТОГДА
	|			ДоговорДт
	|		ИНАЧЕ
	|			ДоговорКт
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обороты по дебету, выбираемые из проводок с обеих сторон
	|ВЫБРАТЬ
	|	Организация							КАК Организация,
	|	Дата								КАК Дата,
	|	Документ							КАК Документ,
	|	ТИПЗНАЧЕНИЯ(Документ)				КАК ВидДокумента,
	|	ВидПервичногоДокумента				КАК ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента				КАК ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента			КАК НомерПервичногоДокумента, 
	#Вставка    
	|	КонтрагентДт 						КАК Контрагент,
	#КонецВставки
	|	ДоговорДт							КАК Договор,
	|	СУММА(ВЫБОР
	|		КОГДА СчетДтЭтоСчетДЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаДт
	|		КОГДА СчетДтЭтоСчетДЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			Сумма
	|		КОГДА СчетКтЭтоСчетДЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			-ВалютнаяСуммаДт
	|		КОГДА СчетКтЭтоСчетДЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			-Сумма
	|		КОГДА СчетДтЭтоСчетКЗ ИЛИ СчетКтЭтоСчетКЗ ТОГДА
	|			0
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаДт
	|		ИНАЧЕ
	|			Сумма
	|	КОНЕЦ)								КАК Дебет,
	|	СУММА(0)							КАК Кредит
	|ИЗ
	|	ОтдельныеПроводки
	|ГДЕ
	|	ИспользоватьОбеСтороны
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Дата,
	|	Документ,
	|	ТИПЗНАЧЕНИЯ(Документ),
	|	ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента,
	#Вставка    
	|	КонтрагентДт,
	#КонецВставки
	|	ДоговорДт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обороты по кредиту, выбираемые из проводок с обеих сторон
	|ВЫБРАТЬ
	|	Организация							КАК Организация,
	|	Дата								КАК Дата,
	|	Документ							КАК Документ,
	|	ТИПЗНАЧЕНИЯ(Документ)				КАК ВидДокумента,
	|	ВидПервичногоДокумента				КАК ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента				КАК ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента			КАК НомерПервичногоДокумента,
	#Вставка    
	|	КонтрагентКт 						КАК Контрагент,
	#КонецВставки
	|	ДоговорКт							КАК Договор,
	|	СУММА(0)							КАК Дебет,
	|	СУММА(ВЫБОР
	|		КОГДА СчетДтЭтоСчетКЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			-ВалютнаяСуммаКт
	|		КОГДА СчетДтЭтоСчетКЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			-Сумма
	|		КОГДА СчетКтЭтоСчетКЗ И &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаКт
	|		КОГДА СчетКтЭтоСчетКЗ И НЕ &ВыбиратьВалютныеСуммы ТОГДА
	|			Сумма
	|		КОГДА СчетДтЭтоСчетДЗ ИЛИ СчетКтЭтоСчетДЗ ТОГДА
	|			0
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаКт
	|		ИНАЧЕ
	|			Сумма
	|	КОНЕЦ)								КАК Кредит
	|ИЗ
	|	ОтдельныеПроводки
	|ГДЕ
	|	ИспользоватьОбеСтороны
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Дата,
	|	Документ,
	|	ТИПЗНАЧЕНИЯ(Документ),
	|	ВидПервичногоДокумента,
	|	ДатаПервичногоДокумента,
	|	НомерПервичногоДокумента,
	#Вставка    
	|	КонтрагентКт,
	#КонецВставки
	|	ДоговорКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [7]. Остатки на начало периода
	|//		(Финальная таблица)
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация											КАК Организация,  
	#Вставка
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Контрагенты) ТОГДА
	|			ВЫРАЗИТЬ(Субконто1 КАК Справочник.Контрагенты)
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Контрагенты) ТОГДА
	|			ВЫРАЗИТЬ(Субконто2 КАК Справочник.Контрагенты)
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Контрагенты) ТОГДА
	|			ВЫРАЗИТЬ(Субконто3 КАК Справочник.Контрагенты)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ												КАК Контрагент,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА &ДетализироватьОстаткиПоДоговорам ТОГДА
	|			ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|					ВЫРАЗИТЬ(Субконто1 КАК Справочник.Договоры)
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|					ВЫРАЗИТЬ(Субконто2 КАК Справочник.Договоры)
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|					ВЫРАЗИТЬ(Субконто3 КАК Справочник.Договоры)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|	КОНЕЦ												КАК Договор,
	|	СУММА(ВЫБОР
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаОстаток
	|		ИНАЧЕ
	|			СуммаОстаток
	|	КОНЕЦ)												КАК ОстатокНаНачало
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Остатки(
	|		&ДатаНачалаОстатки,				// 1
	|		Счет В(&АнализируемыеСчета),	// 2.Счет
	|		,								// 3.Субконто
	|		// 4.Условие
	|		// (одинаковые для отбора оборотов, остатков)
	|		// Отбор по контрагенту
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Контрагенты) ТОГДА  
	#Удаление
	|				Субконто1 = &Контрагент       
	#КонецУдаления            
	#Вставка
	|				Субконто1 В (&Контрагент)       
	#КонецВставки
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Контрагенты) ТОГДА    
	#Удаление
	|				Субконто2 = &Контрагент 
	#КонецУдаления            
	#Вставка
	|				Субконто2 В (&Контрагент)       
	#КонецВставки
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Контрагенты) ТОГДА   
	#Удаление
	|				Субконто3 = &Контрагент   
	#КонецУдаления            
	#Вставка
	|				Субконто3 В (&Контрагент)       
	#КонецВставки
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ
	|		// Отбор по договору
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоДоговору ТОГДА
	|				ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто1 В(&Договоры)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто2 В(&Договоры)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|						Субконто3 В(&Договоры)
	|					ИНАЧЕ
	|						ЛОЖЬ
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоОрганизации ТОГДА
	|				Организация = &Организация
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоПодразделению ТОГДА
	|				Подразделение = &Подразделение
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоИФО ТОГДА
	|				ИФО = &ИФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоКФО ТОГДА
	|				КФО = &КФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоВалюте ТОГДА
	|				Валюта = &Валюта
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|	)	КАК Остатки
	|ГДЕ
	|	// Фильтр остатков по длительным договорам
	|	// По длительным договорам исключаем остатки, вне зависимости от настроек
	|	// По всем иным (прочим, не длительным) договорам ничего не исключаем
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|			НЕ ВЫРАЗИТЬ(Субконто1 КАК Справочник.Договоры) В (&ВсеДлительныеДоговоры)
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|			НЕ ВЫРАЗИТЬ(Субконто2 КАК Справочник.Договоры) В (&ВсеДлительныеДоговоры)
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|			НЕ ВЫРАЗИТЬ(Субконто3 КАК Справочник.Договоры) В (&ВсеДлительныеДоговоры)
	|		ИНАЧЕ
	|			// Отсутствует субконто Договоры
	|			// Данный фильтр не должен отсекать такой остаток
	|			ИСТИНА
	|	КОНЕЦ
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	#Вставка
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Контрагенты) ТОГДА
	|			ВЫРАЗИТЬ(Субконто1 КАК Справочник.Контрагенты)
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Контрагенты) ТОГДА
	|			ВЫРАЗИТЬ(Субконто2 КАК Справочник.Контрагенты)
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Контрагенты) ТОГДА
	|			ВЫРАЗИТЬ(Субконто3 КАК Справочник.Контрагенты)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА &ДетализироватьОстаткиПоДоговорам ТОГДА
	|			ВЫБОР
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(Справочник.Договоры) ТОГДА
	|					ВЫРАЗИТЬ(Субконто1 КАК Справочник.Договоры)
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто2) = ТИП(Справочник.Договоры) ТОГДА
	|					ВЫРАЗИТЬ(Субконто2 КАК Справочник.Договоры)
	|				КОГДА ТИПЗНАЧЕНИЯ(Субконто3) = ТИП(Справочник.Договоры) ТОГДА
	|					ВЫРАЗИТЬ(Субконто3 КАК Справочник.Договоры)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|	КОНЕЦ
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ВЫБОР
	|		КОГДА &ВыбиратьВалютныеСуммы ТОГДА
	|			ВалютнаяСуммаОстаток
	|		ИНАЧЕ
	|			СуммаОстаток
	|	КОНЕЦ) = 0
	|
	|;";

	РезультатыПоиска = ЗапросПоиск.ВыполнитьПакет();

	// [6]. Обороты и реквизиты первичных документов
	Обороты = РезультатыПоиска[6].Выгрузить();

	// [7]. Остатки на начало периода
	ОстаткиНаНачало = РезультатыПоиска[7].Выгрузить();

	РезультатыСверки = Новый Структура();
	РезультатыСверки.Вставить("Обороты",			Обороты);
	РезультатыСверки.Вставить("ОстаткиНаНачало",	ОстаткиНаНачало);

	Возврат РезультатыСверки;

КонецФункции

&ИзменениеИКонтроль("ВыполнитьСверкуПоДолгосрочнымДоговорам")
Функция АБК_ВыполнитьСверкуПоДолгосрочнымДоговорам(Параметры)

	ЗапросПоиск = Новый Запрос();
	ЗапросПоиск.УстановитьПараметр("ДатаПерехода64н",					Параметры.ДатаПерехода64н);

	ЗапросПоиск.УстановитьПараметр("ДатаНачалаОбороты",					Параметры.ДатаНачалаОбороты);
	ЗапросПоиск.УстановитьПараметр("ДатаОкончанияОбороты",				Параметры.ДатаОкончанияОбороты);
	ЗапросПоиск.УстановитьПараметр("ДатаНачалаОстатки",					Параметры.ДатаНачалаОстатки);
	ЗапросПоиск.УстановитьПараметр("Организация",						Параметры.Организация);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоОрганизации",	Параметры.ИспользоватьОтборПоОрганизации);
	ЗапросПоиск.УстановитьПараметр("Подразделение",						Параметры.Подразделение);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоПодразделению",	Параметры.ИспользоватьОтборПоПодразделению);
	ЗапросПоиск.УстановитьПараметр("ИФО",								Параметры.ИФО);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоИФО",			Параметры.ИспользоватьОтборПоИФО);
	ЗапросПоиск.УстановитьПараметр("КФО",								Параметры.КФО);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоКФО",			Параметры.ИспользоватьОтборПоКФО);
	ЗапросПоиск.УстановитьПараметр("ИсключаемыеТипыРегистратора",		Параметры.ИсключаемыеТипыРегистратора);
	ЗапросПоиск.УстановитьПараметр("ДетализироватьОстаткиПоДоговорам",	Параметры.ДетализироватьОстаткиПоДоговорам);
	ЗапросПоиск.УстановитьПараметр("ВидСубконтоДоговоры",				Параметры.ВидСубконтоДоговоры);

	ЗапросПоиск.УстановитьПараметр("ВсеДлительныеДоговоры",						Параметры.ДоговорыСКонтрагентом.ДлительныеДоговоры.Все);
	ЗапросПоиск.УстановитьПараметр("ДлительныеДоговорыУчреждениеПродавец",		Параметры.ДоговорыСКонтрагентом.ДлительныеДоговоры.УчреждениеЯвляетсяПродавцом.Все);
	ЗапросПоиск.УстановитьПараметр("ДлительныеДоговорыУчреждениеПокупатель",	Параметры.ДоговорыСКонтрагентом.ДлительныеДоговоры.УчреждениеЯвляетсяПокупателем.Все);

	ЗапросПоиск.УстановитьПараметр("Счета10440",						Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета10440);
	ЗапросПоиск.УстановитьПараметр("Счета11140",						Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета11140);
	ЗапросПоиск.УстановитьПараметр("Счета20500",						Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета20500);
	ЗапросПоиск.УстановитьПараметр("Счета21005",						Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета21005);
	ЗапросПоиск.УстановитьПараметр("Счета30220",						Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета30220);
	ЗапросПоиск.УстановитьПараметр("Счета40140",						Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета40140);
	ЗапросПоиск.УстановитьПараметр("Счета40150",						Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.Счета40150);
	ЗапросПоиск.УстановитьПараметр("АнализируемыеСчетаОбороты",			Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.АнализируемыеСчетаОбороты);
	ЗапросПоиск.УстановитьПараметр("АнализируемыеСчетаОстатки",			Параметры.НастройкиДляСверкиПоДлительнымДоговорам.Счета.АнализируемыеСчетаОстатки);
	ЗапросПоиск.УстановитьПараметр("УчитыватьНачисленияДлительныеДоговорыПродавец",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.УчитыватьНачисленияДлительныеДоговорыПродавец);
	ЗапросПоиск.УстановитьПараметр("УчитыватьНачисленияДлительныеДоговорыПокупатель",	Параметры.НастройкиДляСверкиПоДлительнымДоговорам.УчитыватьНачисленияДлительныеДоговорыПокупатель);

	ЗапросПоиск.Текст = "
	|///////////////////////////////////////////////////////////////////////////////
	|// [0]. Все обороты услуг по длительным договорам (подготовка)
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация											КАК Организация,
	|	Период												КАК Дата,
	|	Регистратор											КАК Документ,
	|	Субконто1											КАК Договор,
	|	ВЫБОР
	|		КОГДА &УчитыватьНачисленияДлительныеДоговорыПродавец И Субконто1 В(&ДлительныеДоговорыУчреждениеПродавец) И Счет В(&Счета40140) ТОГДА
	|			СуммаОборотДт
	|		КОГДА &УчитыватьНачисленияДлительныеДоговорыПродавец И Субконто1 В(&ДлительныеДоговорыУчреждениеПродавец) И Счет В(&Счета40150) ТОГДА
	|			-СуммаОборотКт
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ												КАК Дебет,
	|	ВЫБОР
	|		КОГДА &УчитыватьНачисленияДлительныеДоговорыПокупатель И Субконто1 В(&ДлительныеДоговорыУчреждениеПокупатель) И Счет В(&Счета10440) ТОГДА
	|			СуммаОборотКт
	|		КОГДА &УчитыватьНачисленияДлительныеДоговорыПокупатель И Субконто1 В(&ДлительныеДоговорыУчреждениеПокупатель) И Счет В(&Счета40140) ТОГДА
	|			-СуммаОборотДт
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ												КАК Кредит
	|ПОМЕСТИТЬ
	|	ВсеОборотыПоДлительнымДоговорам
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Обороты(
	|		&ДатаНачалаОбороты,						// 1
	|		&ДатаОкончанияОбороты,					// 2
	|		Регистратор,							// 3
	|		Счет В(&АнализируемыеСчетаОбороты),		// 4.Счет
	|		&ВидСубконтоДоговоры,					// 5.Субконто
	|		// 6.Условия
	|		// (одинаковые для отбора оборотов, остатков
	|		//  КРОМЕ отбора по
	|		//    валюте		- здесь нет такого отбора
	|		//    контрагенту	- здесь заменен отбором по договору
	|		//    по договору	- здесь всегда отбор)
	|		//
	|		// Отбор по договору
	|		Субконто1 В(&ВсеДлительныеДоговоры)
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоОрганизации ТОГДА
	|				Организация = &Организация
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоПодразделению ТОГДА
	|				Подразделение = &Подразделение
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоИФО ТОГДА
	|				ИФО = &ИФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоКФО ТОГДА
	|				КФО = &КФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|	) КАК Обороты
	|ГДЕ
	|	НЕ ТИПЗНАЧЕНИЯ(Регистратор) В(&ИсключаемыеТипыРегистратора)
	|	// Исключаем операцию переноса кредиторской задолженности по арендной плате при переходе на СГС Аренда
	|	И НЕ (Счет В(&Счета10440) И КорСчет В(&Счета30220))
	|	// Исключаем документы, формирующие входящие остатки по договорам аренды
	|	И НЕ (ТИПЗНАЧЕНИЯ(Регистратор) = ТИП(Документ.НачислениеДоходовБудущихПериодов) И Период < &ДатаПерехода64н)
	|	И НЕ (ТИПЗНАЧЕНИЯ(Регистратор) = ТИП(Документ.СписаниеДоходовБудущихПериодов) И Период < &ДатаПерехода64н)
	|	// Корректировка или досрочное прекращение договора (обратные проводки к проводкам классификации объекта аренды)
	|	И НЕ (Счет В(&Счета40140) И КорСчет В(&Счета20500))
	|	И НЕ (Счет В(&Счета40140) И КорСчет В(&Счета21005))
	|	И НЕ (Счет В(&Счета40140) И КорСчет В(&Счета11140))
	|	// Корректировка или досрочное прекращение договора (сторно)
	|	И НЕ (Счет В(&Счета40150) И КорСчет В(&Счета21005))
	|	// Перенос в состав доходов будущих периодов, признаваемых в текущем году
	|	И НЕ (Счет В(&Счета40140) И КорСчет В(&Счета40140))
	|	// Внутреннее перемещение
	|	И НЕ (Счет В(&Счета10440) И КорСчет В(&Счета10440))
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [1]. Все обороты услуг по длительным договорам
	|//		(Финальная таблица)
	|//
	|ВЫБРАТЬ
	|	Организация											КАК Организация,
	|	Дата												КАК Дата,
	|	Документ											КАК Документ,
	|	Договор												КАК Договор,
	#Вставка
	|	Договор.Контрагент									КАК Контрагент,
	#КонецВставки
	|	(Договор В(&ДлительныеДоговорыУчреждениеПродавец))		КАК ЭтоНачислениеПродавца,
	|	(Договор В(&ДлительныеДоговорыУчреждениеПокупатель))	КАК ЭтоНачислениеПокупателя,
	|	СУММА(Дебет)										КАК Дебет,
	|	СУММА(Кредит)										КАК Кредит
	|ИЗ
	|	ВсеОборотыПоДлительнымДоговорам
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Дата,
	|	Документ,
	|	Договор,
	|	(Договор В(&ДлительныеДоговорыУчреждениеПродавец)),
	|	(Договор В(&ДлительныеДоговорыУчреждениеПокупатель))
	|ИМЕЮЩИЕ
	|	СУММА(Дебет) <> 0
	|	ИЛИ СУММА(Кредит) <> 0
	|;		
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [2]. Остатки на начало периода по длительным договорам (подготовка)
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация											КАК Организация,
	|	ВЫБОР
	|		КОГДА &ДетализироватьОстаткиПоДоговорам ТОГДА
	|			Субконто1
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Договоры.ПустаяСсылка)
	|	КОНЕЦ												КАК Договор,
	|	ВЫБОР
	|		// Исключаем остатки по всем счетам аренды, если сверка по аренде отключена
	|		КОГДА НЕ &УчитыватьНачисленияДлительныеДоговорыПродавец И Субконто1 В(&ДлительныеДоговорыУчреждениеПродавец) И Счет В(&Счета40140) ТОГДА
	|			0
	|		КОГДА НЕ &УчитыватьНачисленияДлительныеДоговорыПродавец И Субконто1 В(&ДлительныеДоговорыУчреждениеПродавец) И Счет В(&Счета40150) ТОГДА
	|			0
	|		КОГДА НЕ &УчитыватьНачисленияДлительныеДоговорыПокупатель И Субконто1 В(&ДлительныеДоговорыУчреждениеПокупатель) И Счет В(&Счета30220) ТОГДА
	|			0
	|		КОГДА НЕ &УчитыватьНачисленияДлительныеДоговорыПокупатель И Субконто1 В(&ДлительныеДоговорыУчреждениеПокупатель) И Счет В(&Счета11140) ТОГДА
	|			0
	|		КОГДА НЕ &УчитыватьНачисленияДлительныеДоговорыПокупатель И Субконто1 В(&ДлительныеДоговорыУчреждениеПокупатель) И Счет В(&Счета10440) ТОГДА
	|			0
	|		КОГДА НЕ &УчитыватьНачисленияДлительныеДоговорыПокупатель И Субконто1 В(&ДлительныеДоговорыУчреждениеПокупатель) И Счет В(&Счета40140) ТОГДА
	|			0
	|			
	|		ИНАЧЕ
	|			СуммаОстаток
	|	КОНЕЦ												КАК ОстатокНаНачало
	|ПОМЕСТИТЬ
	|	ВсеОстаткиПоДлительнымДоговорам
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Остатки(
	|		&ДатаНачалаОстатки,					// 1
	|		Счет В(&АнализируемыеСчетаОстатки),	// 2.Счет
	|		&ВидСубконтоДоговоры,				// 3.Субконто
	|		// 4.Условие
	|		// (одинаковые для отбора оборотов, остатков
	|		//  КРОМЕ отбора по
	|		//    валюте		- здесь нет такого отбора
	|		//    контрагенту	- здесь заменен отбором по договору
	|		//    по договору	- здесь всегда отбор)
	|		//
	|		// Отбор по договору
	|		Субконто1 В(&ВсеДлительныеДоговоры)
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоОрганизации ТОГДА
	|				Организация = &Организация
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоПодразделению ТОГДА
	|				Подразделение = &Подразделение
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоИФО ТОГДА
	|				ИФО = &ИФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоКФО ТОГДА
	|				КФО = &КФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|	)	КАК Остатки
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|// [3]. Остатки на начало периода по длительным договорам
	|//		(Финальная таблица)
	|//
	|ВЫБРАТЬ
	|	Организация				КАК Организация,
	|	Договор					КАК Договор,
	#Вставка
	|	Договор.Контрагент		КАК Контрагент,
	#КонецВставки
	|	СУММА(ОстатокНаНачало)	КАК ОстатокНаНачало
	|ИЗ
	|	ВсеОстаткиПоДлительнымДоговорам
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Договор
	|ИМЕЮЩИЕ
	|	СУММА(ОстатокНаНачало) <> 0
	|;";

	РезультатыЗапроса = ЗапросПоиск.ВыполнитьПакет();

	// [1]. Все обороты услуг аренды
	Обороты = РезультатыЗапроса[1].Выгрузить();

	// [3]. Остатки на начало периода по договорам аренды
	ОстаткиНаНачало = РезультатыЗапроса[3].Выгрузить();

	РезультатыСверки = Новый Структура();
	РезультатыСверки.Вставить("Обороты",			Обороты);
	РезультатыСверки.Вставить("ОстаткиНаНачало",	ОстаткиНаНачало);

	Возврат РезультатыСверки;

КонецФункции

&ИзменениеИКонтроль("ИспользуетсяТаблицаОстатков")
Функция АБК_ИспользуетсяТаблицаОстатков(ДокументОбъект)
    #Удаление
	Возврат (НЕ ДокументОбъект["ПоВсемОрганизациям"] И ДокументОбъект["ДетализироватьПоДоговорам"])
	ИЛИ (ДокументОбъект["ПоВсемОрганизациям"] И НЕ ДокументОбъект["ДетализироватьПоДоговорам"]); 
	#КонецУдаления
	
	#Вставка
	Возврат (НЕ ДокументОбъект["ПоВсемОрганизациям"] 
	И (ДокументОбъект["ДетализироватьПоДоговорам"] ИЛИ ДокументОбъект["ПоНесколькимКонтрагентам"]))
	ИЛИ (ДокументОбъект["ПоВсемОрганизациям"] 
	И НЕ (ДокументОбъект["ДетализироватьПоДоговорам"] ИЛИ ДокументОбъект["ПоНесколькимКонтрагентам"])); 
	#КонецВставки

КонецФункции

&ИзменениеИКонтроль("ИспользуетсяДеревоОстатков")
Функция АБК_ИспользуетсяДеревоОстатков(ДокументОбъект)
	
    #Удаление
	Возврат ДокументОбъект["ПоВсемОрганизациям"] И ДокументОбъект["ДетализироватьПоДоговорам"];
    #КонецУдаления
	
	#Вставка
	Возврат ДокументОбъект["ПоВсемОрганизациям"] 
	И (ДокументОбъект["ДетализироватьПоДоговорам"] ИЛИ ДокументОбъект["ПоНесколькимКонтрагентам"]);
	#КонецВставки
	
КонецФункции

&ИзменениеИКонтроль("РассчитатьРасхождения")
Процедура АБК_РассчитатьРасхождения(ДокументОбъект)

	Если НЕ ИспользуетсяТаблицаОстатков(ДокументОбъект)
		И НЕ ИспользуетсяДеревоОстатков(ДокументОбъект) Тогда
		Возврат;
	КонецЕсли;

	Поиск		= Новый Структура();
	ПоискСтрока	= "";

	Если ИспользуетсяКолонкаОрганизация(ДокументОбъект) Тогда
		Поиск.Вставить("Организация");
		ПоискСтрока = ПоискСтрока + ?(ПустаяСтрока(ПоискСтрока), "", ",") + "Организация";
	КонецЕсли;

	Если ИспользуетсяКолонкаДоговор(ДокументОбъект) Тогда
		Поиск.Вставить("Договор");
		ПоискСтрока = ПоискСтрока + ?(ПустаяСтрока(ПоискСтрока), "", ",") + "Договор";
	КонецЕсли;
	
	#Вставка
	Поиск.Вставить("Контрагент");
	ПоискСтрока = ПоискСтрока + ?(ПустаяСтрока(ПоискСтрока), "", ",") + "Контрагент";
	#КонецВставки

	ДобавитьСтрокиСНулевымиНачальнымиОстатками(ДокументОбъект);

	ТаблицаСписокОрганизаций = ДокументОбъект["СписокОрганизаций"].Выгрузить();  
	#Удаление
	ТаблицаСписокОрганизаций.Свернуть("Организация,Договор", "ОстатокНаНачало,ОстатокНаКонец,Расхождение"); // сворачиваем по обеим колонкам, независимо от того, какие используются
	#КонецУдаления
	#Вставка
	ТаблицаСписокОрганизаций.Свернуть("Организация,Контрагент,Договор", "ОстатокНаНачало,ОстатокНаКонец,Расхождение"); // сворачиваем по обеим колонкам, независимо от того, какие используются
	#КонецВставки
	
	ТаблицаПоДаннымОрганизации = ДокументОбъект["ПоДаннымОрганизации"].Выгрузить(, ПоискСтрока + ",Дебет,Кредит");
	ТаблицаПоДаннымОрганизации.Индексы.Добавить(ПоискСтрока);

	ТаблицаПоДаннымКонтрагента = ДокументОбъект["ПоДаннымКонтрагента"].Выгрузить(, ПоискСтрока + ",Дебет,Кредит");
	ТаблицаПоДаннымКонтрагента.Индексы.Добавить(ПоискСтрока);

	Для Каждого СтрокаОстатков Из ТаблицаСписокОрганизаций Цикл
		ЗаполнитьЗначенияСвойств(Поиск, СтрокаОстатков);

		// По данным организации
		ИтогДебетПоДаннымОрганизации	= 0;
		ИтогКредитПоДаннымОрганизации	= 0;
		МассивСтрок = ТаблицаПоДаннымОрганизации.НайтиСтроки(Поиск);
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			ИтогДебетПоДаннымОрганизации	= ИтогДебетПоДаннымОрганизации	+ СтрокаТаблицы["Дебет"];
			ИтогКредитПоДаннымОрганизации	= ИтогКредитПоДаннымОрганизации	+ СтрокаТаблицы["Кредит"];
		КонецЦикла;

		// По данным контрагента
		ИтогДебетПоДаннымКонтрагента	= 0;
		ИтогКредитПоДаннымКонтрагента	= 0;
		МассивСтрок = ТаблицаПоДаннымКонтрагента.НайтиСтроки(Поиск);
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			ИтогДебетПоДаннымКонтрагента	= ИтогДебетПоДаннымКонтрагента	+ СтрокаТаблицы["Дебет"];
			ИтогКредитПоДаннымКонтрагента	= ИтогКредитПоДаннымКонтрагента	+ СтрокаТаблицы["Кредит"];
		КонецЦикла;

		СтрокаОстатков["ОстатокНаКонец"]	= СтрокаОстатков["ОстатокНаНачало"] + ИтогДебетПоДаннымОрганизации - ИтогКредитПоДаннымОрганизации;
		СтрокаОстатков["Расхождение"]		= (ИтогДебетПоДаннымОрганизации - ИтогКредитПоДаннымОрганизации)
		+ (ИтогДебетПоДаннымКонтрагента - ИтогКредитПоДаннымКонтрагента);
	КонецЦикла;

	ДокументОбъект["СписокОрганизаций"].Загрузить(ТаблицаСписокОрганизаций);

	ДокументОбъект["ТребуетсяРасчетСумм"] = Ложь;

КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьДеревоОстатковПоДоговорамИзТаблицы")
Процедура АБК_ЗаполнитьДеревоОстатковПоДоговорамИзТаблицы(ДеревоОстатков, ТаблицаОстатков, КоличествоСтрокОстатков)

	СворачиватьПоДоговорам = Истина; // Должно быть Истина, иначе получаются некорректные суммы в строках организаций (кратное увеличение по количеству дублей договоров)

	// Сначала принудительно сортируем по организации
	ТаблицаОстатков.Сортировать("Организация");

	ДеревоОстатков.Строки.Очистить();

	КоличествоСтрокОстатков	= 0;
	СчетчикОрганизаций		= 0;
	ПрежняяОрганизация		= Неопределено;

	Для Каждого СтрокаТаблицы Из ТаблицаОстатков Цикл
		ТекущаяОрганизация	= СтрокаТаблицы["Организация"];
		ТекущийДоговор		= СтрокаТаблицы["Договор"];
		#Вставка
		ТекущийКонтрагент	= СтрокаТаблицы["Контрагент"];
		#КонецВставки

		// Добавляем строку для текущей организации
		Если НЕ ПрежняяОрганизация = ТекущаяОрганизация Тогда
			СчетчикОрганизаций	= СчетчикОрганизаций + 1;
			ПрежняяОрганизация	= ТекущаяОрганизация;

			СтрокаОрганизации = ДеревоОстатков.Строки.Добавить();
			СтрокаОрганизации["Организация"]	= ТекущаяОрганизация;
			СтрокаОрганизации["ЭтоГруппа"]		= Истина;
		КонецЕсли;

		// Нужно ли добавлять новую строку для текущего договора
		Если СворачиватьПоДоговорам Тогда
			Поиск = Новый Структура("Договор", ТекущийДоговор);
			#Вставка
			Поиск = Новый Структура("Договор, Контрагент", ТекущийДоговор, ТекущийКонтрагент);
			#КонецВставки
			МассивСтрок = СтрокаОрганизации.Строки.НайтиСтроки(Поиск);
			Если МассивСтрок.Количество() > 0 Тогда
				ДобавитьСтрокуДоговора = Ложь;
				СтрокаДоговора = МассивСтрок[0];
			Иначе
				ДобавитьСтрокуДоговора = Истина;
			КонецЕсли;
		Иначе
			ДобавитьСтрокуДоговора = Истина;
		КонецЕсли;

		// Добавляем строку для текущего договора
		Если ДобавитьСтрокуДоговора Тогда
			КоличествоСтрокОстатков	= КоличествоСтрокОстатков + 1;

			СтрокаДоговора = СтрокаОрганизации.Строки.Добавить();
			СтрокаДоговора["Организация"]	= ТекущаяОрганизация;
			СтрокаДоговора["Договор"]		= ТекущийДоговор; 
			#Вставка
			СтрокаДоговора["Контрагент"]	= ТекущийКонтрагент; 
			#КонецВставки
		КонецЕсли;

		СтрокаДоговора["ОстатокНаНачало"]	= СтрокаДоговора["ОстатокНаНачало"]	+ СтрокаТаблицы["ОстатокНаНачало"];
		СтрокаДоговора["ОстатокНаКонец"]	= СтрокаДоговора["ОстатокНаКонец"]	+ СтрокаТаблицы["ОстатокНаКонец"];
		СтрокаДоговора["Расхождение"]		= СтрокаДоговора["Расхождение"]		+ СтрокаТаблицы["Расхождение"];

		СтрокаОрганизации["ОстатокНаНачало"]	= СтрокаОрганизации["ОстатокНаНачало"]	+ СтрокаТаблицы["ОстатокНаНачало"];
		СтрокаОрганизации["ОстатокНаКонец"]		= СтрокаОрганизации["ОстатокНаКонец"]	+ СтрокаТаблицы["ОстатокНаКонец"];
		СтрокаОрганизации["Расхождение"]		= СтрокаОрганизации["Расхождение"]		+ СтрокаТаблицы["Расхождение"];
	КонецЦикла;

КонецПроцедуры

&ИзменениеИКонтроль("ЗаполнитьТаблицуОстатковПоДоговорамИзДерева")
Процедура АБК_ЗаполнитьТаблицуОстатковПоДоговорамИзДерева(ТаблицаОстатков, ДеревоОстатков)

	СворачиватьПоДоговорам = Истина; // Должно быть Истина, иначе получаются некорректные суммы в строках организаций (кратное увеличение по количеству дублей договоров)

	ТаблицаОстатков.Очистить();

	Поиск = Новый Структура("Организация, Договор");
	
	#Вставка
	Поиск = Новый Структура("Организация, Договор, Контрагент");
	#КонецВставки

	Для Каждого СтрокаОрганизации Из ДеревоОстатков.ПолучитьЭлементы() Цикл
		СтрокиДоговоров = СтрокаОрганизации.ПолучитьЭлементы();

		Если СтрокиДоговоров.Количество() = 0 Тогда
			ЗаполнитьЗначенияСвойств(Поиск, СтрокаОрганизации);

			МассивСтрок = ТаблицаОстатков.НайтиСтроки(Поиск);
			Если МассивСтрок.Количество() > 0 Тогда
				СтрокаТаблицы = МассивСтрок[0];
				СтрокаТаблицы["ОстатокНаНачало"]	= СтрокаТаблицы["ОстатокНаНачало"]	+ СтрокаОрганизации["ОстатокНаНачало"];
				СтрокаТаблицы["ОстатокНаКонец"]		= СтрокаТаблицы["ОстатокНаКонец"]	+ СтрокаОрганизации["ОстатокНаКонец"];
				СтрокаТаблицы["Расхождение"]		= СтрокаТаблицы["Расхождение"]		+ СтрокаОрганизации["Расхождение"];
			Иначе
				СтрокаТаблицы = ТаблицаОстатков.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаОрганизации);
			КонецЕсли;
		КонецЕсли;

		Для Каждого СтрокаДоговора Из СтрокиДоговоров Цикл
			// Нужно ли добавлять новую строку для договора
			Если СворачиватьПоДоговорам Тогда
				Поиск["Организация"]	= СтрокаОрганизации["Организация"];
				Поиск["Договор"]		= СтрокаДоговора["Договор"];
				#Вставка
				Поиск["Контрагент"]		= СтрокаДоговора["Контрагент"];
				#КонецВставки

				МассивСтрок = ТаблицаОстатков.НайтиСтроки(Поиск);
				Если МассивСтрок.Количество() > 0 Тогда
					ДобавитьСтрокуДоговора = Ложь;
					СтрокаТаблицы = МассивСтрок[0];
				Иначе
					ДобавитьСтрокуДоговора = Истина;
				КонецЕсли;
			Иначе
				ДобавитьСтрокуДоговора = Истина;
			КонецЕсли;

			// Добавляем строку для текущего договора
			Если ДобавитьСтрокуДоговора Тогда
				СтрокаТаблицы = ТаблицаОстатков.Добавить();
				СтрокаТаблицы["Договор"]		= СтрокаДоговора["Договор"];
				СтрокаТаблицы["Организация"]	= СтрокаОрганизации["Организация"]; 
				#Вставка
				СтрокаТаблицы["Контрагент"]		= СтрокаДоговора["Контрагент"]; 
				#КонецВставки
			КонецЕсли;

			СтрокаТаблицы["ОстатокНаНачало"]	= СтрокаТаблицы["ОстатокНаНачало"]	+ СтрокаДоговора["ОстатокНаНачало"];
			СтрокаТаблицы["ОстатокНаКонец"]		= СтрокаТаблицы["ОстатокНаКонец"]	+ СтрокаДоговора["ОстатокНаКонец"];
			СтрокаТаблицы["Расхождение"]		= СтрокаТаблицы["Расхождение"]		+ СтрокаДоговора["Расхождение"];
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры


&ИзменениеИКонтроль("ПолучитьПараметрыЗаполнения")
Функция АБК_ПолучитьПараметрыЗаполнения(ПараметрыПроцедуры)

	ШапкаДокумента			= ПараметрыПроцедуры["ШапкаДокумента"];
	СписокОтмеченныхСчетов	= ПараметрыПроцедуры["СписокОтмеченныхСчетов"];

	СчетаСтандартнойСверки = ПолучитьСчетаСтандартнойСверки(ШапкаДокумента, СписокОтмеченныхСчетов);

	ДоговорыСКонтрагентом = ПолучитьДоговорыСКонтрагентом(ШапкаДокумента);

	Параметры = Новый Структура();

	ТипыДокументовСНесколькимиПервичнымиДокументами = Новый Массив();
	ТипыДокументовСНесколькимиПервичнымиДокументами.Добавить(Тип("ДокументСсылка.ОперацияБух"));
	ТипыДокументовСНесколькимиПервичнымиДокументами.Добавить(Тип("ДокументСсылка.НачислениеДоходов"));
	ТипыДокументовСНесколькимиПервичнымиДокументами.Добавить(Тип("ДокументСсылка.ЭквайринговаяОперация"));

	// Для оборотов
	ИсключаемыеТипыРегистратора = Новый Массив();
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.ЗакрытиеГодаТехнологическое"));
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.ПереносОстатковПоКПС"));
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.ПереносОстатков64нРасчеты"));
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.ВводНачальныхОстатков"));

	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.НачислениеДоходовБудущихПериодов"));
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.КорректировкаДоходовБудущихПериодов"));

	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.ПринятиеКУчетуПравПользованияОС"));
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.ПрекращениеПравПользованияОС"));

	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.НачислениеДоходовБудущихПериодовОбразование"));
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.КорректировкаДолгосрочныхДоговоровОбразование"));
	ИсключаемыеТипыРегистратора.Добавить(Тип("ДокументСсылка.КорректировкаДоходовБудущихПериодовОбразование"));

	ИспользоватьОтборПоОрганизации	= НЕ ШапкаДокумента["ПоВсемОрганизациям"];
	ИспользоватьОтборПоПодразделению = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоПодразделениям")
	И (ЗначениеЗаполнено(ШапкаДокумента["Подразделение"]));
	ИспользоватьОтборПоДоговору		= ЗначениеЗаполнено(ШапкаДокумента["Договор"]);  
	#Вставка
	ИспользоватьОтборПоДоговору		= ЗначениеЗаполнено(ШапкаДокумента["Договор"]) ИЛИ ШапкаДокумента["ИспользоватьСписокДоговоров"];
	#КонецВставки
	ИспользоватьОтборПоИФО			= ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоИФО") И НЕ ШапкаДокумента["БезУчетаИФО"];
	ИспользоватьОтборПоКФО			= ЗначениеЗаполнено(ШапкаДокумента["КФО"]);
	ВалютаРУ						= Константы.ВалютаРегламентированногоУчета.Получить();
	ИспользоватьОтборПоВалюте		= ПолучитьФункциональнуюОпцию("ИспользоватьВалютныйУчет")
	И ЗначениеЗаполнено(ШапкаДокумента["ВалютаДокумента"])
	И НЕ ШапкаДокумента["ВалютаДокумента"] = ВалютаРУ;
	ВыбиратьВалютныеСуммы			= ПолучитьФункциональнуюОпцию("ИспользоватьВалютныйУчет")
	И ЗначениеЗаполнено(ШапкаДокумента["ВалютаДокумента"])
	И НЕ ШапкаДокумента["ВалютаДокумента"] = ВалютаРУ;

	// Стандартная (прежняя) сверка
	Параметры.Вставить("ДатаНачалаОбороты",									ПолучитьДатуНачалаОбороты(ШапкаДокумента));
	Параметры.Вставить("ДатаОкончанияОбороты",								ПолучитьДатуОкончанияОбороты(ШапкаДокумента));
	Параметры.Вставить("ДатаНачалаОстатки",									ПолучитьДатуНачалаОстатки(ШапкаДокумента));
	Параметры.Вставить("ДатаОкончанияОстатки",								ПолучитьДатуОкончанияОстатки(ШапкаДокумента));

	Параметры.Вставить("Контрагент",										ШапкаДокумента["Контрагент"]);
	Параметры.Вставить("Организация",										ШапкаДокумента["Организация"]);
	Параметры.Вставить("Подразделение",										ШапкаДокумента["Подразделение"]);
	Параметры.Вставить("ИФО",												ШапкаДокумента["ИФО"]);
	Параметры.Вставить("КФО",												ШапкаДокумента["КФО"]);
	Параметры.Вставить("Валюта",											ШапкаДокумента["ВалютаДокумента"]);
	Параметры.Вставить("ДетализироватьОстаткиПоДоговорам",					ШапкаДокумента["ДетализироватьПоДоговорам"]);

	Параметры.Вставить("ИспользоватьОтборПоОрганизации",					ИспользоватьОтборПоОрганизации);
	Параметры.Вставить("ИспользоватьОтборПоПодразделению",					ИспользоватьОтборПоПодразделению);
	Параметры.Вставить("ИспользоватьОтборПоДоговору",						ИспользоватьОтборПоДоговору);
	Параметры.Вставить("ИспользоватьОтборПоИФО",							ИспользоватьОтборПоИФО);
	Параметры.Вставить("ИспользоватьОтборПоКФО",							ИспользоватьОтборПоКФО);
	Параметры.Вставить("ИспользоватьОтборПоВалюте",							ИспользоватьОтборПоВалюте);
	Параметры.Вставить("ВыбиратьВалютныеСуммы",								ВыбиратьВалютныеСуммы);
	Параметры.Вставить("ВалютаРУ",											ВалютаРУ);
	Параметры.Вставить("ВидСубконтоДоговоры",								ПланыВидовХарактеристик.ВидыСубконто.Договоры);
	Параметры.Вставить("ТипыДокументовСНесколькимиПервичнымиДокументами",	ТипыДокументовСНесколькимиПервичнымиДокументами);
	Параметры.Вставить("ТипыПлатежныхДокументов",							ПолучитьТипыПлатежныхДокументов());
	Параметры.Вставить("ИсключаемыеТипыРегистратора",						ИсключаемыеТипыРегистратора);

	Параметры.Вставить("СчетаСтандартнойСверки",							СчетаСтандартнойСверки);
	Параметры.Вставить("ДоговорыСКонтрагентом",								ДоговорыСКонтрагентом);

	// Для сверки по длительным договорам
	НастройкиДляСверкиПоДлительнымДоговорам = ПолучитьНастройкиДляСверкиПоДлительнымДоговорам(
	ШапкаДокумента,
	СписокОтмеченныхСчетов,
	СчетаСтандартнойСверки,
	ДоговорыСКонтрагентом);

	Параметры.Вставить("НастройкиДляСверкиПоДлительнымДоговорам",			НастройкиДляСверкиПоДлительнымДоговорам);

	Параметры.Вставить("ДатаПерехода64н",									УчетНДС.ПолучитьДатуНачалаПрименения64н(ШапкаДокумента.Организация));

	Возврат Параметры;

КонецФункции


&ИзменениеИКонтроль("ПолучитьДоговорыСКонтрагентом")
Функция АБК_ПолучитьДоговорыСКонтрагентом(ШапкаДокумента)

	ИспользоватьОтборПоДоговору = ЗначениеЗаполнено(ШапкаДокумента["Договор"]);

	ЗапросПоиск = Новый Запрос();
	ЗапросПоиск.УстановитьПараметр("Контрагент",					ШапкаДокумента["Контрагент"]);
	ЗапросПоиск.УстановитьПараметр("Договор",						ШапкаДокумента["Договор"]);
	ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоДоговору",	ИспользоватьОтборПоДоговору);
	
	#Вставка
	ИспользоватьСписокДоговоров = ШапкаДокумента["ИспользоватьСписокДоговоров"];
	Если ИспользоватьСписокДоговоров Тогда
		ЗапросПоиск.УстановитьПараметр("Договор",						ШапкаДокумента["СписокДоговоров"]);
		ЗапросПоиск.УстановитьПараметр("ИспользоватьОтборПоДоговору",	Истина);
	КонецЕсли;
	#КонецВставки
	
	ЗапросПоиск.Текст = "
	|///////////////////////////////////////////////////////////////////////////////
	|// [0]. Все договоры с указанным контрагентом
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка	КАК Ссылка
	|ИЗ
	|	Справочник.Договоры
	|ГДЕ
	|	ВЫБОР
	|		КОГДА &ИспользоватьОтборПоДоговору ТОГДА
	|			// Отбор по договору
	|			Ссылка В ИЕРАРХИИ(&Договор)
	|		ИНАЧЕ
	|			// Отбор по контрагенту
	|			Контрагент В(&Контрагент)
	|	КОНЕЦ
	|;";

	ВсеДоговоры = ЗапросПоиск.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

	ПараметрыОтбора = Документы.АктСверкиВзаиморасчетов.ПолучитьПараметрыОтбораДлительныхДоговоров(
	ШапкаДокумента,
	"АктСверкиВзаиморасчетов",
	ПолучитьДатуОкончанияОбороты(ШапкаДокумента));

	ДлительныеДоговоры = ПолучитьДлительныеДоговорыСКонтрагентом(ПараметрыОтбора);

	Договоры = Новый Структура();
	Договоры.Вставить("ВсеДоговоры",		ВсеДоговоры);
	Договоры.Вставить("ДлительныеДоговоры",	ДлительныеДоговоры);

	Возврат Договоры;

КонецФункции

