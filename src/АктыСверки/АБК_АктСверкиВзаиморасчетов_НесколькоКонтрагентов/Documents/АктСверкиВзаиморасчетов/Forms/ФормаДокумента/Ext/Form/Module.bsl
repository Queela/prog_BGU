&НаСервере
&Перед("ИнициализацияФормы")
Процедура АБК_ИнициализацияФормы()  
	
	НовЭл = Элементы.Добавить("ПоНесколькимКонтрагентам", Тип("ПолеФормы"), Элементы.ГруппаДетализация);
	НовЭл.ПутьКДанным = "Объект.ПоНесколькимКонтрагентам"; 
	НовЭл.Вид = ВидПоляФормы.ПолеФлажка;
	НовЭл.УстановитьДействие("ПриИзменении", "ПоНесколькимКонтрагентамПриИзменении"); 
	
	НовГруппа = Элементы.Добавить("ГруппаКонтрагенты",Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛевая);
	НовГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НовГруппа.Заголовок = "Контрагенты";
	НовГруппа.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
	НовГруппа.ЗаголовокСвернутогоОтображения = "Контрагенты";
	
	Если НЕ Объект.Контрагенты.Количество() Тогда   
		НовГруппа.Скрыть();
	КонецЕсли;
	
	НовТаблица = Элементы.Добавить("Контрагенты", Тип("ТаблицаФормы"), НовГруппа);
	НовТаблица.ПутьКДанным = "Объект.Контрагенты";
	
	НовЭл = Элементы.Добавить("Контрагенты_Контрагент",Тип("ПолеФормы"), НовТаблица);
	НовЭл.ПутьКДанным = "Объект.Контрагенты.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;     
	
	НовЭл = Элементы.Вставить("ПоДаннымОрганизацииКонтрагент",Тип("ПолеФормы"), Элементы.ПоДаннымОрганизации, Элементы.ПоДаннымОрганизацииДоговор);
	НовЭл.ПутьКДанным = "Объект.ПоДаннымОрганизации.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;     
	
	НовЭл = Элементы.Вставить("ПоДаннымОрганизацииДляЭДОКонтрагент",Тип("ПолеФормы"), Элементы.ПоДаннымОрганизацииДляЭДО, Элементы.ПоДаннымОрганизацииДляЭДОДоговор);
	НовЭл.ПутьКДанным = "Объект.ПоДаннымОрганизации.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;     
	
	НовЭл = Элементы.Вставить("ПоДаннымКонтрагентаКонтрагент",Тип("ПолеФормы"), Элементы.ПоДаннымКонтрагента, Элементы.ПоДаннымКонтрагентаДоговор);
	НовЭл.ПутьКДанным = "Объект.ПоДаннымКонтрагента.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;     
	
	НовЭл = Элементы.Вставить("ПоДаннымКонтрагентаДляЭДОКонтрагент",Тип("ПолеФормы"), Элементы.ПоДаннымКонтрагентаДляЭДО, Элементы.ПоДаннымКонтрагентаДляЭДОДоговор);
	НовЭл.ПутьКДанным = "Объект.ПоДаннымКонтрагента.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;     
	
	НовЭл = Элементы.Вставить("СверкаКонтрагент",Тип("ПолеФормы"), Элементы.СверкаИдентификацияОперации, Элементы.СверкаДоговор);
	НовЭл.ПутьКДанным = "Объект.Сверка.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;     
	
	НовЭл = Элементы.Вставить("СписокОрганизацийКонтрагент",Тип("ПолеФормы"), Элементы.СписокОрганизаций, Элементы.СписокОрганизацийДоговор);
	НовЭл.ПутьКДанным = "Объект.СписокОрганизаций.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;              
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"), "ОстаткиПоДоговорам"));
	
	ЭтаФорма.ИзменитьРеквизиты(МассивРеквизитов);
	
	НовЭл = Элементы.Вставить("ОстаткиПоДоговорамКонтрагент",Тип("ПолеФормы"), Элементы.ОстаткиПоДоговорам, Элементы.ОстаткиПоДоговорамДоговор);
	НовЭл.ПутьКДанным = "ОстаткиПоДоговорам.Контрагент";
	НовЭл.Вид = ВидПоляФормы.ПолеВвода;         
	
	Элемент = Элементы.Вставить("ФормаСписокДоговоров", Тип("ПолеФормы"), Элементы.ГруппаКФО, Элементы.Договор);
	Элемент.ПутьКДанным	= "Объект.СписокДоговоров";
	Элемент.Вид			= ВидПоляФормы.ПолеФлажка;
	Элемент.УстановитьДействие("ПриИзменении", "ПриИзмененииСписокДоговоров");
	
	ЭлементГруппа = Элементы.Вставить("ГруппаДоговоры", Тип("ГруппаФормы"), Элементы.Страницы, Элементы.ГруппаСписокСчетов);
	ЭлементГруппа.Вид			= ВидГруппыФормы.Страница;
	ЭлементГруппа.Заголовок		= НСтр("ru = 'Договоры'");
	
	ЭлементТЧ = Элементы.Добавить("ТаблицаДоговоры", Тип("ТаблицаФормы"), ЭлементГруппа);
	ЭлементТЧ.ПутьКДанным = "Объект.Договоры";
	
	Элемент = Элементы.Добавить("ТаблицаДоговорыДоговор", Тип("ПолеФормы"), ЭлементТЧ);
	Элемент.ПутьКДанным = "Объект.Договоры.Договор";
	Элемент.Вид			= ВидПоляФормы.ПолеВвода;
	
	ВидимостьСпискаДоговоров();
	
КонецПроцедуры

&НаСервере
Процедура ВидимостьСпискаДоговоров()
	Элементы["ГруппаДоговоры"].Видимость = Объект["СписокДоговоров"];		
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСписокДоговоров(Элемент)	
	ВидимостьСпискаДоговоров();
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ПолучитьПараметрыПроцедуры")
Функция АБК_ПолучитьПараметрыПроцедуры()

	ШапкаДокумента = Новый Структура("
	|Дата,
	|Организация,
	|Подразделение,
	|КФО,
	|ИФО,
	|БезУчетаИФО,
	|Контрагент,
	|ВалютаДокумента,
	|ДатаНачала,
	|ДатаОкончания,
	|Договор,
	|РазбитьПоДоговорам,
	|ДетализироватьПоДоговорам,
	|ПоВсемОрганизациям");

	ЗаполнитьЗначенияСвойств(ШапкаДокумента, Объект);               
	
	#Вставка
	Если Объект.ПоНесколькимКонтрагентам Тогда  
		ШапкаДокумента.Вставить("Контрагент", 				Объект.Контрагенты.Выгрузить().ВыгрузитьКолонку("Контрагент"));	
	КонецЕсли;      
	
	ШапкаДокумента.Вставить("СписокДоговоров", 				Объект["Договоры"].Выгрузить().ВыгрузитьКолонку("Договор"));
	ШапкаДокумента.Вставить("ИспользоватьСписокДоговоров", 	Объект.ИспользоватьСписокДоговоров);
	#КонецВставки

	ПараметрыПроцедуры = Новый Структура();
	ПараметрыПроцедуры.Вставить("ШапкаДокумента",			ШапкаДокумента);
	ПараметрыПроцедуры.Вставить("СписокОтмеченныхСчетов",	Документы.АктСверкиВзаиморасчетов.ПолучитьСписокОтмеченныхСчетов(Объект));

	Возврат ПараметрыПроцедуры;

КонецФункции

&НаКлиенте
&ИзменениеИКонтроль("ВходныеДанныеЗаполнены")
Функция АБК_ВходныеДанныеЗаполнены()

	// Проверим корректность входных данных для заполнения.

	Результат = Истина;

	Если НЕ ЗначениеЗаполнено(Объект["Организация"])
		И НЕ Объект["ПоВсемОрганизациям"] Тогда
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбрана организация'"),
		Объект.Ссылка,
		"Объект.Организация");
	КонецЕсли;
	
	#Удаление
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент) Тогда
	#КонецУдаления	
	#Вставка
	Если НЕ ЗначениеЗаполнено(Объект.Контрагент)
		И НЕ Объект.ПоНесколькимКонтрагентам Тогда
	#КонецВставки	
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбран контрагент'"),
		Объект.Ссылка,
		"Объект.Контрагент");
	КонецЕсли;    
	
	#Вставка
	Если Объект.ПоНесколькимКонтрагентам
		И НЕ Объект.Контрагенты.Количество() Тогда
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбраны контрагенты'"),
		Объект.Ссылка,
		"Объект.Контрагенты");
	КонецЕсли;    
	#КонецВставки

	Если ИспользоватьВалютныйУчет И НЕ ЗначениеЗаполнено(Объект.ВалютаДокумента) Тогда
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбрана валюта документа'"),
		Объект.Ссылка,
		"Объект.ВалютаДокумента");
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбрана дата начала периода сверки расчетов'"),
		Объект.Ссылка,
		"Объект.ДатаНачала");
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбрана дата окончания периода сверки расчетов'"),
		Объект.Ссылка,
		"Объект.ДатаОкончания");
	КонецЕсли;

	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Дата окончания периода сверки должна быть больше даты начала'"),
		Объект.Ссылка,
		"Объект.ДатаОкончания");
	КонецЕсли;

	// Количество счетов, участвующих в расчетах, должно быть больше 0:
	ФильтрСписокСчетов = Новый Массив();
	Для Каждого СтрокаСчета Из Объект.СписокСчетов Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) ИЛИ СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
			Продолжить;
		Иначе
			ФильтрСписокСчетов.Добавить(СтрокаСчета.Счет);
		КонецЕсли; 
	КонецЦикла; 
	Если ФильтрСписокСчетов.Количество() = 0 Тогда
		Результат = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Не выбран ни один счет учета расчетов'"),
		Объект.Ссылка,
		"Объект.СписокСчетов");
	КонецЕсли;

	Возврат Результат;

КонецФункции

&НаКлиенте
&ИзменениеИКонтроль("ПолучитьПрименяемыеЗначенияФлажков")
Функция АБК_ПолучитьПрименяемыеЗначенияФлажков(ИмяИзмененногоФлажка)

	ПрименяемоеЗначениеПоВсемОрганизациям			= Объект["ПоВсемОрганизациям"];
	ПрименяемоеЗначениеДетализироватьПоДоговорам	= Объект["ДетализироватьПоДоговорам"]; 
	#Вставка
	ПрименяемоеЗначениеПоНесколькимКонтрагентам		= Объект["ПоНесколькимКонтрагентам"]; 
	#КонецВставки

	Если ИмяИзмененногоФлажка = "ПоВсемОрганизациям" Тогда
		ПрименяемоеЗначениеПоВсемОрганизациям = НЕ ПрименяемоеЗначениеПоВсемОрганизациям;
	ИначеЕсли ИмяИзмененногоФлажка = "ДетализироватьПоДоговорам" Тогда
		ПрименяемоеЗначениеДетализироватьПоДоговорам = НЕ ПрименяемоеЗначениеДетализироватьПоДоговорам; 
	#Вставка
	ИначеЕсли ИмяИзмененногоФлажка = "ПоНесколькимКонтрагентам" Тогда
		ПрименяемоеЗначениеПоНесколькимКонтрагентам= НЕ ПрименяемоеЗначениеПоНесколькимКонтрагентам; 
	#КонецВставки
	КонецЕсли;

	ПрименяемыеЗначенияФлажков = Новый Структура();
	ПрименяемыеЗначенияФлажков.Вставить("ПоВсемОрганизациям",			ПрименяемоеЗначениеПоВсемОрганизациям);
	ПрименяемыеЗначенияФлажков.Вставить("ДетализироватьПоДоговорам",	ПрименяемоеЗначениеДетализироватьПоДоговорам); 
	#Вставка
	ПрименяемыеЗначенияФлажков.Вставить("ПоНесколькимКонтрагентам",		ПрименяемоеЗначениеПоНесколькимКонтрагентам); 
	#КонецВставки

	Возврат ПрименяемыеЗначенияФлажков;

КонецФункции          

&НаКлиенте
Процедура ПоНесколькимКонтрагентамПриИзменении(Элемент)
	
	Если Объект["ДетализироватьПоДоговорам"] Тогда       
		
		ПрименяемыеЗначенияФлажков = ПолучитьПрименяемыеЗначенияФлажков("ПоНесколькимКонтрагентам");
		
		НастроитьПредставлениеОстатков("ПоНесколькимКонтрагентам", ПрименяемыеЗначенияФлажков);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
&ИзменениеИКонтроль("ИспользуетсяДеревоОстатков")
Функция АБК_ИспользуетсяДеревоОстатков(Объект)         
	
	#Вставка
	Возврат Объект["ПоВсемОрганизациям"] И (Объект["ДетализироватьПоДоговорам"] ИЛИ Объект["ПоНесколькимКонтрагентам"]);
	#КонецВставки

	Возврат Объект["ПоВсемОрганизациям"] И Объект["ДетализироватьПоДоговорам"];

КонецФункции


