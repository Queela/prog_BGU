
&ИзменениеИКонтроль("ЗаполнитьПоДаннымУчета")
Процедура АБК_ЗаполнитьПоДаннымУчета(ДокументОбъект, ТолькоПересчитать)
	
	Перем ВариантыВидовНФА;
	
	ИспользоватьУчетПоПодразделениям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоПодразделениям");
	ИспользоватьОтборПоПодразделению = ИспользоватьУчетПоПодразделениям И ЗначениеЗаполнено(ДокументОбъект.Подразделение);
	
	Объект = ДокументОбъект;
	
	Если НЕ ТолькоПересчитать Тогда
		Объект.Инвентаризация.Очистить();
	КонецЕсли;
	
	ВидНФА = ПолучитьВидНФАПоСчету(Объект, ВариантыВидовНФА);
	
	Если Документы.ИнвентаризацияОС.ЭтоИнвентаризация_11100(Объект) Тогда
		
		Документы.ИнвентаризацияОС.ЗаполнитьПоДаннымУчета_11100(Объект);
		
		Возврат;
		
	КонецЕсли;
	
	УстанавливатьКоличествоПоУмолчанию = ИнвентаризацияСервер.УстанавливатьКоличествоПоУмолчанию(ДокументОбъект);
	
	КоличествоПоУмолчанию = ИнвентаризацияСервер.ПолучитьКоличествоПоУмолчанию();
	
	Если УстанавливатьКоличествоПоУмолчанию Тогда
		ВыбиратьНулевоеКоличество = Истина;
		ЗаменятьНулевоеКоличество = Истина;
	Иначе
		ВыбиратьНулевоеКоличество = Ложь;
		ЗаменятьНулевоеКоличество = Ложь;
	КонецЕсли;
	
	Если Объект["ВариантФормированияОписи"] = 0 Тогда
		// 0. Опись до 2018 г. Счет в шапке
		
		ПоляВыбораВложенныйЗапрос = "Т.Счет	КАК Счет,";
		
		ПоляГруппировкиВложенныйЗапрос = ",Т.Счет";
		
		ПоляВыбораТаблицаИнвентаризация = "";
		
		СоединениеСТаблицейСчетовБлижайшихРодителей = "";
		
		ТекстЗапросаБлижайшиеОбщиеРодителиСчетов = "";
		
		СдвигИндексаВсехТаблиц = 0;
		
	ИначеЕсли Объект["ВариантФормированияОписи"] = 1 Тогда
		// 1. Опись с 2018 г. Счет в таблице (26 знаков)
		
		ПоляВыбораВложенныйЗапрос = "
		|Т.Счет	КАК Счет,
		|Т.КПС	КАК КПС,
		|Т.КФО	КАК КФО,";
		
		ПоляГруппировкиВложенныйЗапрос = ",Т.Счет,КПС,КФО";
		
		ПоляВыбораТаблицаИнвентаризация = "
		|ВложенныйЗапрос.КПС	КАК КПС,
		|ВложенныйЗапрос.КФО	КАК КФО,";
		
		СоединениеСТаблицейСчетовБлижайшихРодителей = "";
		
		ТекстЗапросаБлижайшиеОбщиеРодителиСчетов = "";
		
		СдвигИндексаВсехТаблиц = 0;
		
	ИначеЕсли Объект["ВариантФормированияОписи"] = 2 Тогда
		// 2. Опись с 2018 г. Счет в таблице (5 знаков)
		
		ПоляВыбораВложенныйЗапрос = "
		|Т.Счет			КАК Счет,
		|НЕОПРЕДЕЛЕНО	КАК КПС,
		|НЕОПРЕДЕЛЕНО	КАК КФО,";
		
		ПоляГруппировкиВложенныйЗапрос = ",Т.Счет";
		
		ПоляВыбораТаблицаИнвентаризация = "
		|ВложенныйЗапрос.КПС	КАК КПС,
		|ВложенныйЗапрос.КФО	КАК КФО,";
		
		СоединениеСТаблицейСчетовБлижайшихРодителей = "";
		
		ТекстЗапросаБлижайшиеОбщиеРодителиСчетов = "";
		
		СдвигИндексаВсехТаблиц = 0;
		
	Иначе
		// 3. Опись с 2018 г. Счет в таблице (5 знаков). Одна строка - один объект
		
		ПоляВыбораВложенныйЗапрос = "
		|БлижайшиеОбщиеРодителиСчетов.Счет	КАК Счет,
		|НЕОПРЕДЕЛЕНО						КАК КПС,
		|НЕОПРЕДЕЛЕНО						КАК КФО,";
		
		ПоляГруппировкиВложенныйЗапрос = ",БлижайшиеОбщиеРодителиСчетов.Счет";
		
		ПоляВыбораТаблицаИнвентаризация = "
		|ВложенныйЗапрос.КПС	КАК КПС,
		|ВложенныйЗапрос.КФО	КАК КФО,";
		
		СоединениеСТаблицейСчетовБлижайшихРодителей = "
		|ЛЕВОЕ СОЕДИНЕНИЕ	БлижайшиеОбщиеРодителиСчетов
		|	ПО	Т.ОсновноеСредство = БлижайшиеОбщиеРодителиСчетов.НФА
		|	И	Т.ИнвентарныйНомер = БлижайшиеОбщиеРодителиСчетов.ИнвНомер";
		
		ТекстЗапросаБлижайшиеОбщиеРодителиСчетов = ИнвентаризацияСервер.ПолучитьТекстЗапросаБлижайшиеОбщиеРодителиСчетов(
		"ОстаткиПоИнвНомерам",
		"ОсновноеСредство",
		"ИнвентарныйНомер",
		СдвигИндексаВсехТаблиц);
		
	КонецЕсли;
	
	СчетОтбор = ПолучитьСчетУчетаОтбор(ДокументОбъект, ВидНФА, ВариантыВидовНФА);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// [0].
	|//
	|ВЫБРАТЬ
	|	ОСДокумента.ОсновноеСредство,
	|	ЕСТЬNULL(ОСДокумента.ИнвентарныйНомер, ЗНАЧЕНИЕ(Справочник.ИнвентарныеНомераОС.ПустаяСсылка)) КАК ИнвентарныйНомер,
	|	ОСДокумента.КоличествоФУ,
	|	ОСДокумента.СуммаФУ,
	|	ОСДокумента.Счет
	|ПОМЕСТИТЬ ОСДокумента
	|ИЗ
	|	&ОСДокумента КАК ОСДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [1].
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦМО.Ссылка
	|ПОМЕСТИТЬ ЦМО
	|ИЗ
	|	Справочник.ЦМО КАК ЦМО
	|ГДЕ  
	#Удаление
	|	ЦМО.Ссылка = &ЦМО
	#КонецУдаления
	#Вставка     
	|	ЦМО.Ссылка В (&ЦМО)
	#КонецВставки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦМО.Ссылка
	|ИЗ
	|	Справочник.ЦМО КАК ЦМО
	|ГДЕ
	#Удаление
	|	ЦМО.Сотрудник = &ЦМО
	#КонецУдаления
	#Вставка     
	|	ЦМО.Сотрудник В (&ЦМО)
	#КонецВставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [2].
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЖурналПроводокЕПСБУОстатки.Счет КАК Счет,
	|	ВЫРАЗИТЬ(ЖурналПроводокЕПСБУОстатки.Субконто1 КАК Справочник.ОсновныеСредства) КАК ОсновноеСредство,
	|	[ВыборМОЛИзОстатковЕПСБУ] КАК ЦМО,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПоПодразделениям
	|			ТОГДА ЕСТЬNULL(ЖурналПроводокЕПСБУОстатки.Подразделение, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	ЖурналПроводокЕПСБУОстатки.КПС КАК КПС,
	|	ЖурналПроводокЕПСБУОстатки.ИФО КАК ИФО,
	|	ЖурналПроводокЕПСБУОстатки.КФО КАК КФО,
	|	СУММА(ЖурналПроводокЕПСБУОстатки.СуммаОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(ЖурналПроводокЕПСБУОстатки.КоличествоОстатокДт) КАК КоличествоОстатокДт
	|ПОМЕСТИТЬ ОстаткиБУ
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Остатки(
	|			&Период,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И КФО = &КФО
	|				И КПС = &КПС
	|				И ИФО = &ИФО
	|				И [ОтборПоМОЛИзОстатковЕПСБУ]
	|				И [ОтборПоКонтрагентуИзОстатковЕПСБУ]
	|				И [ОтборПоДоговоруИзОстатковЕПСБУ]
	|	) КАК ЖурналПроводокЕПСБУОстатки
	|ГДЕ
	|	ВЫБОР
	|		КОГДА &ИспользоватьОтборПоПодразделению И Счет.УчетПоПодразделениям ТОГДА
	|			Подразделение = &Подразделение
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|СГРУППИРОВАТЬ ПО
	|	ЖурналПроводокЕПСБУОстатки.Счет,
	|	ЖурналПроводокЕПСБУОстатки.КПС,
	|	ЖурналПроводокЕПСБУОстатки.ИФО,
	|	ЖурналПроводокЕПСБУОстатки.КФО,
	|	ВЫРАЗИТЬ(ЖурналПроводокЕПСБУОстатки.Субконто1 КАК Справочник.ОсновныеСредства),
	|	[ВыборМОЛИзОстатковЕПСБУ],
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПоПодразделениям
	|			ТОГДА ЕСТЬNULL(ЖурналПроводокЕПСБУОстатки.Подразделение, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	КОНЕЦ
	
	|" + ?(ВыбиратьНулевоеКоличество, "", "
	|ИМЕЮЩИЕ
	|	СУММА(ЖурналПроводокЕПСБУОстатки.КоличествоОстатокДт) <> 0") + "
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [3].
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьОбъектовОСОстатки.ОсновноеСредство,
	|	СтоимостьОбъектовОСОстатки.ИнвентарныйНомер,
	|	[ВыборМОЛИзСтоимостиОбъектов] КАК ЦМО,
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПоПодразделениям
	|			ТОГДА СтоимостьОбъектовОСОстатки.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	СУММА(СтоимостьОбъектовОСОстатки.СтоимостьОстаток) КАК Сумма,
	|	СУММА(СтоимостьОбъектовОСОстатки.КоличествоОстаток) КАК Количество
	|ПОМЕСТИТЬ ИнвНомера
	|ИЗ
	|	РегистрНакопления.СтоимостьОбъектовОС.Остатки(
	|			&Период,
	|			Организация = &Организация
	|			И ВидРаспоряжения = &ВидРаспоряжения
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ОстаткиБУ.ОсновноеСредство
	|					ИЗ
	|						ОстаткиБУ)
	|				И [ОтборПоМОЛИзСтоимостиОбъектов]
	|				И [ОтборПоКонтрагентуИзСтоимостиОбъектов]
	|				И [ОтборПоДоговоруИзСтоимостиОбъектов]
	|	) КАК СтоимостьОбъектовОСОстатки
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОбъектовОСОстатки.ОсновноеСредство,
	|	СтоимостьОбъектовОСОстатки.ИнвентарныйНомер,
	|	[ВыборМОЛИзСтоимостиОбъектов],
	|	ВЫБОР
	|		КОГДА &ИспользоватьУчетПоПодразделениям
	|			ТОГДА СтоимостьОбъектовОСОстатки.Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	КОНЕЦ
	
	|" + ?(ВыбиратьНулевоеКоличество, "", "
	|ИМЕЮЩИЕ
	|	СУММА(СтоимостьОбъектовОСОстатки.КоличествоОстаток) <> 0") + "
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [4].
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиБУ.Счет,
	|	ОстаткиБУ.ОсновноеСредство,
	|	ОстаткиБУ.ЦМО,
	|	ОстаткиБУ.Подразделение,
	|	ОстаткиБУ.КПС,
	|	ОстаткиБУ.ИФО,
	|	ОстаткиБУ.КФО,
	|	ВЫБОР
	|		КОГДА ОстаткиБУ.Счет В(&СчетаИсточникСуммРегистрБухгалтерии) ТОГДА
	|			ЕСТЬNULL(ОстаткиБУ.СуммаОстатокДт, 0)
	|		ИНАЧЕ
	|			ЕСТЬNULL(ИнвНомера.Сумма, ОстаткиБУ.СуммаОстатокДт)
	|	КОНЕЦ																							КАК СуммаБУ,
	|	ВЫБОР
	|		КОГДА ОстаткиБУ.Счет В(&СчетаИсточникСуммРегистрБухгалтерии) ТОГДА
	|			ЕСТЬNULL(ОстаткиБУ.КоличествоОстатокДт, 0)
	|		ИНАЧЕ
	|			ЕСТЬNULL(ИнвНомера.Количество, ОстаткиБУ.КоличествоОстатокДт)
	|	КОНЕЦ																							КАК КоличествоБУ,
	|	ЕСТЬNULL(ИнвНомера.ИнвентарныйНомер	, ЗНАЧЕНИЕ(Справочник.ИнвентарныеНомераОС.ПустаяСсылка))	КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ ОстаткиПоИнвНомерам
	|ИЗ
	|	ОстаткиБУ КАК ОстаткиБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИнвНомера КАК ИнвНомера
	|		ПО ОстаткиБУ.ОсновноеСредство = ИнвНомера.ОсновноеСредство
	|			И ОстаткиБУ.ЦМО = ИнвНомера.ЦМО
	|			И ОстаткиБУ.Подразделение = ИнвНомера.Подразделение
	|;
	|"
	
	+ ТекстЗапросаБлижайшиеОбщиеРодителиСчетов
	
	+ "
	|////////////////////////////////////////////////////////////////////////////////
	|// [5]. Данные для таблицы Инвентаризация
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Счет,
	|	ВложенныйЗапрос.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА &НеЗаполнятьЦену ИЛИ ВложенныйЗапрос.КоличествоБУ = 0 ТОГДА
	|			0
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ВложенныйЗапрос.СуммаБУ / ВложенныйЗапрос.КоличествоБУ КАК Число(18,5))
	|	КОНЕЦ									КАК Цена,
	|	ВложенныйЗапрос.КоличествоБУ,
	|	ВложенныйЗапрос.СуммаБУ,
	|	ВложенныйЗапрос.ИнвентарныйНомер," + ПоляВыбораТаблицаИнвентаризация + "
	|	ВложенныйЗапрос.КоличествоФУ,
	#Вставка
	|	ВложенныйЗапрос.ЦМО КАК ЦМО,
	#КонецВставки
	|	ВложенныйЗапрос.СуммаФУ
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.ОсновноеСредство КАК ОсновноеСредство,
	|		СУММА(Т.КоличествоБУ) КАК КоличествоБУ,
	|		СУММА(Т.СуммаБУ) КАК СуммаБУ,
	|		Т.ИнвентарныйНомер КАК ИнвентарныйНомер," + ПоляВыбораВложенныйЗапрос + "
	|		СУММА(Т.КоличествоФУ) КАК КоличествоФУ,  
	#Вставка
	|		Т.ЦМО КАК ЦМО,
	#КонецВставки
	|		СУММА(Т.СуммаФУ) КАК СуммаФУ
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ОстаткиПоИнвНомерам.Счет КАК Счет,
	|			ОстаткиПоИнвНомерам.ОсновноеСредство КАК ОсновноеСредство,
	|			ОстаткиПоИнвНомерам.ЦМО КАК ЦМО,
	|			ОстаткиПоИнвНомерам.КПС КАК КПС,
	|			ОстаткиПоИнвНомерам.ИФО КАК ИФО,
	|			ОстаткиПоИнвНомерам.КФО КАК КФО,
	|			ОстаткиПоИнвНомерам.КоличествоБУ КАК КоличествоБУ,
	|			ОстаткиПоИнвНомерам.СуммаБУ КАК СуммаБУ,
	|			ОстаткиПоИнвНомерам.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|			0 КАК КоличествоФУ,  
	|			0 КАК СуммаФУ
	|		ИЗ
	|			ОстаткиПоИнвНомерам
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ОСДокумента.Счет,
	|			ОСДокумента.ОсновноеСредство,
	|			ВЫБОР 
	#Удаление
	|				КОГДА ТИПЗНАЧЕНИЯ(&ЦМО) = ТИП(Справочник.ЦМО)
	|					ТОГДА &ЦМО 
	#КонецУдаления
	#Вставка     
	|				КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоИнвНомерам.ЦМО) = ТИП(Справочник.ЦМО)
	|					ТОГДА ОстаткиПоИнвНомерам.ЦМО 
	#КонецВставки
	|			КОНЕЦ,
	|			NULL,
	|			NULL,
	|			NULL,
	|			0,
	|			0,
	|			ОСДокумента.ИнвентарныйНомер,
	|			ОСДокумента.КоличествоФУ,
	|			ОСДокумента.СуммаФУ
	|		ИЗ
	|			ОСДокумента КАК ОСДокумента
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоИнвНомерам КАК ОстаткиПоИнвНомерам
	|				ПО ОСДокумента.ОсновноеСредство = ОстаткиПоИнвНомерам.ОсновноеСредство
	|					И ОСДокумента.ИнвентарныйНомер = ОстаткиПоИнвНомерам.ИнвентарныйНомер
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|				ПО ОСДокумента.ОсновноеСредство = ОсновныеСредства.Ссылка
	|		ГДЕ
	|			ОстаткиПоИнвНомерам.ОсновноеСредство ЕСТЬ NULL ) КАК Т" + СоединениеСТаблицейСчетовБлижайшихРодителей + "
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Т.ОсновноеСредство,
	#Вставка
	|		Т.ЦМО,
	#КонецВставки
	|		Т.ИнвентарныйНомер" + ПоляГруппировкиВложенныйЗапрос + ") КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО ВложенныйЗапрос.ОсновноеСредство = ОсновныеСредства.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИнвентарныеНомераОС КАК ИнвентарныеНомераОС
	|		ПО ВложенныйЗапрос.ИнвентарныйНомер = ИнвентарныеНомераОС.Ссылка
	|%ДопУсловие%
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновныеСредства.Наименование,
	|	ИнвентарныеНомераОС.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [6]. Данные для таблицы Остатки
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиПоИнвНомерам.Счет,
	|	ОстаткиПоИнвНомерам.ОсновноеСредство,
	|	ОстаткиПоИнвНомерам.ЦМО,
	|	ОстаткиПоИнвНомерам.Подразделение,
	|	ОстаткиПоИнвНомерам.КПС,
	|	ОстаткиПоИнвНомерам.ИФО,
	|	ОстаткиПоИнвНомерам.КФО,
	|	ОстаткиПоИнвНомерам.КоличествоБУ КАК Количество,
	|	ОстаткиПоИнвНомерам.СуммаБУ КАК СтоимостьБалансовая,
	|	ОстаткиПоИнвНомерам.ИнвентарныйНомер
	|ИЗ
	|	ОстаткиПоИнвНомерам КАК ОстаткиПоИнвНомерам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [7]. Данные для таблицы НастройкаПорядка
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОстаткиБУ.Подразделение,
	|	ОстаткиБУ.КФО,
	|	ОстаткиБУ.ИФО,
	|	ОстаткиБУ.КПС,
	|	ОстаткиБУ.ЦМО
	|ИЗ
	|	ОстаткиБУ КАК ОстаткиБУ";
	
	ОСДокумента = Объект.Инвентаризация.Выгрузить(,"ОсновноеСредство,ИнвентарныйНомер,КоличествоФУ,СуммаФУ,Счет");
	ОСДокумента.Свернуть("ОсновноеСредство,ИнвентарныйНомер,Счет", "КоличествоФУ,СуммаФУ");
	
	Запрос.УстановитьПараметр("СчетГруппа",			Объект.СчетУчета);
	Запрос.УстановитьПараметр("НеЗаполнятьЦену",	Объект.НеЗаполнятьЦену);
	
	Запрос.УстановитьПараметр("Период", 			КонецДня(Объект.ДатаИнвентаризации));
	Запрос.УстановитьПараметр("Организация",		Объект.Организация);
	Запрос.УстановитьПараметр("Счет", 				СчетОтбор); 
	#Удаление
	Запрос.УстановитьПараметр("ЦМО", 				Объект.ЦМО);
	#КонецУдаления
	#Вставка     
	Если ДокументОбъект.АБК_ЗаполнитьПоВсемМОЛ Тогда 
		ВсеЦМОСчета = ПолучитьЦМОСчета(ДокументОбъект.СчетУчета, ДокументОбъект.ДатаИнвентаризации);
		Если ВсеЦМОСчета.Количество() Тогда
			Запрос.УстановитьПараметр("ЦМО", 			ВсеЦМОСчета);
		Иначе 
			Запрос.УстановитьПараметр("ЦМО", 			Объект.ЦМО);
		КонецЕсли;
		
	Иначе         
		Запрос.УстановитьПараметр("ЦМО", 			Объект.ЦМО);
	КонецЕсли;
	#КонецВставки
	Запрос.УстановитьПараметр("ОСДокумента", 		ОСДокумента);
	
	Запрос.УстановитьПараметр("ИспользоватьУчетПоПодразделениям",	ИспользоватьУчетПоПодразделениям);
	Запрос.УстановитьПараметр("ИспользоватьОтборПоПодразделению",	ИспользоватьОтборПоПодразделению);
	Запрос.УстановитьПараметр("Подразделение",						Объект.Подразделение);
	
	Запрос.УстановитьПараметр("СчетаИсточникСуммРегистрБухгалтерии", ПолучитьСчетаИсточникСуммРегистрБухгалтерии(Объект));
	
	Если ЗначениеЗаполнено(Объект.КФО) Тогда
		Запрос.УстановитьПараметр("КФО", 			Объект.КФО);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И КФО = &КФО", "");
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.КПС) Тогда
		Запрос.УстановитьПараметр("КПС", 			Объект.КПС);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И КПС = &КПС", "");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоИФО") И ЗначениеЗаполнено(Объект.ИФО) Тогда
		Запрос.УстановитьПараметр("ИФО", 			Объект.ИФО);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ИФО = &ИФО", "");
	КонецЕсли;
	
	Если ТипЗнч(Объект.ЦМО) = Тип("СправочникСсылка.Контрагенты") Тогда
		КонтрагентДляОтбора = Объект.ЦМО;
	Иначе
		КонтрагентДляОтбора = Объект.Контрагент;
	КонецЕсли;
	#Удаление
	Запрос.УстановитьПараметр("Контрагент", КонтрагентДляОтбора);
	#КонецУдаления
	#Вставка     
	Если ДокументОбъект.АБК_ЗаполнитьПоВсемМОЛ Тогда
		ВсеЦМОСчета = ПолучитьЦМОСчета(ДокументОбъект.СчетУчета, ДокументОбъект.ДатаИнвентаризации);
		Если ВсеЦМОСчета.Количество() Тогда
			Запрос.УстановитьПараметр("Контрагент", 			ВсеЦМОСчета);
		Иначе 
			Запрос.УстановитьПараметр("Контрагент", КонтрагентДляОтбора);
		КонецЕсли;
	Иначе 
		Запрос.УстановитьПараметр("Контрагент", КонтрагентДляОтбора);
	КонецЕсли;
	#КонецВставки
	Запрос.УстановитьПараметр("Договор", Объект.Договор);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ДопУсловие%", "");
	
	ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.ПустаяСсылка();
	Если (ВидНФА = "1" Или ВидНФА = "2" Или ВидНФА = "3" Или ВидНФА = "10") Тогда
		// счета 101, 102, 103, 106
		ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.НаБалансе;
	ИначеЕсли ВидНФА = "4" Тогда // счет 21
		ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.ОперативныйУчет;
	Иначе
		// Применяется регистр СтоимостьОбъектовОСПоКонтрагентам
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ".СтоимостьОбъектовОС", ".СтоимостьОбъектовОСПоКонтрагентам");		
		Если ВидНФА = "5" Тогда // счет 01
			ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.ПолученоВПользование;			
		ИначеЕсли ВидНФА = "6" // счет 02
			ИЛИ ВидНФА = "7" Тогда // счет 02.3
			ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.НаХранении;
		ИначеЕсли ВидНФА = "12" Тогда // счет 24
			ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.ПереданоВУправление;
		ИначеЕсли ВидНФА = "13" Тогда // счет 25
			ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.ПереданоВАренду;
		ИначеЕсли ВидНФА = "14" Тогда // счет 26
			ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.ПереданоВПользование;
		ИначеЕсли ВидНФА = "11" Тогда // счет 27
			ВидРаспоряжения = Перечисления.ВидыРаспоряженияОС.ПереданоВЛичноеПользование;
		КонецЕсли;
	КонецЕсли;
	Запрос.УстановитьПараметр("ВидРаспоряжения", ВидРаспоряжения);
	
	НомераСубконто = ПолучитьНомераСубконто(СчетОтбор);
	
	НомерСубконтоЦМО			= Неопределено;
	НомерСубконтоКонтрагенты	= Неопределено;
	НомерСубконтоДоговоры		= Неопределено;
	
	НомераСубконто.Свойство("ЦМО",			НомерСубконтоЦМО);
	НомераСубконто.Свойство("Контрагенты",	НомерСубконтоКонтрагенты);
	НомераСубконто.Свойство("Договоры",		НомерСубконтоДоговоры);
	
	ИспользоватьОтборПоЦМО = (НомерСубконтоЦМО <> Неопределено);
	#Удаление
	ИспользоватьОтборПоКонтрагенту = (НомерСубконтоКонтрагенты <> Неопределено И ЗначениеЗаполнено(КонтрагентДляОтбора));
	#КонецУдаления
	#Вставка     
	ИспользоватьОтборПоКонтрагенту = НомерСубконтоКонтрагенты <> Неопределено И (ЗначениеЗаполнено(КонтрагентДляОтбора)
	ИЛИ ДокументОбъект.АБК_ЗаполнитьПоВсемМОЛ);
	#КонецВставки
	ИспользоватьОтборПоДоговору = (НомерСубконтоДоговоры <> Неопределено И ЗначениеЗаполнено(Объект.Договор));
	
	Если ИспользоватьОтборПоДоговору Тогда
		ИспользоватьОтборПоКонтрагенту = Ложь;
	КонецЕсли;
	
	ВидыСубконто = Новый Массив();
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.ОсновныеСредства);
	
	Если ИспользоватьОтборПоЦМО Тогда
		// связь с остатками ЕПСБУ по ЦМО
		
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.ЦМО);
		
		НомерСубконтоЦМО = ВидыСубконто.Количество();
		
		ТекстВыборМОЛИзОстатковЕПСБУ = СтрЗаменить(
		"ВЫРАЗИТЬ(ЖурналПроводокЕПСБУОстатки.Субконто[НомерСубконтоЦМО] КАК Справочник.ЦМО)",
		"[НомерСубконтоЦМО]",
		НомерСубконтоЦМО);
		
		ТекстОтборПоМОЛИзОстатковЕПСБУ = СтрЗаменить(
		"Субконто[НомерСубконтоЦМО] В (ВЫБРАТЬ ЦМО.Ссылка ИЗ ЦМО)",
		"[НомерСубконтоЦМО]",
		НомерСубконтоЦМО);
		
		ТекстОтборПоМОЛИзСтоимостиОбъектов = "ЦМО В (ВЫБРАТЬ ЦМО.Ссылка ИЗ ЦМО)";
		
		ТекстВыборМОЛИзСтоимостиОбъектов = "СтоимостьОбъектовОСОстатки.ЦМО";
	Иначе
		
		ТекстВыборМОЛИзОстатковЕПСБУ = "ЗНАЧЕНИЕ(Справочник.ЦМО.ПустаяСсылка)";
		
		ТекстОтборПоМОЛИзОстатковЕПСБУ = "Истина";
		
		ТекстОтборПоМОЛИзСтоимостиОбъектов = "Истина";
		
		ТекстВыборМОЛИзСтоимостиОбъектов = "ЗНАЧЕНИЕ(Справочник.ЦМО.ПустаяСсылка)";
	КонецЕсли;
	
	Если ИспользоватьОтборПоКонтрагенту Тогда
		// связь с остатками ЕПСБУ по Контрагенту
		
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Контрагенты);
		
		НомерСубконтоКонтрагенты = ВидыСубконто.Количество();
		
		ТекстВыборМОЛИзОстатковЕПСБУ = СтрЗаменить(
		"ВЫРАЗИТЬ(ЖурналПроводокЕПСБУОстатки.Субконто[НомерСубконтоКонтрагенты] КАК Справочник.Контрагенты)",
		"[НомерСубконтоКонтрагенты]",
		НомерСубконтоКонтрагенты);
		
		ТекстОтборПоКонтрагентуИзОстатковЕПСБУ = СтрЗаменить(
		#Удаление
		"Субконто[НомерСубконтоКонтрагенты] = &Контрагент",
		#КонецУдаления
		#Вставка     
		"Субконто[НомерСубконтоКонтрагенты] В (&Контрагент)",
		#КонецВставки
		"[НомерСубконтоКонтрагенты]",
		НомерСубконтоКонтрагенты);
		
		ТекстВыборМОЛИзСтоимостиОбъектов = "СтоимостьОбъектовОСОстатки.Контрагент";
		#Удаление
		ТекстОтборПоКонтрагентуИзСтоимостиОбъектов = "Контрагент = &Контрагент";
		#КонецУдаления
		#Вставка     
		ТекстОтборПоКонтрагентуИзСтоимостиОбъектов = "Контрагент В (&Контрагент)";
		#КонецВставки
	Иначе
		
		ТекстОтборПоКонтрагентуИзОстатковЕПСБУ = "Истина";
		
		ТекстОтборПоКонтрагентуИзСтоимостиОбъектов = "Истина";
		
	КонецЕсли;
	
	Если ИспользоватьОтборПоДоговору Тогда
		
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Договоры);
		
		НомерСубконтоДоговоры = ВидыСубконто.Количество();
		
		ТекстОтборПоДоговоруИзОстатковЕПСБУ = СтрЗаменить(
		"Субконто[НомерСубконтоДоговоры] = &Договор",
		"[НомерСубконтоДоговоры]",
		НомерСубконтоДоговоры);
		
		ТекстОтборПоДоговоруИзСтоимостиОбъектов = "Договор = &Договор";
		
	Иначе
		
		ТекстОтборПоДоговоруИзОстатковЕПСБУ = "Истина";
		
		ТекстОтборПоДоговоруИзСтоимостиОбъектов = "Истина";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ВыборМОЛИзОстатковЕПСБУ]", ТекстВыборМОЛИзОстатковЕПСБУ);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ОтборПоМОЛИзОстатковЕПСБУ]", ТекстОтборПоМОЛИзОстатковЕПСБУ);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ВыборМОЛИзСтоимостиОбъектов]", ТекстВыборМОЛИзСтоимостиОбъектов);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ОтборПоМОЛИзСтоимостиОбъектов]", ТекстОтборПоМОЛИзСтоимостиОбъектов);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ОтборПоКонтрагентуИзОстатковЕПСБУ]", ТекстОтборПоКонтрагентуИзОстатковЕПСБУ);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ОтборПоКонтрагентуИзСтоимостиОбъектов]", ТекстОтборПоКонтрагентуИзСтоимостиОбъектов);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ОтборПоДоговоруИзОстатковЕПСБУ]", ТекстОтборПоДоговоруИзОстатковЕПСБУ);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ОтборПоДоговоруИзСтоимостиОбъектов]", ТекстОтборПоДоговоруИзСтоимостиОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// [5]. Данные для таблицы Инвентаризация
	ТаблицаИнвентаризация = РезультатЗапроса[5 + СдвигИндексаВсехТаблиц].Выгрузить();
	
	ИменаКолонок = Неопределено;
	ИнвентаризацияСервер.Редактирование0504087_СоздатьКолонкиЧисловыхПоказателей(ТаблицаИнвентаризация, ДокументОбъект.Ссылка, ИменаКолонок);
	
	Если ВыбиратьНулевоеКоличество И ЗаменятьНулевоеКоличество Тогда
		ИнвентаризацияСервер.УстановитьКоличествоПоУмолчанию(
		ТаблицаИнвентаризация,
		ИменаКолонок,
		Истина,
		ДокументОбъект["НеЗаполнятьЦену"],
		Истина);
	КонецЕсли;
	
	ИнвентаризацияСервер.Редактирование0504087_РассчитатьРасхождениеВТаблице(ТаблицаИнвентаризация, ИменаКолонок);
	
	Объект.Инвентаризация.Загрузить(ТаблицаИнвентаризация);
	
	// [6]. Данные для таблицы Остатки
	ТаблицаОстатки = РезультатЗапроса[6 + СдвигИндексаВсехТаблиц].Выгрузить();
	
	Если ВыбиратьНулевоеКоличество И ЗаменятьНулевоеКоличество Тогда
		// Для таблицы остатков колонки имеют иные имена
		ИменаКолонок.Вставить("КоличествоУчет", "Количество");
		ИменаКолонок.Вставить("СуммаУчет", "СтоимостьБалансовая");
		
		ИнвентаризацияСервер.УстановитьКоличествоПоУмолчанию(
		ТаблицаОстатки,
		ИменаКолонок);
	КонецЕсли;
	
	Объект.Остатки.Загрузить(ТаблицаОстатки);
	
	// [7]. Данные для таблицы НастройкаПорядка
	Объект.НастройкаПорядка.Загрузить(РезультатЗапроса[7 + СдвигИндексаВсехТаблиц].Выгрузить());
	
КонецПроцедуры

&ИзменениеИКонтроль("ПечатьФормы0504087")
Функция АБК_ПечатьФормы0504087(МассивОбъектов, ОбъектыПечати, ВыводитьФактНаличие)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОС.Ссылка КАК Ссылка,
	|	ИнвентаризацияОС.Номер КАК Номер,
	|	ИнвентаризацияОС.Дата КАК Дата,
	|	ИнвентаризацияОС.Организация,
	|	ИнвентаризацияОС.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	ИнвентаризацияОС.Организация.КодОКПО КАК КодОКПО,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОС.ЦМО ССЫЛКА Справочник.ЦМО
	|			ТОГДА ИнвентаризацияОС.ЦМО.Сотрудник.Контрагент.ЮридическоеФизическоеЛицо.Наименование
	|		КОГДА ИнвентаризацияОС.ЦМО ССЫЛКА Справочник.Сотрудники
	|			ТОГДА ИнвентаризацияОС.ЦМО.Контрагент.ЮридическоеФизическоеЛицо.Наименование
	|	КОНЕЦ КАК ПолноеФИОМОЛ,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОС.ЦМО ССЫЛКА Справочник.ЦМО
	|			ТОГДА ИнвентаризацияОС.ЦМО.Сотрудник
	|		КОГДА ИнвентаризацияОС.ЦМО ССЫЛКА Справочник.Сотрудники
	|			ТОГДА ИнвентаризацияОС.ЦМО
	|	КОНЕЦ КАК ЦМО,
	|	ИнвентаризацияОС.СчетУчета,
	|	ИнвентаризацияОС.СчетУчета.Код КАК СчетУчетаПредставление,
	|	ИнвентаризацияОС.КФО,
	|	ПРЕДСТАВЛЕНИЕ(ИнвентаризацияОС.КФО) КАК КФОПредставление,
	|	ИнвентаризацияОС.КПС,
	|	ИнвентаризацияОС.КПС.Код КАК КПСПредставление,
	|	ИнвентаризацияОС.НомерПриказаИнвентаризации КАК ДокументОснованиеНомер,
	|	ИнвентаризацияОС.ДатаПриказаИнвентаризации КАК ДокументОснованиеДата,
	|	ИнвентаризацияОС.МестоИнвентаризации,
	|	ИнвентаризацияОС.ДатаНачала КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияОС.ДатаОкончания КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияОСИнвентаризация.НомерСтроки КАК Ном,
	#Вставка
	|	ИнвентаризацияОСИнвентаризация.ЦМО КАК ЦМО,
	#КонецВставки
	|	ИнвентаризацияОСИнвентаризация.ОсновноеСредство,
	|	ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НаименованиеПолное КАК НаименованиеНФА,
	|	ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер = ЗНАЧЕНИЕ(Справочник.ИнвентарныеНомераОС.ПустаяСсылка)
	|			ТОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НоменклатурныйНомер
	|		ИНАЧЕ ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.Код
	|	КОНЕЦ КАК НомНомер,
	|	&Штука КАК ЕдиницаИзмерения,
	|	ИнвентаризацияОСИнвентаризация.Цена,
	|	ИнвентаризацияОСИнвентаризация.КоличествоБУ КАК КоличествоП,
	|	ИнвентаризацияОСИнвентаризация.СуммаБУ КАК Сумма,
	|	ИнвентаризацияОС.ДолжностьПредседателяКомиссии,
	|	ИнвентаризацияОС.ФамилияПредседателяКомиссии,
	|	ИнвентаризацияОС.ИмяПредседателяКомиссии,
	|	ИнвентаризацияОС.ОтчествоПредседателяКомиссии,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.КоличествоФУ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоФ,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.СуммаФУ, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаФ,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.КоличествоНедостач, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоН,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.СуммаНедостач, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаН,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.КоличествоИзлишков, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоИ,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.СуммаИзлишков, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаИ,
	|	ИнвентаризацияОС.Подразделение.Наименование КАК НаименованиеПодразделения,
	|	ИнвентаризацияОСИнвентаризация.ОсновноеСредство.Код КАК КодНФА
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС.Инвентаризация КАК ИнвентаризацияОСИнвентаризация
	|		ПО ИнвентаризацияОС.Ссылка = ИнвентаризацияОСИнвентаризация.Ссылка
	|ГДЕ
	|	ИнвентаризацияОС.Ссылка В(&МассивОбъектов)
	|	И ИнвентаризацияОСИнвентаризация.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Номер,
	|	Ном
	|ИТОГИ
	|	СУММА(КоличествоП),
	|	СУММА(Сумма),
	|	СУММА(КоличествоФ),
	|	СУММА(СуммаФ),
	|	СУММА(КоличествоН),
	|	СУММА(СуммаН),
	|	СУММА(КоличествоИ),
	|	СУММА(СуммаИ)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОССоставКомиссии.Ссылка КАК Ссылка,
	|	ИнвентаризацияОССоставКомиссии.НомерСтроки,
	|	ИнвентаризацияОССоставКомиссии.ДолжностьЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ФамилияЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ИмяЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ОтчествоЧленаКомиссии
	|ИЗ
	|	Документ.ИнвентаризацияОС.СоставКомиссии КАК ИнвентаризацияОССоставКомиссии
	|ГДЕ
	|	ИнвентаризацияОССоставКомиссии.Ссылка В(&МассивОбъектов)
	|ИТОГИ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", 		МассивОбъектов); 
	Запрос.УстановитьПараметр("Штука",					"шт.");
	Запрос.УстановитьПараметр("ВыводитьФактНаличие",	ВыводитьФактНаличие);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ИнвентаризационнаяОписьНФА_0504087");
	ОбластьТитул				= Макет.ПолучитьОбласть("Титул");
	ОбластьКомиссия 			= Макет.ПолучитьОбласть("Комиссия");
	ОбластьКонцовкаТитула 		= Макет.ПолучитьОбласть("КонцовкаТитула");
	ОбластьШапка 				= Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока 				= Макет.ПолучитьОбласть("Строка");
	ОбластьПустаяСтрока 		= Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьДопСтрока 			= Макет.ПолучитьОбласть("ДопСтрока");
	ОбластьИтоги 				= Макет.ПолучитьОбласть("Итоги");
	ОбластьИтогоПоСтранице 		= Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьИтогоПоОписиЧисло	= Макет.ПолучитьОбласть("ИтогоПоОписиЧисло");
	ОбластьИтогоПоСтраницеЗаг 	= Макет.ПолучитьОбласть("ИтогоПоСтраницеЗаг");
	ОбластьИтогоПоОписи 		= Макет.ПолучитьОбласть("ИтогоПоОписи");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ИнвентаризацияОС_ПечатьФормы0504087";
	
	// подготовим форматы колонок
	ФорматКолонок = Новый Соответствие;
	Если ВыводитьФактНаличие Тогда
		
		ФорматКолонок.Вставить("КоличествоФ",	"ЧН=-");
		ФорматКолонок.Вставить("СуммаФ",		"ЧДЦ=2; ЧН=-");
		ФорматКолонок.Вставить("КоличествоП",	"ЧН=-");
		ФорматКолонок.Вставить("Сумма",			"ЧДЦ=2; ЧН=-");
		ФорматКолонок.Вставить("КоличествоН",	"ЧН=-");
		ФорматКолонок.Вставить("СуммаН",		"ЧДЦ=2; ЧН=-");
		ФорматКолонок.Вставить("КоличествоИ",	"ЧН=-");
		ФорматКолонок.Вставить("СуммаИ",		"ЧДЦ=2; ЧН=-");
		
	Иначе
		
		ФорматКолонок.Вставить("КоличествоФ",	"");
		ФорматКолонок.Вставить("СуммаФ",		"ЧДЦ=2");
		ФорматКолонок.Вставить("КоличествоП",	"ЧН=-");
		ФорматКолонок.Вставить("Сумма",			"ЧДЦ=2; ЧН=-");
		ФорматКолонок.Вставить("КоличествоН",	"");
		ФорматКолонок.Вставить("СуммаН",		"ЧДЦ=2");
		ФорматКолонок.Вставить("КоличествоИ",	"");
		ФорматКолонок.Вставить("СуммаИ",		"ЧДЦ=2;");
		
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаШапка = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаКомиссия = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаШапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеМОЛ = Новый Структура("СсылкаНаОбъект, Период, Фамилия, Имя, Отчество, НаименованиеПолное, Должность",
		ВыборкаШапка.ЦМО, ВыборкаШапка.Дата);
		Справочники.Сотрудники.ПолучитьДанныеСотрудника(ДанныеМОЛ, Истина);
		
		ОбластьТитул.Параметры.Заполнить(ВыборкаШапка);
		
		РегистрыСведений.НастройкиПечатиПрефиксаНомера.УстановитьНомерДляПечатиВОбластьПечати(ОбластьТитул,"Номер",ВыборкаШапка.Номер,ВыборкаШапка.Ссылка,, Истина);
		
		ПараметрыЗаполнения = Новый Структура(
		"ПолныйНомерСчета, ДатаОписи, ПолноеФИОМОЛ, МолДолжность, МолНаименование",
		ПолныйНомерСчета(	ВыборкаШапка.КПСПредставление,
		ВыборкаШапка.КФОПредставление,
		ВыборкаШапка.СчетУчетаПредставление),
		Формат(ВыборкаШапка.Дата, "ДЛФ=DD"),
		ДанныеМОЛ.НаименованиеПолное,
		ДанныеМОЛ.Должность,
		КорреспондентыКлиентСервер.ФИО(ДанныеМОЛ));
		ОбластьТитул.Параметры.Заполнить(ПараметрыЗаполнения);
		
		ВыборкаКомиссия.Сбросить();
		ВыборкаКомиссия.НайтиСледующий(Новый Структура("Ссылка", ВыборкаШапка.Ссылка));
		
		ОбластьВсяКомиссия = УправлениеОсновнымиСредствами.СформироватьОбластьКомиссия(	ВыборкаШапка, 
		ВыборкаКомиссия.Выбрать(), 
		ОбластьКомиссия, 
		3);
		
		
		ТабличныйДокумент.Вывести(ОбластьТитул);
		ТабличныйДокумент.Вывести(ОбластьВсяКомиссия);
		ТабличныйДокумент.Вывести(ОбластьКонцовкаТитула);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ВыборкаСтроки = ВыборкаШапка.Выбрать(ОбходРезультатаЗапроса.Прямой);
		КоличествоСтрок = ВыборкаСтроки.Количество();
		СтрокНаСтранице 		= 0;
		КоличествоП	= 0;
		СуммаП		= 0;
		КоличествоФ	= 0;
		СуммаФ		= 0;
		КоличествоИ	= 0;
		СуммаИ		= 0;
		КоличествоН	= 0;
		СуммаН		= 0;
		
		ТекущаяСтрока = 0;
		
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
			СтруктураПараметровФ = ЗаполнитьСуммовыеПараметрыОбласти(ВыборкаСтроки, ФорматКолонок);
			ОбластьСтрока.Параметры.Заполнить(СтруктураПараметровФ);
			ТекущаяСтрока = ТекущаяСтрока + 1;
			// проверим вывод
			
			Массив = Новый Массив;
			Массив.Добавить(ОбластьСтрока);
			Массив.Добавить(ОбластьИтогоПоСтранице);
			Если ТекущаяСтрока = КоличествоСтрок Тогда
				Массив.Добавить(ОбластьИтогоПоОписиЧисло);
			КонецЕсли;
			Массив.Добавить(ОбластьИтогоПоСтраницеЗаг);
			Массив.Добавить(ОбластьИтоги);
			Если Не ТабличныйДокумент.ПроверитьВывод(Массив) Тогда
				
				ПараметрыЗаполнения = Новый Структура;
				ПараметрыЗаполнения.Вставить("КоличествоП", КоличествоП);
				ПараметрыЗаполнения.Вставить("Сумма", 		СуммаП);
				ПараметрыЗаполнения.Вставить("КоличествоФ", КоличествоФ);
				ПараметрыЗаполнения.Вставить("СуммаФ", 		СуммаФ);
				ПараметрыЗаполнения.Вставить("КоличествоИ", КоличествоИ);
				ПараметрыЗаполнения.Вставить("СуммаИ", 		СуммаИ);
				ПараметрыЗаполнения.Вставить("КоличествоН", КоличествоН);
				ПараметрыЗаполнения.Вставить("СуммаН", 		СуммаН);
				СтруктураПараметровФ = ЗаполнитьСуммовыеПараметрыОбласти(ПараметрыЗаполнения, ФорматКолонок);
				ОбластьИтогоПоСтранице.Параметры.Заполнить(СтруктураПараметровФ);
				ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
				
				ТабличныйДокумент.Вывести(ОбластьИтогоПоСтраницеЗаг);
				ВывестиИтогиПоСтранице0504087(	ТабличныйДокумент,
				ОбластьИтоги, 
				СтрокНаСтранице,
				КоличествоФ,
				СуммаФ,
				ВыводитьФактНаличие);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапка);
				
				СтрокНаСтранице	= 0;
				КоличествоП		= 0;
				СуммаП			= 0;
				КоличествоФ		= 0;
				СуммаФ			= 0;
				КоличествоИ		= 0;
				СуммаИ			= 0;
				КоличествоН		= 0;
				СуммаН			= 0;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			СтрокНаСтранице 		= СтрокНаСтранице + 1;
			КоличествоП 	= КоличествоП  	+ ВыборкаСтроки.КоличествоП;
			СуммаП			= СуммаП 		+ ВыборкаСтроки.Сумма;
			КоличествоФ 	= КоличествоФ  	+ ВыборкаСтроки.КоличествоФ;
			СуммаФ			= СуммаФ 		+ ВыборкаСтроки.СуммаФ;
			КоличествоИ 	= КоличествоИ  	+ ВыборкаСтроки.КоличествоИ;
			СуммаИ			= СуммаИ 		+ ВыборкаСтроки.СуммаИ;
			КоличествоН 	= КоличествоН  	+ ВыборкаСтроки.КоличествоН;
			СуммаН			= СуммаН 		+ ВыборкаСтроки.СуммаН;
			
		КонецЦикла;
		
		Массив = Новый Массив;
		Массив.Добавить(ОбластьПустаяСтрока);
		Массив.Добавить(ОбластьПустаяСтрока);
		Массив.Добавить(ОбластьИтогоПоСтранице);
		Массив.Добавить(ОбластьИтогоПоОписиЧисло);
		Массив.Добавить(ОбластьИтогоПоСтраницеЗаг);
		Массив.Добавить(ОбластьИтоги);
		
		Пока ТабличныйДокумент.ПроверитьВывод(Массив) Цикл
			ТабличныйДокумент.Вывести(ОбластьПустаяСтрока);
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПустаяСтрока);
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("КоличествоП", КоличествоП);
		ПараметрыЗаполнения.Вставить("Сумма", 		СуммаП);
		ПараметрыЗаполнения.Вставить("КоличествоФ", КоличествоФ);
		ПараметрыЗаполнения.Вставить("СуммаФ", 		СуммаФ);
		ПараметрыЗаполнения.Вставить("КоличествоИ", КоличествоИ);
		ПараметрыЗаполнения.Вставить("СуммаИ", 		СуммаИ);
		ПараметрыЗаполнения.Вставить("КоличествоН", КоличествоН);
		ПараметрыЗаполнения.Вставить("СуммаН", 		СуммаН);
		СтруктураПараметровФ = ЗаполнитьСуммовыеПараметрыОбласти(ПараметрыЗаполнения, ФорматКолонок);
		ОбластьИтогоПоСтранице.Параметры.Заполнить(СтруктураПараметровФ);
		ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
		
		ПараметрыЗаполнения.КоличествоП	= ВыборкаШапка.КоличествоП;
		ПараметрыЗаполнения.Сумма		= ВыборкаШапка.Сумма;
		ПараметрыЗаполнения.КоличествоФ	= ВыборкаШапка.КоличествоФ;
		ПараметрыЗаполнения.СуммаФ		= ВыборкаШапка.СуммаФ;
		ПараметрыЗаполнения.КоличествоИ	= ВыборкаШапка.КоличествоИ;
		ПараметрыЗаполнения.СуммаИ		= ВыборкаШапка.СуммаИ;
		ПараметрыЗаполнения.КоличествоН	= ВыборкаШапка.КоличествоН;
		ПараметрыЗаполнения.СуммаН		= ВыборкаШапка.СуммаН;
		СтруктураПараметровФ = ЗаполнитьСуммовыеПараметрыОбласти(ПараметрыЗаполнения, ФорматКолонок);
		ОбластьИтогоПоОписиЧисло.Параметры.Заполнить(СтруктураПараметровФ);
		ТабличныйДокумент.Вывести(ОбластьИтогоПоОписиЧисло);
		
		ТабличныйДокумент.Вывести(ОбластьИтогоПоСтраницеЗаг);
		ВывестиИтогиПоСтранице0504087(	ТабличныйДокумент,
		ОбластьИтоги, 
		СтрокНаСтранице,
		КоличествоФ,
		СуммаФ,
		ВыводитьФактНаличие);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		
		ТабличныйДокумент.Вывести(ОбластьИтогоПоОписи);
		ВывестиИтогиПоСтранице0504087(	ТабличныйДокумент,
		ОбластьИтоги, 
		КоличествоСтрок,
		ВыборкаШапка.КоличествоФ,
		ВыборкаШапка.СуммаФ,
		ВыводитьФактНаличие);
		ТабличныйДокумент.Вывести(ОбластьДопСтрока);
		ТабличныйДокумент.Вывести(ОбластьВсяКомиссия);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапка.Ссылка);
	КонецЦикла; 
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&ИзменениеИКонтроль("ПечатьИнв1")
Функция АБК_ПечатьИнв1(МассивОбъектов, ОбъектыПечати, ВыводитьФактНаличие)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОС.Ссылка КАК Ссылка,
	|	ИнвентаризацияОС.Номер КАК НомерДокумента,
	|	ИнвентаризацияОС.ДатаИнвентаризации КАК ДатаДокумента,
	|	ИнвентаризацияОС.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	ИнвентаризацияОС.Организация.КодОКПО КАК КодОКПО,
	|	ПРЕДСТАВЛЕНИЕ(ИнвентаризацияОС.Подразделение) КАК НаименованиеПодразделения,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОС.ЦМО ССЫЛКА Справочник.ЦМО
	|			ТОГДА ИнвентаризацияОС.ЦМО.Сотрудник
	|		КОГДА ИнвентаризацияОС.ЦМО ССЫЛКА Справочник.Сотрудники
	|			ТОГДА ИнвентаризацияОС.ЦМО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	КОНЕЦ КАК МОЛСсылка,
	|	ИнвентаризацияОС.НомерПриказаИнвентаризации КАК ДокументОснованиеНомер,
	|	ИнвентаризацияОС.ДатаПриказаИнвентаризации КАК ДокументОснованиеДата,
	|	ИнвентаризацияОС.МестоИнвентаризации КАК МестоИнвентаризации,
	|	ИнвентаризацияОС.ДатаНачала КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияОС.ДатаОкончания КАК ДатаОкончанияИнвентаризации,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОС.СчетУчета В (&Счет01)
	|			ТОГДА ВЫБОР
	|					КОГДА ИнвентаризацияОС.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ИнвентаризацияОС.Контрагент.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|									ТОГДА ВЫРАЗИТЬ(ИнвентаризацияОС.Контрагент.ЮридическоеФизическоеЛицо КАК Справочник.ФизическиеЛица).Наименование
	|								ИНАЧЕ ВЫРАЗИТЬ(ИнвентаризацияОС.Контрагент.ЮридическоеФизическоеЛицо КАК Справочник.ЮридическиеЛица).НаименованиеПолное
	|							КОНЕЦ
	|					ИНАЧЕ """"
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Арендодатель,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОС.СчетУчета В (&Счет01)
	|			ТОГДА ""арендованные""
	|		КОГДА ИнвентаризацияОС.СчетУчета В (&Счет02)
	|			ТОГДА ""на ответственном хранении""
	|		ИНАЧЕ ""в собственности организации""
	|	КОНЕЦ КАК РежимСобственности,
	|	ИнвентаризацияОС.ДолжностьПредседателяКомиссии КАК ДолжностьПредседателяКомиссии,
	|	ИнвентаризацияОС.ФамилияПредседателяКомиссии КАК ФамилияПредседателяКомиссии,
	|	ИнвентаризацияОС.ИмяПредседателяКомиссии КАК ИмяПредседателяКомиссии,
	|	ИнвентаризацияОС.ОтчествоПредседателяКомиссии КАК ОтчествоПредседателяКомиссии
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
	|ГДЕ
	|	ИнвентаризацияОС.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	НомерДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОСИнвентаризация.Ссылка КАК Ссылка,
	#Вставка
	|	ИнвентаризацияОСИнвентаризация.ЦМО КАК ЦМО,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НаименованиеПолное = """"
	|			ТОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.Наименование
	|		ИНАЧЕ ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК ОсновноеСредствоНаименование,
	|	ИнвентаризацияОСИнвентаризация.ОсновноеСредство.Код КАК ОсновноеСредствоКод,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер = ЗНАЧЕНИЕ(Справочник.ИнвентарныеНомераОС.ПустаяСсылка)
	|			ТОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НоменклатурныйНомер
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер)
	|	КОНЕЦ КАК ИнвНомер,
	|	ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.ЗаводскойНомер КАК ЗавНомер,
	|	ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.НомерПаспорта КАК НомерПаспорта,
	|	ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.ДатаВыпуска КАК ДатаВыпуска,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.Наименование ЕСТЬ NULL ТОГДА
	|			""""
	|		КОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.НаименованиеПолное <> """" ТОГДА
	|			ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.НаименованиеПолное
	|		ИНАЧЕ
	|			ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.Наименование
	|	КОНЕЦ																				КАК Изготовитель,
	|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.ОсновноеСредство.Назначение, """")			КАК Назначение,
	|	ИнвентаризацияОСИнвентаризация.КоличествоБУ КАК НаличиеПоДаннымУчета,
	|	ИнвентаризацияОСИнвентаризация.СуммаБУ КАК СтоимостьПоДаннымУчета,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ИнвентаризацияОСИнвентаризация.КоличествоФУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НаличиеФактическое,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие
	|			ТОГДА ИнвентаризацияОСИнвентаризация.СуммаФУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьФактическая,
	|	ИнвентаризацияОСИнвентаризация.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ИнвентаризацияОС.Инвентаризация КАК ИнвентаризацияОСИнвентаризация
	|ГДЕ
	|	ИнвентаризацияОСИнвентаризация.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОССоставКомиссии.Ссылка КАК Ссылка,
	|	ИнвентаризацияОССоставКомиссии.НомерСтроки КАК НомерСтроки,
	|	ИнвентаризацияОССоставКомиссии.ДолжностьЧленаКомиссии КАК ДолжностьЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ФамилияЧленаКомиссии КАК ФамилияЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ИмяЧленаКомиссии КАК ИмяЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ОтчествоЧленаКомиссии КАК ОтчествоЧленаКомиссии
	|ИЗ
	|	Документ.ИнвентаризацияОС.СоставКомиссии КАК ИнвентаризацияОССоставКомиссии
	|ГДЕ
	|	ИнвентаризацияОССоставКомиссии.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов"		, МассивОбъектов);
	Запрос.УстановитьПараметр("ВыводитьФактНаличие"	, ВыводитьФактНаличие);
	Запрос.УстановитьПараметр("Счет01"				, БухгалтерскийУчет.СписокСчетов("01"));
	Запрос.УстановитьПараметр("Счет02"				, БухгалтерскийУчет.СписокСчетов("02"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();	
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ИНВ1");
	Шапка              = Макет.ПолучитьОбласть("Шапка");
	Расписка           = Макет.ПолучитьОбласть("Расписка");
	ПодписьМОЛ         = Макет.ПолучитьОбласть("ПодписьМОЛ");
	Примечание         = Макет.ПолучитьОбласть("Примечание");
	ЗаголовокТаблицы   = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ИтогоПоОписиЧисло  = Макет.ПолучитьОбласть("ИтогоПоОписиЧисло");
	ИтогоПоСтраницеЗаг = Макет.ПолучитьОбласть("ИтогоПоСтраницеЗаг");
	Подсчеты           = Макет.ПолучитьОбласть("Подсчеты");
	Претензии          = Макет.ПолучитьОбласть("Претензии");
	ПолеДаты           = Макет.ПолучитьОбласть("ПолеДаты");
	ПроверкаПодпись    = Макет.ПолучитьОбласть("ПроверкаПодпись");
	ИтогоПоОписи       = Макет.ПолучитьОбласть("ИтогоПоОписи");
	ИтогоПоСтранице		= Макет.ПолучитьОбласть("ИтогоПоСтранице");
	Итоги				= Макет.ПолучитьОбласть("Итоги");
	ОбластьКомиссия		= Макет.ПолучитьОбласть("Комиссия");
	
	ВыводитьДопСведения = ОбщегоНазначенияБГУ.ПолучитьНастройкуБулевоИзМакета(Макет, "ВыводитьДопСведения", Ложь);
	
	Если ВыводитьДопСведения Тогда
		Попытка
			ОбластьЯчейка = Макет.ПолучитьОбласть("ШаблонДопСведений");
			
			ТекстШаблона = СокрЛП(ОбластьЯчейка.Область(1, 1, 1, 1).Текст);
		Исключение
			ТекстШаблона = "";
		КонецПопытки;
		
		ПозицииПолейШаблона = ПолучитьПозицииПолейШаблонаДопСведенийИзМакета(ТекстШаблона);
		
		ВыводитьДопСведения = (ПозицииПолейШаблона.Количество() > 0);
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Инв1";
	
	ПервыйДокумент = Истина;
	ВыборкаШапка = РезультатЗапроса[0].Выбрать();
	ТаблицаИнвентаризация = РезультатЗапроса[1].Выгрузить();
	ВыборкаКомиссия = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ФормСтрКоличПрочерк = "ЧН=-";
	ФормСтрКоличБезПрочерк = "";
	ФормСтрСумПрочерк = "ЧДЦ=2; ЧН=-";
	ФормСтрСумБезПрочерк = "ЧДЦ=2";
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Отбор = Новый Структура("Ссылка", ВыборкаШапка.Ссылка);
		Шапка.Параметры.Заполнить(ВыборкаШапка);
		РегистрыСведений.НастройкиПечатиПрефиксаНомера.УстановитьНомерДляПечатиВОбластьПечати(Шапка,"НомерДокумента",ВыборкаШапка.НомерДокумента,ВыборкаШапка.Ссылка,,Истина);
		ТабличныйДокумент.Вывести(Шапка);
		
		ДанныеМОЛ = Новый Структура("СсылкаНаОбъект, Период, Фамилия, Имя, Отчество, НаименованиеПолное, Должность",
		ВыборкаШапка.МОЛСсылка, ВыборкаШапка.ДатаДокумента);
		Справочники.Сотрудники.ПолучитьДанныеСотрудника(ДанныеМОЛ, Истина);
		
		СтруктураПараметров = Новый Структура("МОЛДолжность,МОЛНаименование", ДанныеМОЛ.Должность, КорреспондентыКлиентСервер.ФИО(ДанныеМОЛ, Истина));
		ПодписьМОЛ.Параметры.Заполнить(СтруктураПараметров);
		
		ТабличныйДокумент.Вывести(Расписка);
		ТабличныйДокумент.Вывести(ПодписьМОЛ);
		ТабличныйДокумент.Вывести(Примечание);
		
		// Выведем разрыв страницы
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//////////////////////////////////////////////////////////////////////
		// 2-я страница формы
		// Выведем заголовок таблицы	
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
		
		ОбщиеИтоги = Новый Структура;
		ОбщиеИтоги.Вставить("НаличиеПоДаннымУчетаПоСтранице",0);
		ОбщиеИтоги.Вставить("СтоимостьПоДаннымУчетаПоСтранице",0);
		ОбщиеИтоги.Вставить("КоличествоПорядковыхНомеров",0);
		ОбщиеИтоги.Вставить("НаличиеФактическоеПоСтранице",0);
		ОбщиеИтоги.Вставить("СтоимостьФактическаяПоСтранице",0);
		ОбщиеИтоги.Вставить("КоличествоФактическое",0);
		ОбщиеИтоги.Вставить("СтоимостьФактическая",0);
		ОбщиеИтоги.Вставить("КоличествоПорядковыхНомеровИтого",0);
		ОбщиеИтоги.Вставить("НаличиеПоДаннымУчетаИтого",0);
		ОбщиеИтоги.Вставить("СтоимостьПоДаннымУчетаИтого",0);
		
		СтрокиДокумента = ТаблицаИнвентаризация.НайтиСтроки(Отбор);
		Для каждого СтрокаОС Из СтрокиДокумента Цикл
			
			СтрокаТаблицы   = Макет.ПолучитьОбласть("СтрокаТаблицы");
			СтрокаТаблицы.Параметры.Заполнить(СтрокаОС);
			СтруктураПараметровФ = Новый Структура;
			СтруктураПараметровФ.Вставить("НаличиеПоДаннымУчета", Формат(СтрокаОС.НаличиеПоДаннымУчета, ФормСтрКоличПрочерк));
			СтруктураПараметровФ.Вставить("СтоимостьПоДаннымУчета", Формат(СтрокаОС.СтоимостьПоДаннымУчета, ФормСтрСумПрочерк));
			Если ВыводитьФактНаличие Тогда
				СтруктураПараметровФ.Вставить("НаличиеФактическое", Формат(СтрокаОС.НаличиеФактическое, ФормСтрКоличПрочерк));
				СтруктураПараметровФ.Вставить("СтоимостьФактическая", Формат(СтрокаОС.СтоимостьФактическая, ФормСтрСумПрочерк));
			Иначе
				СтруктураПараметровФ.Вставить("НаличиеФактическое", Формат(СтрокаОС.НаличиеФактическое, ФормСтрКоличБезПрочерк));
				СтруктураПараметровФ.Вставить("СтоимостьФактическая", Формат(СтрокаОС.СтоимостьФактическая, ФормСтрСумБезПрочерк));
			КонецЕсли;
			СтрокаТаблицы.Параметры.Заполнить(СтруктураПараметровФ);
			
			ОсновноеСредствоНаименованиеПолное = СокрЛП(СтрокаОС.ОсновноеСредствоНаименование) + " " + СокрЛП(СтрокаОС.ОсновноеСредствоКод);
			СтруктураПараметров = Новый Структура("ОсновноеСредствоНаименованиеПолное", ОсновноеСредствоНаименованиеПолное);
			
			СтрокаТаблицы.Параметры.Заполнить(СтруктураПараметров);
			
			Если ВыводитьДопСведения Тогда
				СтрокаДопСведений = СтрокаДопСведенийПоШаблону(ПозицииПолейШаблона, СтрокаОС);
				
				Если Не ПустаяСтрока(СтрокаДопСведений) Тогда
					ЗначенияПараметров = Новый Структура();
					ЗначенияПараметров.Вставить("ОсновноеСредствоНаименование", СтрокаОС.ОсновноеСредствоНаименование + " " + СтрокаДопСведений);
					ЗначенияПараметров.Вставить("ОсновноеСредствоНаименованиеПолное", ОсновноеСредствоНаименованиеПолное + " " + СтрокаДопСведений);
					
					СтрокаТаблицы.Параметры.Заполнить(ЗначенияПараметров);
				КонецЕсли;
			КонецЕсли;
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ИтогоПоСтранице);
			СтрокаСПодвалом.Добавить(ИтогоПоСтраницеЗаг);
			СтрокаСПодвалом.Добавить(Итоги);
			СтрокаСПодвалом.Добавить(ИтогоПоОписиЧисло);
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				ВывестиИтогПоСтранице_Инв1(ТабличныйДокумент, Макет, ОбщиеИтоги, Ложь, ВыводитьФактНаличие);
				
				// Выведем заголовок таблицы	
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(СтрокаТаблицы);
			
			ОбщиеИтоги.НаличиеПоДаннымУчетаПоСтранице   = ОбщиеИтоги.НаличиеПоДаннымУчетаПоСтранице + СтрокаОС.НаличиеПоДаннымУчета;
			ОбщиеИтоги.СтоимостьПоДаннымУчетаПоСтранице = ОбщиеИтоги.СтоимостьПоДаннымУчетаПоСтранице + СтрокаОС.СтоимостьПоДаннымУчета;
			ОбщиеИтоги.КоличествоПорядковыхНомеров      = ОбщиеИтоги.КоличествоПорядковыхНомеров + 1;
			ОбщиеИтоги.НаличиеФактическоеПоСтранице     = ОбщиеИтоги.НаличиеФактическоеПоСтранице + СтрокаОС.НаличиеФактическое;
			ОбщиеИтоги.СтоимостьФактическаяПоСтранице   = ОбщиеИтоги.СтоимостьФактическаяПоСтранице + СтрокаОС.СтоимостьФактическая;
			ОбщиеИтоги.КоличествоФактическое            = ОбщиеИтоги.КоличествоФактическое + СтрокаОС.НаличиеФактическое;
			ОбщиеИтоги.СтоимостьФактическая             = ОбщиеИтоги.СтоимостьФактическая + СтрокаОС.СтоимостьФактическая;
			ОбщиеИтоги.КоличествоПорядковыхНомеровИтого	= ОбщиеИтоги.КоличествоПорядковыхНомеровИтого + 1;
			ОбщиеИтоги.НаличиеПоДаннымУчетаИтого		= ОбщиеИтоги.НаличиеПоДаннымУчетаИтого + СтрокаОС.НаличиеПоДаннымУчета;
			ОбщиеИтоги.СтоимостьПоДаннымУчетаИтого		= ОбщиеИтоги.СтоимостьПоДаннымУчетаИтого + СтрокаОС.СтоимостьПоДаннымУчета;
		КонецЦикла; 
		
		ВывестиИтогПоСтранице_Инв1(ТабличныйДокумент, Макет, ОбщиеИтоги, Истина, ВыводитьФактНаличие);
		
		//////////////////////////////////////////////////////////////////////
		// 3-я страница формы
		
		// Выведем заголовок итогов по описи
		ТабличныйДокумент.Вывести(ИтогоПоОписи);
		
		Итоги = Макет.ПолучитьОбласть("Итоги");
		
		// Выведем итоговые строки
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("КоличествоПорядковыхНомеровПрописью",	ЧислоПрописью(ОбщиеИтоги.КоличествоПорядковыхНомеровИтого,, ",,,м,,,,,0"));
		Если ОбщиеИтоги.КоличествоФактическое <> 0 Тогда
			СтруктураПараметров.Вставить("КоличествоФактическоеПрописью",	ЧислоПрописью(ОбщиеИтоги.КоличествоФактическое,, ",,,ж,,,,,0"));
		Иначе
			СтруктураПараметров.Вставить("КоличествоФактическоеПрописью",	"");
		КонецЕсли;
		Если ОбщиеИтоги.СтоимостьФактическая <> 0 Тогда
			СтруктураПараметров.Вставить("СтоимостьФактическаяПрописью",	ЧислоПрописью(ОбщиеИтоги.СтоимостьФактическая,, "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2"));
		Иначе
			СтруктураПараметров.Вставить("СтоимостьФактическаяПрописью",	"");
		КонецЕсли;
		Итоги.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Итоги);
		
		// Выведем фразу о подсчетах
		ТабличныйДокумент.Вывести(Подсчеты);
		
		ВыборкаКомиссия.Сбросить();
		ВыборкаКомиссия.НайтиСледующий(Новый Структура("Ссылка", ВыборкаШапка.Ссылка));
		ОбластьВсяКомиссия = УправлениеОсновнымиСредствами.СформироватьОбластьКомиссия(	ВыборкаШапка, 
		ВыборкаКомиссия.Выбрать(), 
		ОбластьКомиссия, 
		3);
		ТабличныйДокумент.Вывести(ОбластьВсяКомиссия);
		
		// Выведем раздел об отсутствии претензий МОЛов
		СтруктураПараметров = Новый Структура;
		Если ОбщиеИтоги.КоличествоПорядковыхНомеровИтого > 0 Тогда
			СтруктураПараметров.Вставить("НомерСтрокиНачальный", 1);
			СтруктураПараметров.Вставить("НомерСтрокиКонечный", ОбщиеИтоги.КоличествоПорядковыхНомеровИтого);
		Иначе
			СтруктураПараметров.Вставить("НомерСтрокиНачальный", "______");
			СтруктураПараметров.Вставить("НомерСтрокиКонечный", "______");
		КонецЕсли;
		Претензии.Параметры.Заполнить(СтруктураПараметров);
		
		ТабличныйДокумент.Вывести(Претензии);
		ТабличныйДокумент.Вывести(ПодписьМОЛ);
		// Выведем строку с полем для заполнения даты
		СтруктураПараметров = Новый Структура("Дата", Формат(ВыборкаШапка.ДатаДокумента, "ДЛФ=DD"));
		ПолеДаты.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(ПолеДаты);
		
		ТабличныйДокумент.Вывести(ПроверкаПодпись);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапка.Ссылка);
	КонецЦикла; 
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&ИзменениеИКонтроль("ПечатьИнв1а")
Функция АБК_ПечатьИнв1а(МассивОбъектов, ОбъектыПечати, ВыводитьФактНаличие)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВыводитьФактНаличие", ВыводитьФактНаличие);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// [0]. Даты принятия к учету
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновноеСредство	КАК ОсновноеСредство,
	|	ДатаСобытия			КАК ДатаСобытия,
	|	ИнвНомер			КАК ИнвНомер,
	|	НазваниеДокумента	КАК НазваниеДокумента,
	|	НомерДокумента		КАК НомерДокумента,
	|	ДатаДокумента		КАК ДатаДокумента
	|ПОМЕСТИТЬ
	|	ДатыПринятияКУчету
	|ИЗ
	|	РегистрСведений.СобытияОС.СрезПервых(
	|			,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ИнвентаризацияОСИнвентаризация.ОсновноеСредство
	|					ИЗ
	|						Документ.ИнвентаризацияОС.Инвентаризация КАК ИнвентаризацияОСИнвентаризация
	|					ГДЕ
	|						ИнвентаризацияОСИнвентаризация.Ссылка В (&МассивОбъектов))
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.ВидыСобытийОС.ПринятиеКУчету))
	|ГДЕ
	|	(ОсновноеСредство, ИнвНомер) В
	|			(ВЫБРАТЬ
	|				ИнвентаризацияОСИнвентаризация.ОсновноеСредство,
	|				ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер
	|			ИЗ
	|				Документ.ИнвентаризацияОС.Инвентаризация КАК ИнвентаризацияОСИнвентаризация
	|			ГДЕ
	|				ИнвентаризацияОСИнвентаризация.Ссылка В (&МассивОбъектов))
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ИнвНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [1]. Шапка
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОС_Инвентаризация.Номер								КАК НомерДокумента,
	|	ОС_Инвентаризация.ДатаИнвентаризации				КАК ДатаДокумента,
	|	ОС_Инвентаризация.Организация.НаименованиеПолное	КАК НаименованиеОрганизации,
	|	ПРЕДСТАВЛЕНИЕ(ОС_Инвентаризация.Подразделение)		КАК НаименованиеПодразделения,
	|	ВЫБОР
	|		КОГДА ОС_Инвентаризация.ЦМО ССЫЛКА Справочник.ЦМО
	|			ТОГДА ОС_Инвентаризация.ЦМО.Сотрудник
	|		ИНАЧЕ ОС_Инвентаризация.ЦМО
	|	КОНЕЦ												КАК МОЛСсылка,
	|	ОС_Инвентаризация.НомерПриказаИнвентаризации		КАК ДокументОснованиеНомер,
	|	ОС_Инвентаризация.ДатаПриказаИнвентаризации			КАК ДокументОснованиеДата,
	|	ОС_Инвентаризация.МестоИнвентаризации				КАК МестоИнвентаризации,
	|	ОС_Инвентаризация.ДатаНачала						КАК ДатаНачалаИнвентаризации,
	|	ОС_Инвентаризация.ДатаОкончания						КАК ДатаОкончанияИнвентаризации,
	|	ОС_Инвентаризация.ДолжностьПредседателяКомиссии		КАК ДолжностьПредседателяКомиссии,
	|	ОС_Инвентаризация.ФамилияПредседателяКомиссии		КАК ФамилияПредседателяКомиссии,
	|	ОС_Инвентаризация.ИмяПредседателяКомиссии			КАК ИмяПредседателяКомиссии,
	|	ОС_Инвентаризация.ОтчествоПредседателяКомиссии		КАК ОтчествоПредседателяКомиссии,
	|	ОС_Инвентаризация.Ссылка							КАК Ссылка,
	|	ОС_Инвентаризация.Организация.КодОКПО				КАК КодОКПО
	|ИЗ
	|	Документ.ИнвентаризацияОС КАК ОС_Инвентаризация
	|ГДЕ
	|	ОС_Инвентаризация.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	НомерДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [2]. Таблица
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОСИнвентаризация.Ссылка						КАК Ссылка,
	#Вставка
	|	ИнвентаризацияОСИнвентаризация.ЦМО							КАК ЦМО,
	#КонецВставки
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НаименованиеПолное = """" ТОГДА
	|			ИнвентаризацияОСИнвентаризация.ОсновноеСредство.Наименование
	|		ИНАЧЕ
	|			ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ														КАК НМАНаименование,
	|	ИнвентаризацияОСИнвентаризация.ОсновноеСредство.Код			КАК НМАКод,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер = ЗНАЧЕНИЕ(Справочник.ИнвентарныеНомераОС.ПустаяСсылка) ТОГДА
	|			ИнвентаризацияОСИнвентаризация.ОсновноеСредство.НоменклатурныйНомер
	|		ИНАЧЕ
	|			ПРЕДСТАВЛЕНИЕ(ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер)
	|	КОНЕЦ														КАК ИнвНомер,
	|	ИнвентаризацияОСИнвентаризация.СуммаБУ						КАК СтоимостьПоДаннымУчета,
	|	ВЫБОР
	|		КОГДА &ВыводитьФактНаличие ТОГДА
	|			ИнвентаризацияОСИнвентаризация.СуммаФУ
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ														КАК СтоимостьФактическая,
	|	ИнвентаризацияОСИнвентаризация.НомерСтроки					КАК НомерСтроки,
	|	ДатыПринятияКУчету.ДатаСобытия								КАК ДатаВвода,
	|	
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.Наименование ЕСТЬ NULL ТОГДА
	|			""""
	|		КОГДА ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.НаименованиеПолное <> """" ТОГДА
	|			ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.НаименованиеПолное
	|		ИНАЧЕ
	|			ИнвентаризацияОСИнвентаризация.ОсновноеСредство.ИзготовительОС.Наименование
	|	КОНЕЦ																				КАК Изготовитель,
	|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.ОсновноеСредство.Назначение, """")			КАК Назначение,
	|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.ЗаводскойНомер, """")		КАК ЗаводскойНомер,
	|	ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.ДатаВыпуска, &ПустаяДата)	КАК ДатаВыпуска,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.ДатаВыпуска, &ПустаяДата) = &ПустаяДата ТОГДА
	|			""""
	|		ИНАЧЕ
	|			СтрЗаменить(СТРОКА(ГОД(ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер.ДатаВыпуска)), "" "", """")
	|	КОНЕЦ																				КАК ГодВыпуска
	|ИЗ
	|	Документ.ИнвентаризацияОС.Инвентаризация КАК ИнвентаризацияОСИнвентаризация
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДатыПринятияКУчету КАК ДатыПринятияКУчету
	|		ПО ИнвентаризацияОСИнвентаризация.ОсновноеСредство = ДатыПринятияКУчету.ОсновноеСредство
	|		И ИнвентаризацияОСИнвентаризация.ИнвентарныйНомер = ДатыПринятияКУчету.ИнвНомер
	|ГДЕ
	|	ИнвентаризацияОСИнвентаризация.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [3]. Состав комиссии
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОССоставКомиссии.Ссылка					КАК Ссылка,
	|	ИнвентаризацияОССоставКомиссии.НомерСтроки				КАК НомерСтроки,
	|	ИнвентаризацияОССоставКомиссии.ДолжностьЧленаКомиссии	КАК ДолжностьЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ФамилияЧленаКомиссии		КАК ФамилияЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ИмяЧленаКомиссии			КАК ИмяЧленаКомиссии,
	|	ИнвентаризацияОССоставКомиссии.ОтчествоЧленаКомиссии	КАК ОтчествоЧленаКомиссии
	|ИЗ
	|	Документ.ИнвентаризацияОС.СоставКомиссии КАК ИнвентаризацияОССоставКомиссии
	|ГДЕ
	|	ИнвентаризацияОССоставКомиссии.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();	
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ИНВ1а");
	Шапка              = Макет.ПолучитьОбласть("Шапка");
	Расписка           = Макет.ПолучитьОбласть("Расписка");
	ПодписьМОЛ         = Макет.ПолучитьОбласть("ПодписьМОЛ");
	ЗаголовокТаблицы   = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ИтогоПоСтранице    = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ИтогоПоСтраницеЗаг = Макет.ПолучитьОбласть("ИтогоПоСтраницеЗаг");
	Итоги              = Макет.ПолучитьОбласть("Итоги");
	ИтогоПоОписиЧисло  = Макет.ПолучитьОбласть("ИтогоПоОписиЧисло");
	ИтогоПоОписи       = Макет.ПолучитьОбласть("ИтогоПоОписи");
	Подсчеты           = Макет.ПолучитьОбласть("Подсчеты");
	ОбластьКомиссия	   = Макет.ПолучитьОбласть("Комиссия");
	Претензии          = Макет.ПолучитьОбласть("Претензии");
	ПолеДаты           = Макет.ПолучитьОбласть("ПолеДаты");
	ПроверкаПодпись    = Макет.ПолучитьОбласть("ПроверкаПодпись");
	
	ВыводитьДопСведения = ОбщегоНазначенияБГУ.ПолучитьНастройкуБулевоИзМакета(Макет, "ВыводитьДопСведения", Ложь);
	
	Если ВыводитьДопСведения Тогда
		Попытка
			ОбластьЯчейка = Макет.ПолучитьОбласть("ШаблонДопСведений");
			
			ТекстШаблона = СокрЛП(ОбластьЯчейка.Область(1, 1, 1, 1).Текст);
		Исключение
			ТекстШаблона = "";
		КонецПопытки;
		
		ПозицииПолейШаблона = ПолучитьПозицииПолейШаблонаДопСведенийИзМакета(ТекстШаблона);
		
		ВыводитьДопСведения = (ПозицииПолейШаблона.Количество() > 0);
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Инв1а";
	
	ФормСтрСумПрочерк = "ЧДЦ=2; ЧН=-";
	ФормСтрСумБезПрочерк = "ЧДЦ=2";
	
	ПервыйДокумент = Истина;
	ВыборкаШапка = РезультатЗапроса[1].Выбрать();
	ТаблицаИнвентаризация = РезультатЗапроса[2].Выгрузить();
	ВыборкаКомиссия = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаШапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Отбор = Новый Структура("Ссылка", ВыборкаШапка.Ссылка);
		Шапка.Параметры.Заполнить(ВыборкаШапка);
		РегистрыСведений.НастройкиПечатиПрефиксаНомера.УстановитьНомерДляПечатиВОбластьПечати(Шапка,"НомерДокумента",ВыборкаШапка.НомерДокумента,ВыборкаШапка.Ссылка,,Истина);
		ТабличныйДокумент.Вывести(Шапка);
		
		ДанныеМОЛ = Новый Структура("СсылкаНаОбъект, Период, Фамилия, Имя, Отчество, НаименованиеПолное, Должность",
		ВыборкаШапка.МОЛСсылка, ВыборкаШапка.ДатаДокумента);
		Справочники.Сотрудники.ПолучитьДанныеСотрудника(ДанныеМОЛ, Истина);
		
		СтруктураПараметров = Новый Структура("МОЛДолжность,МОЛНаименование", ДанныеМОЛ.Должность, КорреспондентыКлиентСервер.ФИО(ДанныеМОЛ, Истина));
		ПодписьМОЛ.Параметры.Заполнить(СтруктураПараметров);
		
		// Выведем расписку МОЛ 
		ТабличныйДокумент.Вывести(Расписка);
		ТабличныйДокумент.Вывести(ПодписьМОЛ);
		
		// Выведем разрыв страницы
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//////////////////////////////////////////////////////////////////////
		// 2-я страница формы
		// Выведем заголовок таблицы	
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
		
		ОбщиеИтоги = Новый Структура;
		ОбщиеИтоги.Вставить("НаличиеПоДаннымУчетаПоСтранице",0);
		ОбщиеИтоги.Вставить("СтоимостьПоДаннымУчетаПоСтранице",0);
		ОбщиеИтоги.Вставить("КоличествоПорядковыхНомеров",0);
		ОбщиеИтоги.Вставить("НаличиеФактическоеПоСтранице",0);
		ОбщиеИтоги.Вставить("СтоимостьФактическаяПоСтранице",0);
		ОбщиеИтоги.Вставить("КоличествоФактическое",0);
		ОбщиеИтоги.Вставить("СтоимостьФактическая",0);
		ОбщиеИтоги.Вставить("КоличествоПорядковыхНомеровИтого",0);
		ОбщиеИтоги.Вставить("НаличиеПоДаннымУчетаИтого",0);
		ОбщиеИтоги.Вставить("СтоимостьПоДаннымУчетаИтого",0);
		
		СтрокиДокумента = ТаблицаИнвентаризация.НайтиСтроки(Отбор);
		Для каждого СтрокаОС Из СтрокиДокумента Цикл
			
			СтрокаТаблицы   = Макет.ПолучитьОбласть("СтрокаТаблицы");
			СтрокаТаблицы.Параметры.Заполнить(СтрокаОС);
			СтруктураПараметровФ = Новый Структура;
			СтруктураПараметровФ.Вставить("СтоимостьПоДаннымУчета", Формат(СтрокаОС.СтоимостьПоДаннымУчета, ФормСтрСумПрочерк));
			Если ВыводитьФактНаличие Тогда
				СтруктураПараметровФ.Вставить("СтоимостьФактическая", Формат(СтрокаОС.СтоимостьФактическая, ФормСтрСумПрочерк));
			Иначе
				СтруктураПараметровФ.Вставить("СтоимостьФактическая", Формат(СтрокаОС.СтоимостьФактическая, ФормСтрСумБезПрочерк));
			КонецЕсли;
			СтрокаТаблицы.Параметры.Заполнить(СтруктураПараметровФ);
			
			НМАНаименованиеПолное = СокрЛП(СтрокаОС.НМАНаименование) + " " + СокрЛП(СтрокаОС.НМАКод);
			
			СтруктураПараметров = Новый Структура("НМАНаименованиеПолное", НМАНаименованиеПолное);
			СтрокаТаблицы.Параметры.Заполнить(СтруктураПараметров);
			
			Если ВыводитьДопСведения Тогда
				СтрокаДопСведений = СтрокаДопСведенийПоШаблону(ПозицииПолейШаблона, СтрокаОС);
				
				Если Не ПустаяСтрока(СтрокаДопСведений) Тогда
					ЗначенияПараметров = Новый Структура();
					ЗначенияПараметров.Вставить("НМАНаименование", СтрокаОС.НМАНаименование + " " + СтрокаДопСведений);
					ЗначенияПараметров.Вставить("НМАНаименованиеПолное", НМАНаименованиеПолное + " " + СтрокаДопСведений);
					
					СтрокаТаблицы.Параметры.Заполнить(ЗначенияПараметров);
				КонецЕсли;
			КонецЕсли;
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ИтогоПоСтранице);
			СтрокаСПодвалом.Добавить(ИтогоПоСтраницеЗаг);
			СтрокаСПодвалом.Добавить(Итоги);
			СтрокаСПодвалом.Добавить(ИтогоПоОписиЧисло);
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				ВывестиИтогПоСтранице_Инв1(ТабличныйДокумент, Макет, ОбщиеИтоги, Ложь, ВыводитьФактНаличие);
				
				// Выведем заголовок таблицы	
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(СтрокаТаблицы);
			
			ОбщиеИтоги.СтоимостьПоДаннымУчетаПоСтранице = ОбщиеИтоги.СтоимостьПоДаннымУчетаПоСтранице + СтрокаОС.СтоимостьПоДаннымУчета;
			ОбщиеИтоги.КоличествоПорядковыхНомеров      = ОбщиеИтоги.КоличествоПорядковыхНомеров + 1;
			ОбщиеИтоги.СтоимостьФактическаяПоСтранице   = ОбщиеИтоги.СтоимостьФактическаяПоСтранице + СтрокаОС.СтоимостьФактическая;
			ОбщиеИтоги.СтоимостьФактическая             = ОбщиеИтоги.СтоимостьФактическая + СтрокаОС.СтоимостьФактическая;
			ОбщиеИтоги.КоличествоПорядковыхНомеровИтого	= ОбщиеИтоги.КоличествоПорядковыхНомеровИтого + 1;
			ОбщиеИтоги.СтоимостьПоДаннымУчетаИтого		= ОбщиеИтоги.СтоимостьПоДаннымУчетаИтого + СтрокаОС.СтоимостьПоДаннымУчета;
		КонецЦикла; 
		
		ВывестиИтогПоСтранице_Инв1(ТабличныйДокумент, Макет, ОбщиеИтоги, Истина, ВыводитьФактНаличие);
		
		//////////////////////////////////////////////////////////////////////
		// 3-я страница формы
		
		// Выведем заголовок итогов по описи
		ТабличныйДокумент.Вывести(ИтогоПоОписи);
		
		Итоги = Макет.ПолучитьОбласть("Итоги");
		
		// Выведем итоговые строки
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("КоличествоПорядковыхНомеровПрописью",	ЧислоПрописью(ОбщиеИтоги.КоличествоПорядковыхНомеровИтого,, ",,,м,,,,,0"));
		Если ОбщиеИтоги.СтоимостьФактическая <> 0 Тогда
			СтруктураПараметров.Вставить("СтоимостьФактическаяПрописью",	ЧислоПрописью(ОбщиеИтоги.СтоимостьФактическая,, "рубль,рубля,рублей,м,копейка,копейки,копеек,ж,2"));
		Иначе
			СтруктураПараметров.Вставить("СтоимостьФактическаяПрописью",	"");
		КонецЕсли;
		Итоги.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Итоги);
		
		// Выведем фразу о подсчетах
		ТабличныйДокумент.Вывести(Подсчеты);
		
		ВыборкаКомиссия.Сбросить();
		ВыборкаКомиссия.НайтиСледующий(Новый Структура("Ссылка", ВыборкаШапка.Ссылка));
		ОбластьВсяКомиссия = УправлениеОсновнымиСредствами.СформироватьОбластьКомиссия(	ВыборкаШапка, 
		ВыборкаКомиссия.Выбрать(), 
		ОбластьКомиссия, 
		3);
		ТабличныйДокумент.Вывести(ОбластьВсяКомиссия);
		
		// Выведем раздел об отсутствии претензий МОЛов
		СтруктураПараметров = Новый Структура;
		Если ОбщиеИтоги.КоличествоПорядковыхНомеровИтого > 0 Тогда
			СтруктураПараметров.Вставить("НомерСтрокиНачальный", 1);
			СтруктураПараметров.Вставить("НомерСтрокиКонечный", ОбщиеИтоги.КоличествоПорядковыхНомеровИтого);
		Иначе
			СтруктураПараметров.Вставить("НомерСтрокиНачальный", "______");
			СтруктураПараметров.Вставить("НомерСтрокиКонечный", "______");
		КонецЕсли;
		Претензии.Параметры.Заполнить(СтруктураПараметров);
		
		ТабличныйДокумент.Вывести(Претензии);
		ТабличныйДокумент.Вывести(ПодписьМОЛ);
		// Выведем строку с полем для заполнения даты
		СтруктураПараметров = Новый Структура("Дата", Формат(ВыборкаШапка.ДатаДокумента, "ДЛФ=DD"));
		ПолеДаты.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(ПолеДаты);
		
		ТабличныйДокумент.Вывести(ПроверкаПодпись);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапка.Ссылка);
	КонецЦикла; 
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&ИзменениеИКонтроль("Печать0504087_194н_ПолучитьВыборкиДляПечати")
Функция АБК_Печать0504087_194н_ПолучитьВыборкиДляПечати(МассивОбъектов)
	
	НаДату = Неопределено;
	
	ЗапросПечать = Новый Запрос;
	ЗапросПечать.УстановитьПараметр("МассивСсылок",	МассивОбъектов);
	ЗапросПечать.УстановитьПараметр("Штука",		"шт.");
	ЗапросПечать.УстановитьПараметр("Счета11140",	БухгалтерскийУчет.СписокСчетов("111.40", НаДату));
	ЗапросПечать.Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// [0]. Шапки документов
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка							КАК ДокументСсылка,
	|	Номер							КАК Номер,
	|	Дата 							КАК Дата,
	|	Организация						КАК Организация,
	|	Организация.НаименованиеПолное	КАК НаименованиеОрганизации,
	|	Подразделение.Наименование		КАК НаименованиеПодразделения,
	|	Организация.КодОКПО				КАК КодОКПО,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЦМО) = ТИП(Справочник.ЦМО) ТОГДА
	|			ЦМО.Сотрудник
	|		ИНАЧЕ
	|			ЦМО
	|	КОНЕЦ							КАК МОЛ,
	|	СчетУчета.Забалансовый			КАК СчетЗабалансовый,
	|
	|	НомерПриказаИнвентаризации		КАК ДокументОснованиеНомер,
	|	ДатаПриказаИнвентаризации		КАК ДокументОснованиеДата,
	|	МестоИнвентаризации				КАК МестоИнвентаризации,
	|	ДатаНачала						КАК ДатаНачалаИнвентаризации,
	|	ДатаОкончания					КАК ДатаОкончанияИнвентаризации,
	|	ДатаИнвентаризации				КАК ДатаИнвентаризации,
	|
	|	ДолжностьПредседателяКомиссии	КАК ДолжностьПредседателяКомиссии,
	|	ФамилияПредседателяКомиссии		КАК ФамилияПредседателяКомиссии,
	|	ИмяПредседателяКомиссии			КАК ИмяПредседателяКомиссии,
	|	ОтчествоПредседателяКомиссии	КАК ОтчествоПредседателяКомиссии,
	|	ОбъяснениеПричинРасхождений		КАК ОбъяснениеПричинРасхождений,
	|	ЗаключениеКомиссии				КАК ЗаключениеКомиссии,
	|	ДатаПодписиМОЛ					КАК ДатаПодписиМОЛ,
	|	ДатаПодписиКомиссии				КАК ДатаПодписиКомиссии,
	|	
	|	ВариантФормированияОписи		КАК ВариантФормированияОписи,
	|	(СчетУчета В(&Счета11140))		КАК ЭтоИнвентаризация11140
	|ИЗ
	|	Документ.ИнвентаризацияОС
	|ГДЕ
	|	Ссылка В (&МассивСсылок)
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [1]. Инвентаризационные комиссии
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка					КАК ДокументСсылка,
	|	ДолжностьЧленаКомиссии	КАК ДолжностьЧленаКомиссии,
	|	ФамилияЧленаКомиссии	КАК ФамилияЧленаКомиссии,
	|	ИмяЧленаКомиссии		КАК ИмяЧленаКомиссии,
	|	ОтчествоЧленаКомиссии	КАК ОтчествоЧленаКомиссии
	|ИЗ
	|	Документ.ИнвентаризацияОС.СоставКомиссии
	|ГДЕ
	|	Ссылка В (&МассивСсылок)
	|ИТОГИ ПО
	|	// Обязательно первые итоги по ссылке на документ
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [2]. Таблицы НФА
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка											КАК ДокументСсылка,
	|	НомерСтроки										КАК Ном,
	#Вставка
	|	ЦМО												КАК ЦМО,
	#КонецВставки
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ОсновноеСредство.НаименованиеПолное <> """" ТОГДА
	|			ОсновноеСредство.НаименованиеПолное
	|		ИНАЧЕ
	|			ОсновноеСредство.Наименование
	|	КОНЕЦ, """")										КАК НаименованиеНФА,
	|	
	|	ЕСТЬNULL(ИнвентарныйНомер.Код, """")					КАК ИнвентарныйНомер,
	|	ЕСТЬNULL(ОсновноеСредство.НоменклатурныйНомер, """")	КАК НоменклатурныйНомер,
	|	ЕСТЬNULL(ОсновноеСредство.Код, """")					КАК КодЭлемента,
	|	ИСТИНА												КАК НФАЭтоОС,
	|	
	|	ЕСТЬNULL(ВЫРАЗИТЬ(Договор.Наименование КАК СТРОКА(150)),	"""")		КАК ДоговорНаименование,
	|	ВЫБОР
	|		КОГДА ЕдИзм <> ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка) ТОГДА
	|			ЕдИзм
	|		ИНАЧЕ
	|			&Штука
	|	КОНЕЦ											КАК ЕдиницаИзмерения,
	|	Цена											КАК Цена,
	|	
	|	КоличествоБУ									КАК КоличествоБ,
	|	СуммаБУ											КАК СуммаБ,
	|	
	|	КоличествоФУ									КАК КоличествоФ,
	|	СуммаФУ											КАК СуммаФ,
	|	
	|	КоличествоНедостач								КАК КоличествоН,
	|	СуммаНедостач									КАК СуммаН,
	|	
	|	КоличествоИзлишков								КАК КоличествоИ,
	|	СуммаИзлишков									КАК СуммаИ,
	|	
	|	СтатусОбъекта									КАК СтатусОбъекта,
	|	ЦелеваяФункцияАктива							КАК ЦелеваяФункция,
	|	
	|	ПРЕДСТАВЛЕНИЕ(КФО)								КАК КФО,
	|	КПС.Представление								КАК КПС,
	|	Счет.Представление								КАК Счет,
	|	
	|	КоличествоНеСоответствует						КАК КоличествоНА,
	|	СуммаНеСоответствует							КАК СуммаНА,
	|	Примечание										КАК Примечание
	|ИЗ
	|	Документ.ИнвентаризацияОС.Инвентаризация
	|ГДЕ
	|	Ссылка В (&МассивСсылок)
	|УПОРЯДОЧИТЬ ПО
	|	ДокументСсылка,
	|	Ном
	|ИТОГИ
	|	СУММА(СуммаБ)		КАК СуммаБ,
	|	СУММА(СуммаФ)		КАК СуммаФ,
	|	СУММА(СуммаН)		КАК СуммаН,
	|	СУММА(СуммаИ)		КАК СуммаИ,
	|	СУММА(СуммаНА)		КАК СуммаНА,
	|	СУММА(КоличествоБ)	КАК КоличествоБ,
	|	СУММА(КоличествоФ)	КАК КоличествоФ,
	|	СУММА(КоличествоН)	КАК КоличествоН,
	|	СУММА(КоличествоИ)	КАК КоличествоИ,
	|	СУММА(КоличествоНА)	КАК КоличествоНА
	|ПО
	|	// Обязательно первые итоги по ссылке на документ
	| 	ДокументСсылка
	|;";
	
	Результаты = ЗапросПечать.ВыполнитьПакет();
	
	ВыборкиДляПечати = Новый Структура();
	
	// [0]. Шапки документов	
	ВыборкиДляПечати.Вставить("Шапка", Результаты[0].Выбрать());
	
	// [1]. Инвентаризационные комиссии
	ВыборкиДляПечати.Вставить("ДокументКомиссия", Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	
	// [2]. Таблицы НФА
	ВыборкиДляПечати.Вставить("ДокументТаблицаНФА", Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	
	Возврат ВыборкиДляПечати;
	
КонецФункции

Функция ПолучитьЦМОСчета(Счет, ДатаИнвентаризации)
	
	ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ЦМО;
	
	СчетаСКонтрагентами = Новый Массив;
	СчетаСКонтрагентами.Добавить(ПланыСчетов.ЕПСБУ.НайтиПоКоду("24"));
	СчетаСКонтрагентами.Добавить(ПланыСчетов.ЕПСБУ.НайтиПоКоду("25"));
	СчетаСКонтрагентами.Добавить(ПланыСчетов.ЕПСБУ.НайтиПоКоду("26"));             
	СчетаСКонтрагентами.Добавить(ПланыСчетов.ЕПСБУ.НайтиПоКоду("27.01"));
	
	Если СчетаСКонтрагентами.Найти(Счет) <> Неопределено Тогда 
		ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ДатаИнвентаризации); 
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("ВидСубконто", ВидСубконто);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЖурналПроводокЕПСБУОстатки.Субконто1 КАК Субконто1
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Остатки(&Период, Счет В ИЕРАРХИИ (&Счет), &ВидСубконто, ) КАК ЖурналПроводокЕПСБУОстатки";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() Тогда 
		Возврат Результат.ВыгрузитьКолонку("Субконто1");
	КонецЕсли;
	
	Возврат Новый Массив;
	
КонецФункции // ПолучитьЦМОСчета()

