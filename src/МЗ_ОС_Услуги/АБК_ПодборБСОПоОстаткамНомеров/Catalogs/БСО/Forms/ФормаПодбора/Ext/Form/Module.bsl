
&НаСервере
Процедура АБК_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПодборПоНомерам", ПодборПоНомерам) И ПодборПоНомерам Тогда     
		
		Элементы.ТекстНастройка.Заголовок = "Настройки подбора"; 
		ТекстНастройка = ПредставлениеНастройкиОтбора(ЭтаФорма);
		
		Параметры.Свойство("ДокументПодбора", ДокументПодбора);
		
		ЭлементКнопка_ОбновитьОстаткиНомеровБСО = Элементы.Вставить("СписокОбновитьОстаткиНомеровБСО", Тип("КнопкаФормы"), Элементы.Группа1); 
		ЭлементКнопка_ОбновитьОстаткиНомеровБСО.Вид = ВидКнопкиФормы.ОбычнаяКнопка; 
		ЭлементКнопка_ОбновитьОстаткиНомеровБСО.Доступность = Истина;
		ЭлементКнопка_ОбновитьОстаткиНомеровБСО.ИмяКоманды = "ОбновитьОстаткиНомеровБСО";
		
		ОбновитьОстаткиБСОПоДаннымИнвентаризации();
		
	КонецЕсли; 
	
КонецПроцедуры  

#Область ОстаткиБСО     

&НаСервере
Процедура ОбновитьОстаткиБСОПоДаннымИнвентаризации()
	
	ПараметрыПроцедуры = Новый Структура(); 
	ПараметрыПроцедуры.Вставить("ДатаИнвентаризации", 	ДатаОстатков);
	ПараметрыПроцедуры.Вставить("Организация", 			Организация);
	ПараметрыПроцедуры.Вставить("Подразделение", 		Подразделение);
	ПараметрыПроцедуры.Вставить("ЦМО",					ЦМО);
	ПараметрыПроцедуры.Вставить("ИФО",					ИФО);
	ПараметрыПроцедуры.Вставить("КФО",					КФО);
    ПараметрыПроцедуры.Вставить("ДокументПодбора",		ДокументПодбора);
	ПараметрыПроцедуры.Вставить("БезУчетаИФО",			Ложь);
	ПараметрыПроцедуры.Вставить("СчетУчетаБСО", 		СчетУчета);
	
	ТаблицаОстатков = Новый ТаблицаЗначений;
	ТаблицаОстатков.Колонки.Добавить("БСО", 				Новый ОписаниеТипов("СправочникСсылка.БСО"));
	ТаблицаОстатков.Колонки.Добавить("СерияБСО", 			Новый ОписаниеТипов("СправочникСсылка.СерииБСО"));
	ТаблицаОстатков.Колонки.Добавить("Количество", 			Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(20)));
	ТаблицаОстатков.Колонки.Добавить("НомерНачальный", 		Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(20)));
	ТаблицаОстатков.Колонки.Добавить("НомерКонечный",		Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(20))); 
	
	ПараметрыПроцедуры.Вставить("ТабличнаяЧасть", ТаблицаОстатков);
	
	АдресОстатковБСО = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ПолучитьОстатки_БСО(ПараметрыПроцедуры, АдресОстатковБСО);	   
	
КонецПроцедуры

Процедура ПолучитьОстатки_БСО(ПараметрыПроцедуры, АдресХранилища) Экспорт
	
	ПараметрыПоиска = ПолучитьПараметрыПоискаБСО(ПараметрыПроцедуры);
	
	ЗапросОстатки = Новый Запрос();
	ЗапросОстатки.УстановитьПараметр("ДатаОстатков",							ПараметрыПоиска.ДатаОстатков);
	ЗапросОстатки.УстановитьПараметр("ДатаСрезаОстатков",						Новый Граница(ПараметрыПоиска.ДатаОстатков, ВидГраницы.Исключая));
	ЗапросОстатки.УстановитьПараметр("Организация",								ПараметрыПоиска.Организация);
	ЗапросОстатки.УстановитьПараметр("ИспользоватьОтборПоЦМО",					ПараметрыПоиска.ИспользоватьОтборПоЦМО);
	ЗапросОстатки.УстановитьПараметр("ЦМО",										ПараметрыПоиска.ЦМО);
	ЗапросОстатки.УстановитьПараметр("ИспользоватьОтборПоСчету",				ПараметрыПоиска.ИспользоватьОтборПоСчету);
	ЗапросОстатки.УстановитьПараметр("Счет",									ПараметрыПоиска.Счет);
	ЗапросОстатки.УстановитьПараметр("ИспользоватьОтборПоИФО",					ПараметрыПоиска.ИспользоватьОтборПоИФО);
	ЗапросОстатки.УстановитьПараметр("ИФО",										ПараметрыПоиска.ИФО);     
	// Апогей БК
	ЗапросОстатки.УстановитьПараметр("КФО",										ПараметрыПроцедуры.КФО);
	ЗапросОстатки.УстановитьПараметр("ДокументПодбора",						ПараметрыПроцедуры.ДокументПодбора);	
	//
	ЗапросОстатки.УстановитьПараметр("Подразделение",							ПараметрыПоиска.Подразделение);
	ЗапросОстатки.УстановитьПараметр("ИспользоватьУчетПоПодразделениям",		ПараметрыПоиска.ИспользоватьУчетПоПодразделениям);
	ЗапросОстатки.УстановитьПараметр("ИспользоватьОтборПоОдномуПодразделению",	ПараметрыПоиска.ИспользоватьОтборПоОдномуПодразделению);
	
	ЗапросОстатки.Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// [0]. Обособленные подразделения, которые ведут собственные кассовые книги
	|//
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Ссылка	КАК Ссылка
	|ПОМЕСТИТЬ
	|	ОбособленныеПодразделения
	|ИЗ
	|	Справочник.Подразделения
	|ГДЕ
	|	Владелец = &Организация
	|	И	ОбособленноеПодразделение
	|	И	ВедетсяКассоваяКнига
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [1]. Остатки бланков
	|//
	|ВЫБРАТЬ
	|	БСО			КАК БСО,
	|	СерияБСО	КАК СерияБСО
	|ПОМЕСТИТЬ
	|	ОстаткиБланков
	|ИЗ
	|	РегистрНакопления.ДвиженияБСО.Остатки(
	|		&ДатаОстатков,
	|		// Одинаковый отбор с поиском движений
	|		Организация = &Организация
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоИФО ТОГДА
	|				ИФО = &ИФО
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ 
	// Апогей БК
	|		И КФО = &КФО
	// 
	|		И ВЫБОР
	|			КОГДА &ИспользоватьУчетПоПодразделениям И СчетУчета.УчетПоПодразделениям И &ИспользоватьОтборПоОдномуПодразделению ТОГДА
	|				Подразделение = &Подразделение
	|			КОГДА &ИспользоватьУчетПоПодразделениям И СчетУчета.УчетПоПодразделениям И НЕ &ИспользоватьОтборПоОдномуПодразделению ТОГДА
	|				Подразделение НЕ В (ВЫБРАТЬ Ссылка ИЗ ОбособленныеПодразделения)
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоЦМО ТОГДА
	|				ЦМО В(&ЦМО)
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|		И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоСчету ТОГДА
	|				СчетУчета В(&Счет)
	|			ИНАЧЕ
	|				ИСТИНА
	|		КОНЕЦ
	|	)
	|ИНДЕКСИРОВАТЬ ПО
	|	БСО,
	|	СерияБСО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [2]. Движения бланков
	|//
	|ВЫБРАТЬ
	|	БСО											КАК БСО,
	|	СерияБСО									КАК СерияБСО,
	|	НомерНачальный								КАК НомерНачальный,
	|	ВЫБОР
	|		КОГДА НомерКонечный > 0 ТОГДА
	|			НомерКонечный
	|		КОГДА Количество > 0 ТОГДА
	|			НомерНачальный + Количество - 1
	|		ИНАЧЕ
	|			НомерНачальный - Количество - 1
	|	КОНЕЦ										КАК НомерКонечный,
	|	ВЫБОР
	|		КОГДА (ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Количество > 0)
	|			ИЛИ (ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Количество < 0) ТОГДА
	|			1
	|		ИНАЧЕ
	|			-1
	|	КОНЕЦ										КАК ДельтаКоличество
	|ПОМЕСТИТЬ
	|	ДвиженияБланков
	|ИЗ
	|	РегистрНакопления.ДвиженияБСО
	|ГДЕ
	|	// Одинаковый отбор с поиском остатков
	|	Организация = &Организация
	|	И ВЫБОР
	|		КОГДА &ИспользоватьОтборПоИФО ТОГДА
	|			ИФО = &ИФО
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	// Апогей БК
	|	И КФО = &КФО
	|	И Регистратор <> &ДокументПодбора
	//
	|	И ВЫБОР
	|		КОГДА &ИспользоватьУчетПоПодразделениям И СчетУчета.УчетПоПодразделениям И &ИспользоватьОтборПоОдномуПодразделению ТОГДА
	|			Подразделение = &Подразделение
	|		КОГДА &ИспользоватьУчетПоПодразделениям И СчетУчета.УчетПоПодразделениям И НЕ &ИспользоватьОтборПоОдномуПодразделению ТОГДА
	|			Подразделение НЕ В (ВЫБРАТЬ Ссылка ИЗ ОбособленныеПодразделения)
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА &ИспользоватьОтборПоЦМО ТОГДА
	|			ЦМО В(&ЦМО)
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА &ИспользоватьОтборПоСчету ТОГДА
	|			СчетУчета В(&Счет)
	|		ИНАЧЕ
	|			ИСТИНА
	|	КОНЕЦ
	|	// Уникальный отбор для поиска движений
	|	И Активность
	|	И Период <= &ДатаОстатков
	|	И (БСО, СерияБСО) В (ВЫБРАТЬ БСО, СерияБСО ИЗ ОстаткиБланков)
	|	И НомерНачальный > 0
	|	И Количество <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [3]. Уникальные границы диапазонов номеров
	|//
	|ВЫБРАТЬ
	|	БСО						КАК БСО,
	|	СерияБСО				КАК СерияБСО,
	|	Граница					КАК Граница,
	|	СУММА(ДельтаКоличество)	КАК ДельтаКоличество
	|ИЗ
	|	(ВЫБРАТЬ
	|		БСО					КАК БСО,
	|		СерияБСО			КАК СерияБСО,
	|		НомерНачальный		КАК Граница,
	|		ДельтаКоличество	КАК ДельтаКоличество
	|	ИЗ
	|		ДвиженияБланков
	|			
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		БСО					КАК БСО,
	|		СерияБСО			КАК СерияБСО,
	|		НомерКонечный + 1	КАК Граница,
	|		-ДельтаКоличество	КАК ДельтаКоличество
	|	ИЗ
	|		ДвиженияБланков
	|	) КАК ВТ
	|СГРУППИРОВАТЬ ПО
	|	БСО,
	|	СерияБСО,
	|	Граница
	|ИМЕЮЩИЕ
	|	СУММА(ДельтаКоличество) <> 0
	|УПОРЯДОЧИТЬ ПО
	|	БСО,
	|	СерияБСО,
	|	Граница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// [4]. Остатки бланков
	|//
	|ВЫБРАТЬ
	|	БСО										КАК БСО,
	|	СерияБСО								КАК СерияБСО,
	|	ЕСТЬNULL(СправочникБСО.ДлинаНомера, 0)	КАК ДлинаНомера
	|ИЗ
	|	ОстаткиБланков
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БСО КАК СправочникБСО
	|		ПО	ОстаткиБланков.БСО = СправочникБСО.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииБСО КАК СправочникСерииБСО
	|		ПО	ОстаткиБланков.СерияБСО = СправочникСерииБСО.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	СправочникБСО.Наименование,
	|	СправочникСерииБСО.Наименование
	|;";
	
	РезультатыЗапроса = ЗапросОстатки.ВыполнитьПакет();
	
	// [3]. Уникальные границы диапазонов номеров
	ВыборкаГраницыДиапазонов = РезультатыЗапроса[3].Выбрать();
	
	// [4]. Остатки бланков
	ВыборкаОстаткиБланков = РезультатыЗапроса[4].Выбрать();
	
	ТабличнаяЧасть = ПараметрыПроцедуры["ТабличнаяЧасть"];
	
	Пока ВыборкаОстаткиБланков.Следующий() Цикл
		
		ПоискТекущегоБланка = Новый Структура("БСО,СерияБСО");
		
		ЗаполнитьЗначенияСвойств(ПоискТекущегоБланка, ВыборкаОстаткиБланков);
		
		ПредыдущаяВыборка = Новый Структура("БСО,СерияБСО,Граница,ДельтаКоличество");
		
		МножительКоличество = 0;
		
		ВыборкаГраницыДиапазонов.Сбросить();
		
		Пока ВыборкаГраницыДиапазонов.НайтиСледующий(ПоискТекущегоБланка) Цикл
			
			Если МножительКоличество = 0 Тогда
				// В завершение текущей итерации
				МножительКоличество = МножительКоличество + ВыборкаГраницыДиапазонов["ДельтаКоличество"];
				ЗаполнитьЗначенияСвойств(ПредыдущаяВыборка, ВыборкаГраницыДиапазонов);
				
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			
			НоваяСтрока["БСО"]					= ПредыдущаяВыборка.БСО;
			НоваяСтрока["СерияБСО"]				= ПредыдущаяВыборка.СерияБСО;
			НоваяСтрока["НомерНачальный"]	= ПредыдущаяВыборка.Граница;
			
			КонечныйНомерУчет = ВыборкаГраницыДиапазонов["Граница"] - 1;
			
			НоваяСтрока["НомерКонечный"] = КонечныйНомерУчет;
			
			КоличествоУчет = (КонечныйНомерУчет - НоваяСтрока["НомерНачальный"] + 1) * МножительКоличество;
			
			НоваяСтрока["Количество"] = КоличествоУчет;
			
			//Если МножительКоличество > 0 Тогда
			//	ИмяПоля = "Недостача";
			//Иначе
			//	ИмяПоля = "Излишек";
			//КонецЕсли;
			
			//КоличествоРасхождение = ?(КоличествоУчет>=0, КоличествоУчет, -КоличествоУчет);
			
			//НоваяСтрока[ИмяПоля] = КоличествоРасхождение;
			
			//Если МножительКоличество > 1 ИЛИ МножительКоличество < -1 ИЛИ КоличествоУчет < 0 Тогда
			//	НоваяСтрока["ОшибкаУчета"] = Истина;
			//КонецЕсли;
			
			//ОбновитьПредставленияНомеровБСО(НоваяСтрока, "НачальныйНомерУчет", "КонечныйНомерУчет", ВыборкаОстаткиБланков.ДлинаНомера);
			
			// В завершение текущей итерации
			МножительКоличество = МножительКоличество + ВыборкаГраницыДиапазонов["ДельтаКоличество"];
			ЗаполнитьЗначенияСвойств(ПредыдущаяВыборка, ВыборкаГраницыДиапазонов);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТабличнаяЧасть, АдресХранилища);
	
КонецПроцедуры

Функция ПолучитьПараметрыПоискаБСО(ДокументОбъект)
	
	ДатаОстатков = ДокументОбъект["ДатаИнвентаризации"];
	
	СчетВерхнегоУровня = ДокументОбъект["СчетУчетаБСО"];
	
	Если НЕ ЗначениеЗаполнено(СчетВерхнегоУровня) Тогда
		СчетВерхнегоУровня = "03";
	КонецЕсли;
	
	Счет = БухгалтерскийУчет.СписокСчетов(СчетВерхнегоУровня, ДатаОстатков);
	
	ИспользоватьОтборПоИФО = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоИФО")
	И ЗначениеЗаполнено(ДокументОбъект["ИФО"])
	И НЕ ДокументОбъект["БезУчетаИФО"];
	
	ИспользоватьОтборПоЦМО = ЗначениеЗаполнено(ДокументОбъект["ЦМО"]);
	
	ЦМО = ДокументОбъект["ЦМО"];
	
	ПараметрыПоиска = Новый Структура();
	ПараметрыПоиска.Вставить("ДатаОстатков",							ДатаОстатков);
	ПараметрыПоиска.Вставить("Организация",								ДокументОбъект["Организация"]);
	
	ПараметрыПоиска.Вставить("ИспользоватьОтборПоЦМО",					ИспользоватьОтборПоЦМО);
	ПараметрыПоиска.Вставить("ЦМО",										ЦМО);
	
	ПараметрыПоиска.Вставить("ИспользоватьОтборПоСчету",				ЗначениеЗаполнено(ДокументОбъект["СчетУчетаБСО"]));
	ПараметрыПоиска.Вставить("Счет",									Счет);
	
	ПараметрыПоиска.Вставить("ИспользоватьОтборПоИФО",					ИспользоватьОтборПоИФО);
	ПараметрыПоиска.Вставить("ИФО",										ДокументОбъект["ИФО"]);
	
	ПараметрыПоиска.Вставить("Подразделение",							ДокументОбъект["Подразделение"]);
	ПараметрыПоиска.Вставить("ИспользоватьУчетПоПодразделениям",		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоПодразделениям"));
	ПараметрыПоиска.Вставить("ИспользоватьОтборПоОдномуПодразделению",	ЗначениеЗаполнено(ДокументОбъект["Подразделение"]));
	
	Возврат ПараметрыПоиска;
	
КонецФункции     

#КонецОбласти

&НаКлиенте
Процедура АБК_ОбновитьОстаткиНомеровБСОПосле(Команда)
	ОбновитьОстаткиБСОПоДаннымИнвентаризации();
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ДобавитьВОтобранные")
Процедура АБК_ДобавитьВОтобранные()
	
	#Вставка
	Если ПодборПоНомерам Тогда 
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено ИЛИ НЕ ЗначениеЗаполнено(АдресОстатковБСО) Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыФормыПодбораНомеров = Новый Структура(); 
		ПараметрыФормыПодбораНомеров.Вставить("БСО", ТекущиеДанные.БСО);
		ПараметрыФормыПодбораНомеров.Вставить("СерияБСО", ТекущиеДанные.СерияБСО);
		
		ДополнитьПараметрыОстаткамиБСО(ПараметрыФормыПодбораНомеров);
		Если Не ПараметрыФормыПодбораНомеров.Свойство("Адрес_ТаблицаОстатковБСО") Тогда
			Возврат;
		КонецЕсли;  
		
		ПараметрыФормыПодбораНомеров.Вставить("ИзначальныйОстаток", ТекущиеДанные.Количество);

		ОписаниеПослеВыбораНомеров = Новый ОписаниеОповещения("ПослеВыбораНомеровБСО", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.БСО.Форма.ФормаПодбораНомеров", ПараметрыФормыПодбораНомеров, ЭтотОбъект,,,, ОписаниеПослеВыбораНомеров);
		Возврат;
	КонецЕсли;
	#КонецВставки
	ЗаполнитьКонтекстФормы();
	
	ПродолжитьДобавлениеОтобранных()

КонецПроцедуры

&НаСервере
Процедура ДополнитьПараметрыОстаткамиБСО(ПараметрыФормыПодбораНомеров)
	
	ТаблицаОстатков = ПолучитьИзВременногоХранилища(АдресОстатковБСО); 
	Если ТаблицаОстатков = Неопределено Тогда
		Возврат;
	КонецЕсли;
	МассивОстатковБСО = ТаблицаОстатков.НайтиСтроки(ПараметрыФормыПодбораНомеров);
	ТаблицаОстатковБСО = ТаблицаОстатков.Скопировать(МассивОстатковБСО);      
	
	ТаблицаОстатковПодобранных = ТаблицаПодобранных.Выгрузить();
	МассивПодобранныхСтрокБСО = ТаблицаОстатковПодобранных.НайтиСтроки(ПараметрыФормыПодбораНомеров); 
	ТаблицаКорзинаПоБСО = ТаблицаОстатковПодобранных.Скопировать(МассивПодобранныхСтрокБСО);
	
	ПараметрыФормыПодбораНомеров.Вставить("Адрес_ТаблицаОстатковБСО", ПоместитьВоВременноеХранилище(ТаблицаОстатковБСО));
	ПараметрыФормыПодбораНомеров.Вставить("Адрес_ТаблицаКорзинаПоБСО", ПоместитьВоВременноеХранилище(ТаблицаКорзинаПоБСО));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНомеровБСО(Результат, ДопПараметры) Экспорт

	Если Результат <> Неопределено Тогда  
		ОбработатьРезультатПодбораНомеровНаСервере(Результат);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатПодбораНомеровНаСервере(СтруктураВыбораНомеров)
	
	БСО = СтруктураВыбораНомеров.БСО;
	СерияБСО = СтруктураВыбораНомеров.СерияБСО;
	ДлинаНомера = БСО.ДлинаНомера;            
	
	ТаблицаВыбранныхНомеров = ПолучитьИзВременногоХранилища(СтруктураВыбораНомеров.Адрес_ТаблицаВыбранныхномеров); 
	ОстатокПослеПереноса = ТаблицаВыбранныхНомеров.Итог("Количество");
	
	// удаление старых выбранных строк по БСО и серии
	МассивСтрокПоБСО = ТаблицаПодобранных.НайтиСтроки(Новый Структура("БСО,СерияБСО",БСО,СерияБСО));
	Для Каждого СтрокаУдаления из МассивСтрокПоБСО Цикл
		ТаблицаПодобранных.Удалить(СтрокаУдаления);	
	КонецЦикла;
	
	МаксимальныйПустойНомер = "00000000000000000000";
	Для Каждого Строка из ТаблицаВыбранныхНомеров Цикл
		НовСтр = ТаблицаПодобранных.Добавить();	 
		ЗаполнитьЗначенияСвойств(НовСтр, Строка);
		НовСтр.ДлинаНомера = ДлинаНомера; 
		
		НовСтр.НомерНачальный = Прав(МаксимальныйПустойНомер+Формат(Строка.НомерНачальный,"ЧГ="),НовСтр.ДлинаНомера);
		НовСтр.НомерКонечный = Прав(МаксимальныйПустойНомер+Формат(Строка.НомерКонечный,"ЧГ="),НовСтр.ДлинаНомера);
	КонецЦикла; 
	
	Если СтруктураВыбораНомеров.ИзначальныйОстаток < ОстатокПослеПереноса Тогда
		Сообщить("Подобраны номера, которых нет в остатках");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
&ИзменениеИКонтроль("ПредставлениеНастройкиОтбора")
Функция АБК_ПредставлениеНастройкиОтбора(Форма)
	
	#Вставка
	Результат = НСтр("ru='Подбор по номерам - %1 количество - %2, начальный номер - %3, конечный номер - %4'");
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат,
		Форма.ПодборПоНомерам,
		Форма.ЗапрашиватьКоличество,
		Форма.ЗапрашиватьНачальныйНомер,
		Форма.ЗапрашиватьКонечныйНомер);
	#КонецВставки
	Результат = НСтр("ru='количество - %1, начальный номер - %2, конечный номер - %3'");
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Результат, 
																	Форма.ЗапрашиватьКоличество,
																	Форма.ЗапрашиватьНачальныйНомер,
																	Форма.ЗапрашиватьКонечныйНомер);


КонецФункции





