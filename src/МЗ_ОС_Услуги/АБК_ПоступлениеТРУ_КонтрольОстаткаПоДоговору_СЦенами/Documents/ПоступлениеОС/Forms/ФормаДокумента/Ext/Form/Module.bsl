
&НаСервере
Процедура АБК_ОбработкаПроверкиЗаполненияНаСервереПосле(Отказ, ПроверяемыеРеквизиты)
	
	Если Отказ ИЛИ ОтключитьКонтрольПроведения Тогда
		Возврат;
	КонецЕсли;  
		
	Договор = РаботаСОбязательствами.ПолучитьДоговорПервогоУровня(Объект.Договор);
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокТМЦ.Номенклатура КАК Номенклатура,
	|	СУММА(СписокТМЦ.Количество) КАК Количество,
	|	СУММА(СписокТМЦ.СуммаВал) КАК СуммаВал,
	|	СписокТМЦ.Цена КАК Цена,
	|	УчетныеДанныеОбъектаОССрезПоследних.СчетУчета КАК СчетУчета,
	|	УчетныеДанныеОбъектаОССрезПоследних.КФО КАК КФО,
	|	УчетныеДанныеОбъектаОССрезПоследних.КПС КАК КПС
	|ПОМЕСТИТЬ СписокТМЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПланФинансированияОбязательствСрезПоследних.КлючАналитики.Номенклатура КАК Номенклатура,
	|		ПланФинансированияОбязательствСрезПоследних.Количество КАК Количество,
	|		ПланФинансированияОбязательствСрезПоследних.СуммаВВалюте КАК СуммаВал,
	|		ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ПланФинансированияОбязательствСрезПоследних.Количество, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ПланФинансированияОбязательствСрезПоследних.СуммаВВалюте, 0) / ПланФинансированияОбязательствСрезПоследних.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 0)) КАК Цена,
	|		ПланФинансированияОбязательствСрезПоследних.КлючАналитики.КФО КАК КФО,
	|		ПланФинансированияОбязательствСрезПоследних.КлючАналитики.КПС КАК КПС
	|	ИЗ
	|		РегистрСведений.ПланФинансированияОбязательств.СрезПоследних КАК ПланФинансированияОбязательствСрезПоследних
	|	ГДЕ
	|		ПланФинансированияОбязательствСрезПоследних.Обязательство = &Обязательство
	|		И ПланФинансированияОбязательствСрезПоследних.КлючАналитики.Номенклатура ССЫЛКА Справочник.ОсновныеСредства
	|		И (ПланФинансированияОбязательствСрезПоследних.КлючАналитики.ПериодПлана.ДатаОкончания <= &ДатаОкончания
	|				ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПоступлениеОС.ВнеоборотныйАктив,
	|		-ПоступлениеОС.Количество,
	|		-ПоступлениеОС.Всего,
	|		ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ПоступлениеОС.Количество, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ПоступлениеОС.Всего, 0) / ПоступлениеОС.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 0)) КАК Цена,
	|		ПоступлениеОС.КФО,
	|		ПоступлениеОС.КПС
	|	ИЗ
	|		Документ.ПоступлениеОС.КапВложения КАК ПоступлениеОС
	|	ГДЕ
	|		ПоступлениеОС.Ссылка.Договор В ИЕРАРХИИ(&Обязательство)
	|		И ПоступлениеОС.Ссылка.ПометкаУдаления = ЛОЖЬ
	|		И ПоступлениеОС.Ссылка <> &СсылкаДокумента
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПоступлениеОСВПути.ВнеоборотныйАктив,
	|		-ПоступлениеОСВПути.Количество,
	|		-ПоступлениеОСВПути.Всего,
	|		ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ПоступлениеОСВПути.Количество, 0) = 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ПоступлениеОСВПути.Всего, 0) / ПоступлениеОСВПути.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 0)) КАК Цена,
	|		ПоступлениеОСВПути.КФО,
	|		ПоступлениеОСВПути.КПС
	|	ИЗ
	|		Документ.ПоступлениеОСВПути.КапВложения КАК ПоступлениеОСВПути
	|	ГДЕ
	|		ПоступлениеОСВПути.Ссылка.Договор В ИЕРАРХИИ(&Обязательство)
	|		И ПоступлениеОСВПути.Ссылка.ПометкаУдаления = ЛОЖЬ
	|		И ПоступлениеОСВПути.Ссылка <> &СсылкаДокумента) КАК СписокТМЦ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетныеДанныеОбъектаОС.СрезПоследних КАК УчетныеДанныеОбъектаОССрезПоследних
	|		ПО СписокТМЦ.Номенклатура = УчетныеДанныеОбъектаОССрезПоследних.ОсновноеСредство
	|			И СписокТМЦ.КФО = УчетныеДанныеОбъектаОССрезПоследних.КФО
	|			И СписокТМЦ.КПС = УчетныеДанныеОбъектаОССрезПоследних.КПС
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокТМЦ.Номенклатура,
	|	УчетныеДанныеОбъектаОССрезПоследних.СчетУчета,
	|	УчетныеДанныеОбъектаОССрезПоследних.КФО,
	|	СписокТМЦ.Цена,
	|	УчетныеДанныеОбъектаОССрезПоследних.КПС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.Обязательство.Организация КАК Организация,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.Обязательство.Контрагент КАК Контрагент,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.Обязательство КАК ДокументОснование,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.ИФО КАК ИФО,
	|	&ДоговорОснование КАК Договор,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.ВалютаРасчетов КАК ВалютаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАванса,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоступленийМЗ.Поступление) КАК ВидПоступленияМЗ,
	|	ИСТИНА КАК СуммаВключаетНДС,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.Регистратор.СчетКонтрагента КАК РасчетныйСчетКонтрагента,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.РеквизитыЛицевогоСчета КАК ЛицевойСчет
	|ИЗ
	|	РегистрСведений.СрокиИсполненияИСуммыОбязательств.СрезПоследних КАК СрокиИсполненияИСуммыОбязательствСрезПоследних
	|ГДЕ
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.Обязательство = &Обязательство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокТМЦ.Номенклатура КАК ВнеоборотныйАктив,
	|	СписокТМЦ.Количество КАК Количество,
	|	СписокТМЦ.Количество КАК КоличествоПоДокументам,
	|	СписокТМЦ.СуммаВал КАК Сумма,
	|	СписокТМЦ.Цена КАК Цена,
	|	СписокТМЦ.СуммаВал КАК Всего,
	|	СписокТМЦ.СчетУчета КАК СчетУчета,
	|	СписокТМЦ.КФО КАК КФО,
	|	СписокТМЦ.КПС КАК КПС
	|ИЗ
	|	СписокТМЦ КАК СписокТМЦ
	|ГДЕ
	|	СписокТМЦ.Количество > 0";
	
	Запрос.УстановитьПараметр("Обязательство", 		Договор);
	Запрос.УстановитьПараметр("СсылкаДокумента", 	Объект.Ссылка); 
	Запрос.УстановитьПараметр("ДоговорОснование", 	Договор); 
	
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ТекущаяДатаСеанса()));
	Иначе
		Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Объект.Дата));
	КонецЕсли;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();

	Остатки_ПФ = МассивРезультатов[2].Выгрузить();
	Остатки_ПФ.Свернуть("ВнеоборотныйАктив,Цена","Количество,Сумма"); 
	Остатки_ПФ.Колонки.Добавить("КоличествоИзначально",Новый ОписаниеТипов("Число"));
	Остатки_ПФ.Колонки.Добавить("СуммаИзначально",Новый ОписаниеТипов("Число"));
	Для Каждого Строка из Остатки_ПФ Цикл
		Строка.КоличествоИзначально = Строка.Количество;
		Строка.СуммаИзначально = Строка.Сумма;
	КонецЦикла;

	Запрос_СрокиИсполнения = новый Запрос("ВЫБРАТЬ
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.Обязательство КАК Обязательство,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.НачалоДействия КАК НачалоДействия,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.ОкончаниеДействия КАК ОкончаниеДействия,
	|	СрокиИсполненияИСуммыОбязательствСрезПоследних.СрокИсполнения КАК СрокИсполнения
	|ИЗ
	|	РегистрСведений.СрокиИсполненияИСуммыОбязательств.СрезПоследних(&ДатаСведений, Обязательство = &Обязательство) КАК СрокиИсполненияИСуммыОбязательствСрезПоследних");
	Запрос_СрокиИсполнения.Параметры.Вставить("ДатаСведений",		Объект.Дата);
	Запрос_СрокиИсполнения.Параметры.Вставить("Обязательство",		Объект.Договор);    
	
	Данные_СрокиИсполнения = Запрос_СрокиИсполнения.Выполнить().Выбрать();  
	
	ИмяСписка = НСтр("ru = 'Капитальные вложения'");   
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если Данные_СрокиИсполнения.Следующий() Тогда
		
		СрокИсполненияДоговора = Данные_СрокиИсполнения.СрокИсполнения;	
		
		Если Объект.Дата > СрокИсполненияДоговора Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Срок исполнения договора раньше даты документа", ДокументОбъект, "Дата", "Объект", Отказ);
			Возврат;
		КонецЕсли;
		
		Для Каждого Строка из Объект.КапВложения Цикл     
			
			Цена 		= Окр(Строка.Всего / ?(Строка.Количество = 0, 1, Строка.Количество),0);
			
			МассивОстатков = Остатки_ПФ.НайтиСтроки(Новый Структура("ВнеоборотныйАктив,Цена",Строка.ВнеоборотныйАктив,Цена));
			
			Если МассивОстатков.Количество() Тогда 
				ОстатокКоличествоИзначально 	= МассивОстатков[0].КоличествоИзначально;
				ОстатокСуммаИзначально 			= МассивОстатков[0].СуммаИзначально;
				ОстатокКоличество 	= МассивОстатков[0].Количество;
				ОстатокСумма 		= МассивОстатков[0].Сумма; 
			Иначе  
				ОстатокКоличествоИзначально 	= 0;
				ОстатокСуммаИзначально 			= 0;
				ОстатокСумма 		= 0;
				ОстатокКоличество 	= 0;
			КонецЕсли;
			
			// Проверка на Количество
			РазницаКоличество = ОстатокКоличество - Строка.Количество;   
			Если РазницаКоличество < 0 Тогда
				
				Префикс = "КапВложения[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка","Корректность", НСтр("ru = 'Количество'"), 
					Строка.НомерСтроки, 
					ИмяСписка,
					СокрЛП(Строка.ВнеоборотныйАктив) +" : Количество в документе по цене "+Формат(Цена,"ЧДЦ=2; ЧГ=")+" превышает количество указанное в договоре: остаток "+Формат(ОстатокКоличество,"ЧН=; ЧГ=")+" | разница "+Формат(-РазницаКоличество,"ЧГ="));
					
				Поле = Префикс + "Количество";  
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
				
			ИначеЕсли МассивОстатков.Количество() Тогда
				МассивОстатков[0].Количество = МассивОстатков[0].Количество - Строка.Количество; 	
			КонецЕсли;
			
			// Проверка на Сумму
			РазницаСумма = ОстатокСумма - Строка.Всего;   
			Если РазницаСумма < 0 Тогда  
				
				Префикс = "КапВложения[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";   
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка","Корректность", НСтр("ru = 'Всего'"),
					Строка.НомерСтроки, 
					ИмяСписка, 
					СокрЛП(Строка.ВнеоборотныйАктив) +" : Сумма в документе по цене "+Формат(Цена,"ЧДЦ=2; ЧГ=")+" превышает количество указанное в договоре: остаток "+Формат(ОстатокСумма,"ЧДЦ=2; ЧН=; ЧГ=")+" | разница "+Формат(-РазницаСумма,"ЧДЦ=2; ЧГ="));  
				
				Поле = Префикс + "Всего";                                                                    
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ); 
				
			ИначеЕсли МассивОстатков.Количество() Тогда
				МассивОстатков[0].Сумма = МассивОстатков[0].Сумма - Строка.Всего; 	
			КонецЕсли; 
			
			//// Проверка на Цена
			//Цена 		= Строка.Всего / ?(Строка.Количество = 0, 1, Строка.Количество);
			//ЦенаОстаток = ОстатокСуммаИзначально / ?(ОстатокКоличествоИзначально = 0, 1, ОстатокКоличествоИзначально);
			//РазницаЦена = ЦенаОстаток - Цена; 
			//Разница_Модуль = ?(РазницаЦена<0, -РазницаЦена, РазницаЦена);
			//
			//Если РазницаЦена <> 0 И Разница_Модуль > 1 Тогда
			//	
			//	ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка","Корректность", НСтр("ru = 'Количество'"), 
			//		Строка.НомерСтроки, 
			//		ИмяСписка,
			//		СокрЛП(Строка.ВнеоборотныйАктив) +" : Цена в документе не соответствует цене, указанной в договоре: "+Формат(ЦенаОстаток,"ЧДЦ=2; ЧГ=")+" | разница "+Формат(-РазницаЦена,"ЧДЦ=2; ЧГ="));
			//						
			//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, , , Отказ);
			//	
			//ИначеЕсли МассивОстатков.Количество() Тогда
			//	МассивОстатков[0].Количество = МассивОстатков[0].Количество - Строка.Количество; 	
			//КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АБК_ОтключитьКонтрольПроведенияПосле(Команда)
	
	ОтключитьКонтрольПроведения = НЕ ОтключитьКонтрольПроведения;
	Элементы.ФормаОтключитьКонтрольПроведения.Пометка = ОтключитьКонтрольПроведения;
	
КонецПроцедуры

