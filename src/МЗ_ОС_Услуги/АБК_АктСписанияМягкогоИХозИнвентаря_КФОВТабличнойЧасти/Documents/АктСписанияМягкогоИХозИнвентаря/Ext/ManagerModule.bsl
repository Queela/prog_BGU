 
#Область ПроведениеДокумента
// Подготовить таблицу списание материальных запасов по документу.
// 
// Параметры:
//  Документ - ДокументОбъект.АктСписанияМЗ
//  Параметры - Структура
// 
// Возвращаемое значение:
//  см. УправлениеМатериальнымиЗапасами.ПустаяТаблицаСписаниеМатериальныхЗапасовПоДокументу
Функция ПодготовитьТаблицуСписаниеМатериальныхЗапасовПоДокументу(Документ, Параметры) Экспорт
	Параметры.Вставить("НеПроверятьЗаполнение", Истина);
	ТаблицаДокумента = УправлениеМатериальнымиЗапасами.ПустаяТаблицаСписаниеМатериальныхЗапасовПоДокументу();
	
	ИмяСписка = "Материалы";
	СинонимСписка = Документ.Метаданные().ТабличныеЧасти.Материалы.Синоним;  
	// АБК    
	КФОВТабличнойЧасти = Ложь;
	Если Документ.ДополнительныеСвойства.Свойство("АБК_КФОВТабличнойЧасти") Тогда      	// Запись с формы документа
		КФОВТабличнойЧасти = Документ.ДополнительныеСвойства["АБК_КФОВТабличнойЧасти"]; 
	Иначе                                                                              	// Запись из списка или программно
		Свойство = АБК_ДопКолонкиДокументов.НайтиСоздатьДополнительноеСведение("АБК_КФОВТабличнойЧасти");
		Если ЗначениеЗаполнено(Свойство) Тогда
			НЗ = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
			НЗ.Отбор.Объект.Установить(Документ.Ссылка);
			НЗ.Отбор.Свойство.Установить(Свойство);
			НЗ.Прочитать();
			ТЧРеквизитов = НЗ.Выгрузить();
			
			Если ТЧРеквизитов.Количество() И ЗначениеЗаполнено(ТЧРеквизитов[0].Значение) Тогда
				КФОВТабличнойЧасти = ТЧРеквизитов[0].Значение;  
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;    
	
	ДанныеДопКолонки = АБК_ДопКолонкиДокументов.НайтиСоздатьДопКолонку("АктСписанияМягкогоИХозИнвентаря",
		"Материалы",
		"АБК_КФО",
		"КФО",
		Новый ОписаниеТипов("ПеречислениеСсылка.КВД"));
	Если ДанныеДопКолонки = Неопределено ИЛИ НЕ Документ.ДополнительныеСвойства.Свойство("ДанныеДополнительныхТабЧастей") Тогда
		КФОВТабличнойЧасти = Ложь;	
	Иначе
		СтруктураПоискаДопКолонки = Новый Структура("ТабличнаяЧасть,КолонкаТабличнойЧасти",ДанныеДопКолонки.ДопТабЧасть,ДанныеДопКолонки.ДопКолонка);
		ДанныеДополнительныхТабЧастей = Документ.ДополнительныеСвойства.ДанныеДополнительныхТабЧастей;
	КонецЕсли;  
	// АБК
	
	Для Каждого СтрокаДокумента Из Документ.Материалы Цикл
		НоваяСтрока = ТаблицаДокумента.Добавить();
		НоваяСтрока.ИмяСписка = ИмяСписка;
		НоваяСтрока.СинонимСписка = СинонимСписка;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДокумента,
			"НомерСтроки, КПС, КЭК, СчетУчета, Номенклатура, Количество, СуммаСписания, СуммаСписанияНУ");
		НоваяСтрока.ДопАналитика = СтрокаДокумента.ДополнительнаяАналитикаСчета;
		НоваяСтрока.ДопИзмерение = Документ.ЦМООтправитель;
		НоваяСтрока.ДопИзмерениеВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ЦМО;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Документ,
			"ИФО, НеПересчитыватьСумму");
		НоваяСтрока.Подразделение = Документ.ПодразделениеОтправитель;
		НоваяСтрока.ПодразделениеПолучатель = Документ.ПодразделениеОтправитель;
		Если КФОВТабличнойЧасти Тогда  
			// АБК 
			СтруктураПоискаДопКолонки.Вставить("НомерСтрокиДокумента", СтрокаДокумента.НомерСтроки); 
			МассивСтрокЗначенийДопКолонки = ДанныеДополнительныхТабЧастей.НайтиСтроки(СтруктураПоискаДопКолонки);
			Если МассивСтрокЗначенийДопКолонки.Количество() И ЗначениеЗаполнено(МассивСтрокЗначенийДопКолонки[0].Значение) Тогда
				НоваяСтрока.КФО = МассивСтрокЗначенийДопКолонки[0].Значение;	
			Иначе
				НоваяСтрока.КФО = Документ.КФО;	
			КонецЕсли;
			// АБК
		Иначе
			НоваяСтрока.КФО = Документ.КФО;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаДокумента;
КонецФункции

#КонецОбласти