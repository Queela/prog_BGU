&После("ЗаполнитьОписанияПользовательскихФункций")
Процедура АБК_ЗаполнитьОписанияПользовательскихФункций(ТаблицаФункций)
	
	ДобавитьОписаниеПользовательскойФункции(ТаблицаФункций, "ПолучитьСреднююСуммуНоменклатуры(<СчетУчета>,<Дата>,<Организация>,<Номенклатура>)", , , "Прочие");
	ДобавитьОписаниеПользовательскойФункции(ТаблицаФункций, "ПреобразоватьКСтроке(<Параметр>)", , , "Прочие");   
	
КонецПроцедуры 

Функция ПолучитьСреднююСуммуНоменклатуры(СчетУчета,Дата,Организация,Номенклатура) Экспорт
	
	Если ТипЗнч(СчетУчета) = Тип("Строка") Тогда
		СчетУчета = БухгалтерскийУчет.СчетПоКоду(СчетУчета,Дата);		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ЖурналПроводокЕПСБУОстатки.Субконто1 КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЖурналПроводокЕПСБУОстатки.КоличествоОстаток = 0
	|			ТОГДА ЖурналПроводокЕПСБУОстатки.СуммаОстаток
	|		ИНАЧЕ ЖурналПроводокЕПСБУОстатки.СуммаОстаток / ЖурналПроводокЕПСБУОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.Остатки(
	|			&ДатаСреза,
	|			Счет = &СчетУчета,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Номенклатура) КАК ЖурналПроводокЕПСБУОстатки");
	Запрос.УстановитьПараметр("ДатаСреза",		Новый Граница(Дата,ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетУчета",		СчетУчета);
	Запрос.УстановитьПараметр("Номенклатура",	Номенклатура);
	Запрос.УстановитьПараметр("Организация",	Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Сумма;	
	КонецЕсли; 
	
	Возврат 0;	
	
КонецФункции 

Функция ПреобразоватьКСтроке(Параметр) Экспорт
	
	Возврат Строка(Параметр);	
	
КонецФункции