
&ИзменениеИКонтроль("ОбъявленияВсехФункцийМодуля")
Функция АБК_ОбъявленияВсехФункцийМодуля()

	ВсеФункцииМодуля = Новый Массив;

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТестоваяФункцияСПараметром");
	ФункцияМодуля.Заголовок	= "Тестовая функция с параметром";
	ФункцияМодуля.Описание	= НСтр("ru = 'Возвращает произвольную таблицу проводок. Параметром должна быть организация'");

	// НДС
	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаАннулированияСчетаФактуры");
	ФункцияМодуля.Заголовок	= "Таблица аннулирования счета-фактуры";
	ФункцияМодуля.Описание	= НСтр("ru='Таблица для аннулирования проводок счета-фактуры'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РегистрацияСтрокиКнигиПокупок");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаАннулированияСчетаФактуры_РегистрацияСтрокиКнигиПродаж");
	ФункцияМодуля.Заголовок	= "Таблица аннулирования счета-фактуры";
	ФункцияМодуля.Описание	= НСтр("ru='Таблица для аннулирования проводок счета-фактуры'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РегистрацияСтрокиКнигиПродаж");

	// Ввод остатков
	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВводОстатковМатериалы106хП");
	ФункцияМодуля.Заголовок	= НСтр("ru='Ввод начальных остатков материалов 106.хП'");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ВводНачальныхОстатков");

	// --- Закрытие года (Закрытие балансовых счетов в конце года)

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ЗакрытиеГодаУпрощенно");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица закрытия балансовых счетов в конце года (старая форма)");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит данные по операциям закрытия года, 
	|применяется для устаревшей формы документа ""Закрытие балансовых счетов в конце года"", 
	|с целью сохранения совместимости с ранее выпущенными версиями конфигурации.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ЗакрытиеГода");	

	// --- Перенос по приказу 64н

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "Приказ64нНФАОстатки");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатков64нНФА");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "Приказ64нНФАОбороты");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица оборотов");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатков64нНФА");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "Приказ64нРасчетыОстатки");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатков64нРасчеты");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "Приказ64нРасчетыОбороты");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица оборотов");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатков64нРасчеты");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "Приказ64нКЭКОстатки");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатков64нКЭК");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "Приказ64нКЭКОбороты");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица оборотов");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатков64нКЭК");

	// --- Перенос по приказу 198н

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "Приказ198нНФАОстатки");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатков198нНФА");

	// --- Перенос по приказу 192н Биологические активы

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПереносОстатковБиологическиеАктивыОС");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков ОС");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатковБиологическиеАктивы");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПереносОстатковБиологическиеАктивыМЗ");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков МЗ");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатковБиологическиеАктивы");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПереносОстатковБиологическиеАктивыВложения");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков Вложения");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатковБиологическиеАктивы");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПереносОстатковБиологическиеАктивыВПути");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица остатков В пути");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносОстатковБиологическиеАктивы");

	// --- Корректировка поступления и реализации МЗ

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПроводкиКорректируемогоДокумента");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Проводки корректируемого документа");
	ФункцияМодуля.Описание	= "Возвращает таблицу проводок документа, указанного в параметре ""Документ"". Если параметр не заполнен, то пытается получить документ из реквизита ""Документ-основание"".";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,
	|НакладнаяНаОтпускМ15,
	|НакладнаяНаРеализациюТорг12");

	#Область ЗачетАвансов

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовСЗачетомАвансов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Расчеты с контрагентами (зачет авансов)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица расчетов для зачета авансов и увеличения (уменьшения) задолженности документами поступления и реализации материальных запасов, услуг, ОС и пр.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,
	|ПоступлениеМЗВПути,
	|ПоступлениеУслугРабот,
	|ПоступлениеОС,
	|ПоступлениеОСВПути,
	|ПоступлениеОСИК,
	|ПриходныйОрдерФондовый,
	|ГТДИмпорт,
	|АктОбОказанииУслуг,
	|НакладнаяНаОтпускМ15,
	|НакладнаяНаРеализациюТорг12,
	|НакладнаяНаОтпускИК,
	|НачислениеДоходов,
	|НачислениеЗаУслугиОбразования,
	|НачислениеРодительскойПлаты,
	|НачислениеСтудентамЗаПрочиеУслуги,
	|СписаниеДоходовБудущихПериодов,
	|НачислениеАмортизацииПравПользованияОС,
	|ПередачаГруппОбъектовОС,
	|ПередачаЗдания,
	|ПередачаОбъектаОС,
	|СдачаЭтапаРабот,
	|ПередачаОбъектовОС,
	|ПередачаОбъектовИК,
	|ИзвещениеИсходящее,
	|ФормированиеВложенийВФинансовыеАктивы,
	|ВыбытиеФинансовыхВложений"); 
	
	#Вставка
	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовСЗачетомАвансовРешениеОПризнанииОС");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Расчеты с контрагентами (зачет авансов) (решение о признании объектов ОС)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица расчетов для зачета авансов и увеличения (уменьшения) задолженности решения о признании объектов ОС.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,"РешениеОПризнанииОбъектовОС");
	#КонецВставки

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовПриПоступленииДопРасходов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Расчеты с контрагентами (поступление доп.расходов)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица расчетов для зачета авансов и увеличения задолженности при поступлении дополнительных расходов, включаемых в стоимость активов.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеУслугРабот");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовПоОплатеТруда");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Расчеты по оплате труда'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица расчетов с сотрудниками по оплате труда.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ОтражениеЗарплатыВУчете");

	#КонецОбласти

	#Область ПогашениеЗадолженности

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовСПогашениемЗадолженности");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Расчеты с контрагентами (погашение задолженности)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица расчетов для погашения задолженности (организацией перед покупателями или поставщиками перед организацией) документами движения денежных средств'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|ЗаявкаНаВозврат,
	|КассовоеПоступление,
	|КассовоеВыбытие,
	|ПлатежноеПоручение,
	|ПриходныйКассовыйОрдер,
	|РасходныйКассовыйОрдер,
	|ЭквайринговаяОперация");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовСПолучателямиКомпенсацииРодительскойПлаты");
	ФункцияМодуля.Заголовок = НСтр("ru='Расчеты с получателями компенсации родительской платы'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица расчетов для погашения задолженности перед получателями компенсации родительской платы.
	|Для расчетно-платежных документов, сформированных на основании документа ""Ведомость получателей компенсации родительской платы к выплате"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|КассовоеВыбытие,
	|ПлатежноеПоручение");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовСПокупателямиЗаКассовуюСмену");
	ФункцияМодуля.Заголовок = НСтр("ru='Расчеты с покупателями из отчета по кассовой смене'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица расчетов для погашения задолженности перед покупателями из отчета по кассовой смене.
	|Для расчетно-платежных документов, сформированных на основании документа ""Отчет по кассовой смене"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ПриходныйКассовыйОрдер");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовСФизическимиЛицамиПоВедомости");
	ФункцияМодуля.Заголовок = НСтр("ru='Расчеты с физ. лицами по ведомости перечислений'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица расчетов с физ. лицами для перечисления денежных средств по ведомости перечислений.
	|Для расчетно-платежных документов, сформированных на основании документа ""Ведомость в банк"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|КассовоеВыбытие,
	|ПлатежноеПоручение");

	#КонецОбласти

	#Область РасчетыСПодотчетнымиЛицами

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасходыПоАвансовомуОтчету");
	ФункцияМодуля.Заголовок = НСтр("ru='Отражение расходов подотчетного лица (авансовый отчет)'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица расходов подотчетного лица с учетом курсов выдачи денежных средств под отчет.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"АвансовыйОтчет");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаКурсовыхРазницПриВозвратеАвансаПодотчетнымЛицом");
	ФункцияМодуля.Заголовок = НСтр("ru='Таблица курсовых разниц при возврате иностранной валюты подотчетным лицом'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица курсовых разниц при возврате иностранной валюты подотчетным лицом.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ПриходныйКассовыйОрдер");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовСПодотчетнымиЛицамиПоВедомости");
	ФункцияМодуля.Заголовок = НСтр("ru='Расчеты с подотчетными лицами по ведомости перечислений'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица расчетов с подотчетными лицами для перечисления денежных средств по ведомости перечислений.
	|Для расчетно-платежных документов, сформированных на основании документа ""Ведомость в банк"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|КассовоеВыбытие,
	|ПлатежноеПоручение");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасходыПоОтчетуОРасходах");
	ФункцияМодуля.Заголовок = НСтр("ru='Отражение расходов подотчетного лица (отчет о расходах)'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица расходов подотчетного лица с учетом курсов выдачи денежных средств под отчет.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ОтчетОРасходахПодотчетногоЛица");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаОбязательствПоЗаявкеОбоснованиюЗакупки");
	ФункцияМодуля.Заголовок = НСтр("ru='Таблица обязательств для их исполнения через подотчетное лицо'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица обязательств для их исполнения через подотчетное лицо'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ЗаявкаОбоснованиеЗакупкиМалогоОбъема,
	|ЗаявкаОбоснованиеЗакупкиМалогоОбъемаЧерезПодотчетноеЛицо");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаВыплатПоВедомостиНаВыдачуПодотчетнымЛицам");
	ФункцияМодуля.Заголовок = НСтр("ru='Расчеты по ведомости на выдачу денег из кассы подотчетным лицам'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица выплат по ведомости на выдачу денег из кассы подотчетным лицам.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"РасходныйКассовыйОрдер");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаВыплатПоПлатежнойВедомости");
	ФункцияМодуля.Заголовок = НСтр("ru='Расчеты по платежной ведомости на выдачу денег из кассы'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица выплат по платежной ведомости на выдачу денег из кассы.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"РасходныйКассовыйОрдер");

	#КонецОбласти

	#Область УчетМатериальныхЗапасов

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеМатериальныхЗапасовРанееУчтенныхВПути");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление материальных запасов, ранее учтенных как МЗ в пути'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление материальных запасов, ранее учтенных как МЗ в пути'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеМатериальныхЗапасов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление материальных запасов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление материальных запасов'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,ПоступлениеМЗВПути,ВводНачальныхОстатков");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеМатериальныхЗапасов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание материальных запасов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание материальных запасов'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"АктСписанияМЗ,
	|АктСписанияМягкогоИХозИнвентаря,
	|ВедомостьНаВыдачуМЗНаНуждыУчреждения,
	|НакладнаяНаОтпускМ15,
	|НакладнаяНаРеализациюТорг12,
	|ПереводГотовойПродукцииВСоставОС,
	|ПоступлениеМЗ,
	|РешениеОПрекращенииПризнанияАктивомМЗ,
	|ТаксировкаПутевогоЛиста,
	|ТаксировкаРабочегоЛистаАгрегата,
	|ТребованиеНакладная0315006,
	|АктОбУтилизацииМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВосстановлениеМатериальныхЗапасов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Восстановление материальных запасов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Восстановление материальных запасов'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеОСПриВосстановленииМатериальныхЗапасов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание ОС со счета 02 при восстановлении материальных запасов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание ОС со счета 02 при восстановлении материальных запасов'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РеализацияМатериальныхЗапасов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Реализация материальных запасов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Реализация материальных запасов'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"НакладнаяНаОтпускМ15,НакладнаяНаРеализациюТорг12");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВозвратМатериальныхЗапасовПоставщику");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Возврат материальных запасов поставщику'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Возврат материальных запасов поставщику'");
	ФункцияМодуля.ЗависитОтФункций = "СписаниеМатериальныхЗапасов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"НакладнаяНаОтпускМ15");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ДвижениеМЗНаХранениеПереработку");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Движение МЗ на хранение (в переработку)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Передача и возврат материальных запасов (давальческого сырья) на хранение и в переработку'");
	ФункцияМодуля.ЗависитОтФункций = "СписаниеМатериальныхЗапасов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"НакладнаяНаОтпускМ15");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВыдачаМЗвЛичноеПользование");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Выдача МЗ в личное пользование'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица материалов для формирования проводок передачи МЗ в личное пользование'");
	ФункцияМодуля.ЗависитОтФункций = "СписаниеМатериальныхЗапасов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ВедомостьНаВыдачуМЗНаНуждыУчреждения");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеВложенийВМЗ_Покупка");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание вложений в МЗ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание вложений в МЗ при покупке'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"НакладнаяНаОтпускМ15,
	|ТребованиеНакладная0315006");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОприходованиеМатериальныхЗапасовПоФактическойСтоимости");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оприходование МЗ по фактической стоимости'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Оприходование материальных запасов по стоимости, накопленой на счетах 106.2П и 106.3П'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ОприходованиеМЗПоФактическойСтоимости,
	|ОприходованиеМЗПоФактическойСтоимостиИК");

	#КонецОбласти

	#Область УчетМатериальныхЗапасовИмуществаКазны

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РеализацияМатериальныхЗапасовИмуществаКазны");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Реализация материальных запасов имущества казны'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Реализация материальных запасов имущества казны'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"НакладнаяНаОтпускИК");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеМатериальныхЗапасовИмуществаКазны");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание материальных запасов имущества казны'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание материальных запасов имущества казны'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"НакладнаяНаОтпускИК");

	#КонецОбласти

	#Область УчетВозвратнойТары

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеВозвратнойТарыРанееУчтеннойВПути");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление возвратной тары, ранее учтенной как МЗ в пути'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление возвратной тары, ранее учтенной как МЗ в пути'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеВозвратнойТары");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление возвратной тары'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление возвратной тары'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеМЗ,ПоступлениеМЗВПути");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеВозвратнойТары");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание возвратной тары'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание возвратной тары'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "НакладнаяНаОтпускМ15,НакладнаяНаРеализациюТорг12");

	#КонецОбласти

	#Область РозничнаяТорговля

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РозничнаяНаценкаПриПеремещенииВНТТ");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Розничная наценка при перемещении в НТТ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Розничная наценка при перемещении материальных запасов в неавтоматизированную торговую точку (НТТ).'");
	ФункцияМодуля.ЗависитОтФункций = "СписаниеМатериальныхЗапасов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ТребованиеНакладная0315006");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеМатериальныхЗапасовИзНТТ");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание материальных запасов из НТТ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит данные таблицы ""Материалы"", дополненные колонками, необходимыми для отражения операции списания товаров из НТТ.
	|В колонках ""СчетРозницы"" и ""СчетРозницыНУ"" содержатся счета учета товаров в рознице (105.Б8 или 105.Г8 для бухгалтерского учета, Н41.02 для налогового учета).
	|В колонках ""СчетНаценки"" и ""СчетНаценкиНУ"" содержатся счета учета торговой наценки (105.29 или 105.39 для бухгалтерского учета, Н42 для налогового учета).
	|В колонках ""СуммаНаценки"", ""СуммаНаценкиНУ"" и ""СуммаНаценкиНеУчитываетсяНУ"" содержится сумма торговой наценки, которая относится к указанным товарам.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ТребованиеНакладная0315006");

	#КонецОбласти

	#Область УчетПродуктовПитания

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеПродуктовПитания");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание продуктов питания'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание продуктов питания'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"МенюТребование");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВозвратПродуктовПитания");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Возврат продуктов питания'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Возврат продуктов питания'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"МенюТребование");

	#КонецОбласти

	#Область УчетУслугРабот

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеУслугРабот");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление услуг, работ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление услуг, работ'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеУслугРабот,НачислениеАмортизацииПравПользованияОС");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеДопРасходов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление доп. расходов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление доп. расходов'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовПриПоступленииДопРасходов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеУслугРабот");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РеализацияУслугРабот");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Реализация услуг, работ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Реализация услуг, работ'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"АктОбОказанииУслуг,НачислениеДоходов,НачислениеЗаУслугиОбразования,СдачаЭтапаРабот,НачислениеСтудентамЗаПрочиеУслуги,СписаниеДоходовБудущихПериодов");

	// Завершение работ

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ЗавершениеРабот_НачислениеДоходов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица накопленных доходов за выполненные работы'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит остатки накопленных на счете 401.40 доходов по всем этапам выполненных работ.
	|В колонках ""Счет"", ""КПС"", ""КЭК"", ""Подразделение"" и ""Субконто1-3"" содержится счет и аналитика учета доходов будущих периодов.
	|В колонках ""Номенклатура"" и ""НоменклатураПредставление"" содержится информация о номенклатуре выполненных работ.
	|В колонке ""СуммаДоходов"" содержится сумма остатка доходов будущих периодов на момент завершения работ.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ЗавершениеРабот");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ЗавершениеРабот_СписаниеРасходов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица накопленных расходов на выполнение работ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит остатки накопленных (не списанных) расходов по всем этапам выполненных работ.
	|В колонках ""СчетРасходов"", ""КПСРасходов"", ""КЭКРасходов"", ""ПодразделениеРасходов"" и ""СубконтоРасходов1-3"" содержится счет и аналитика учета расходов на выполнение работ.
	|В колонках ""СчетДБП"", ""КПС_ДБП"", ""КЭК_ДБП"", ""ПодразделениеДБП"" и ""СубконтоДБП1-3"" содержится счет и аналитика учета ДБП, соответствующих расходам на выполнение работ.
	|В колонках ""Номенклатура"" и ""НоменклатураПредставление"" содержится информация о номенклатуре выполненных работ.
	|В колонках ""СуммаРасходов"", ""СуммаРасходовНУ"", ""СуммаРасходовЕНВД"" и ""СуммаРасходовНеУчитываетсяНУ"" содержится сумма остатка расходов на момент завершения работ.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ЗавершениеРабот");

	#КонецОбласти

	#Область УчетПроизводства

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ФактическаяСтоимостьВыпущеннойПродукции");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Фактическая стоимость выпущенной продукции'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит данные о фактической стоимости выпущенной продукции,
	|отраженные в регламентном документе ""Закрытие счетов производственных затрат"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ЗакрытиеСчетовПроизводственныхЗатрат");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВыпускПродукцииСоСчета106");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Выпуск продукции со счета 106.хИ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит данные о выпущенной продукции (таб.часть ""Продукция""),
	|дополненные данными о затратах на ее изготовление (таб.часть ""Затраты""),
	|по данным бухгалтерского учета, отраженным в документе ""Выпуск продукции со счета 106.хИ"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ВыпускПродукцииСоСчета106");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВыпускПродукцииСоСчета106НУ");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Выпуск продукции со счета 106.хИ (НУ)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит данные о выпущенной продукции (таб.часть ""Продукция""),
	|дополненные данными о затратах на ее изготовление (таб.часть ""Затраты""),
	|по данным налогового учета, отраженным в документе ""Выпуск продукции со счета 106.хИ"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ВыпускПродукцииСоСчета106");

	#КонецОбласти

	#Область УчетОсновныхСредств

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеОсновныхСредств");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление основных средств'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление основных средств'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов,ТаблицаРасчетовПриПоступленииОсновныхСредств";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеОС,ПоступлениеОСВПути,ПоступлениеОСИК");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВложенияВоВнеоборотныеАктивы");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Вложения во внеоборотные активы'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Вложения во внеоборотные активы'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеУслугРабот,ТребованиеНакладная0315006");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РеализацияОсновныхСредств");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Реализация основных средств'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Реализация основных средств'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПередачаГруппОбъектовОС,ПередачаЗдания,ПередачаОбъектаОС,ПередачаОбъектовОС");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПринятиеКУчетуОсновныхСредствПоКПС");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятие к учету основных средств (по КПС)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Распределение вложений по разным КПС по объектам ОС, НМА.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПринятиеКУчетуОбъектовОС");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПринятиеКУчетуОбъектовИК");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РешениеОПризнанииОбъектовОС");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "МодернизацияОсновныхСредств");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Модернизация основных средств'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Модернизация основных средств'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РеконструкцияОС");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РеконструкцияИК");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "МодернизацияОсновныхСредствПоКПС");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Модернизация основных средств (по КПС)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Распределение вложений по разным КПС по объектам ОС, НМА.'");
	ФункцияМодуля.ЗависитОтФункций = "МодернизацияОсновныхСредств";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РеконструкцияОС");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РеконструкцияИК");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВводОстатковОсновныхСредств");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Ввод остатков основных средств'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Ввод остатков основных средств'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ВводНачальныхОстатков,ВводНачальныхОстатковОС");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПереносВложенийВНФА");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица вложений'");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереносВложенийВНФА");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПеремещениеМеждуСчетамиНФА");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Перемещение между счетами ОС, НМА, НПА'");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "НакладнаяНаВнутреннееПеремещениеОС2");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ВнутреннееПеремещениеИК");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РешениеОбОценкеИмущества");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица ОС'");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РешениеОбОценкеИмущества");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеКапВложенийНУ");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание кап. вложений (НУ)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание (выбытие) вложений во внеоборотные активы в налоговом учете по налогу на прибыль (Н08).'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПередачаОбъектовОС,СписаниеОбъектовОС,СписаниеТранспорта,НакладнаяНаВнутреннееПеремещениеОС2");

	#КонецОбласти

	#Область УчетОсновныхСредств_ИмуществаКазны

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РеализацияОсновныхСредствИмуществаКазны");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Реализация основных средств имущества казны'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Реализация основных средств имущества казны'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПередачаОбъектовИК");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ИзменениеСтоимостиОС");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица ОС'");
	ФункцияМодуля.Описание	= "";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ИзменениеСтоимостиОС");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ИзменениеСтоимостиИК");

	#КонецОбласти

	#Область ГТДИмпорт

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаможенныеПлатежиПоМатериальнымЗапасам");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таможенные платежи по материальным запасам'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таможенные платежи (сборы, пошлины, НДС), связанные с приобретением материальных запасов'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаможенныеПлатежиПоВнеоборотнымАктивам");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таможенные платежи по внеоборотным активам'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таможенные платежи (сборы, пошлины, НДС), связанные с приобретением внеоборотных активов'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаможенныеШтрафы");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таможенные штрафы'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таможенные штрафы'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	#КонецОбласти

	#Область УчетРодительскойПлаты

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СводноеНачислениеКомпенсации");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Сводное начисление компенсации'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Начисление компенсации родительской платы сводно'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "НачислениеКомпенсацииРодительскойПлаты");

	#КонецОбласти

	#Область УчетФинансовыхВложений

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаВложенийВФинансовыеАктивы");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица вложений в финансовые активы'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица вложений в финансовые активы'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ФормированиеВложенийВФинансовыеАктивы");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РеализацияФинансовыхАктивов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Реализация финансовых активов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Реализация финансовых активов'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ВыбытиеФинансовыхВложений");

	#КонецОбласти

	#Область УчетГосударственногоДолгаВЦенныхБумагах

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаДляВыкупаЦенныхБумаг");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица для выкупа ценных бумаг'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица для выкупа ценных бумаг'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|КассовоеВыбытие,
	|ПлатежноеПоручение");

	#КонецОбласти

	#Область Обязательства

	// --- Принимаемые и принятые обязательства ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОбязательстваБюджет");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятые (принимаемые) обязательства по бюджетной деятельности'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Принятые (принимаемые) обязательства по бюджетной деятельности.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РегистрацияОбязательствИСведенийПоДоговорам");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОбязательстваВнеБюджет");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятые (принимаемые) обязательства по внебюджетной деятельности'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Принятые (принимаемые) обязательства по внебюджетной деятельности.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РегистрацияОбязательствИСведенийПоДоговорам");

	// ----- Поставщики ----

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПринятыеДенежныеОбязательства");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятые денежные обязательства'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Принятые денежные обязательства'");
	ФункцияМодуля.ЗависитОтФункций = "ПоступлениеМатериальныхЗапасов,ПоступлениеУслугРабот,ПоступлениеДопРасходов,ВложенияВоВнеоборотныеАктивы,ПоступлениеОсновныхСредств";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,
	|ПоступлениеМЗВПути,
	|ПоступлениеУслугРабот,
	|ПоступлениеОС,
	|ПоступлениеОСВПути,
	|ПоступлениеОСИК,
	|ГТДИмпорт,
	|ИзвещениеИсходящее,
	|НачислениеАмортизацииПравПользованияОС");

	// --- Отражение зарплаты в учете ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПринятыеДенежныеОбязательстваПоОплатеТруда");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятые денежные обязательства при отражении зарплаты в учете'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Принятые денежные обязательства по оплате труда и налогов с ФОТ.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ОтражениеЗарплатыВУчете");

	// ---- Проценты, пени, штрафы к уплате

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПринятыеДенежныеОбязательстваПоПроцентамПениШтрафамКУплате");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятые денежные обязательства по процентам, пени, штрафам к уплате'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Принятые денежные обязательства по процентам, пени, штрафам к уплате'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "НачислениеПроцентовПенейШтрафовКУплате");

	// --- Авансовый отчет

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "АвансовыйОтчет_ТаблицаКорректировкиДенежныхОбязательств");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Таблица корректировки денежных обязательств по Авансовому отчету'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Таблица содержит данные по отклонениям денежных обязательств, 
	|принятых по ""Заявлению на выдачу аванса"" и рассчитанных по таблице ""Израсходовано"" Авансового отчета.'");
	ФункцияМодуля.ЗависитОтФункций = "РасходыПоАвансовомуОтчету";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "АвансовыйОтчет");

	// ---- Фондовая касса

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ФондоваяКассаПринятыеДенежныеОбязательства");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятые денежные обязательства при поступлении денежных документов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Принятые денежные обязательства при поступлении денежных документов с оплатой после факта поступления'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСЗачетомАвансов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПриходныйОрдерФондовый");

	#КонецОбласти

	#Область УпрощеннаяСистемаНалогообложения

	// --- УСН: Поступление расходов ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеРасходовУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление расходов УСН'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление расходов УСН'");
	ФункцияМодуля.ЗависитОтФункций = "ПоступлениеМатериальныхЗапасов,ПоступлениеВозвратнойТары,ПоступлениеУслугРабот,ПоступлениеДопРасходов,ВложенияВоВнеоборотныеАктивы,ПоступлениеОсновныхСредств";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,ПоступлениеУслугРабот,ПоступлениеОС,НачислениеАмортизацииПравПользованияОС");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеМатериальныхЗапасовУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление материальных запасов (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление материальных запасов (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ПоступлениеРасходовУСН";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеВозвратнойТарыУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление возвратной тары (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление возвратной тары (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ПоступлениеРасходовУСН";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасходыУСНПоЭквайринговойОперации");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление расходов УСН (эквайринговая операция)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление расходов УСН (эквайринговая операция)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ЭквайринговаяОперация");

	// --- УСН: Ввод остатков ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВводОстатковРасходовУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Ввод остатков расходов (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Ввод остатков расходов (УСН)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ВводНачальныхОстатков");

	// --- УСН: Авансовый отчет ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасходыУСНПоАвансовомуОтчету");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление расходов УСН (авансовый отчет)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление расходов УСН (авансовый отчет)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"АвансовыйОтчет");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплаченныеРасходыУСНПоАвансовомуОтчету");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплата расходов УСН (авансовый отчет)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Оплата расходов УСН (авансовый отчет)'");
	ФункцияМодуля.ЗависитОтФункций = "РасходыУСНПоАвансовомуОтчету";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"АвансовыйОтчет");

	// --- УСН: Отчет о расходах подотчетного лица ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасходыУСНПоОтчетуОРасходахПодотчетногоЛица");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Поступление расходов УСН (отчет о расходах подотчетного лица)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Поступление расходов УСН (отчет о расходах подотчетного лица)'");
	ФункцияМодуля.ЗависитОтФункций = "РасходыПоОтчетуОРасходах";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ОтчетОРасходахПодотчетногоЛица");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплаченныеАвансомРасходыПодотчетнихЛицУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплаченные авансом расходы подотчетных лиц (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Признание расходов УСН  на сумму выданных авансов при отражении отчета о расходах подотчетного лица'");
	ФункцияМодуля.ЗависитОтФункций = "РасходыУСНПоОтчетуОРасходахПодотчетногоЛица";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ОтчетОРасходахПодотчетногоЛица");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплаченныеРасходыПодотчетнихЛицУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплаченные расходы подотчетных лиц (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Признание расходов УСН при погашении задолженности подотчетным лицам документами оплаты'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"РасходныйКассовыйОрдер,
	|ПлатежноеПоручение,
	|КассовоеВыбытие,
	|ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная");

	// --- УСН: Отражение зар. платы в учете ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасходыУСННаОплатуТрудаИНалогиСФОТ");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Расходы УСН на оплату труда и налоги с ФОТ'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Расходы УСН на оплату труда и уплату налогов с ФОТ'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовПоОплатеТруда";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ОтражениеЗарплатыВУчете");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "НачисленияЗаСчетНалоговыхПлатежейУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Начисления за счет налоговых платежей (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Начисления за счет налоговых платежей:
	|- в рамках обязательного социального страхования от НС и ПЗ;
	|- за счет средств государственного социального страхования.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ОтражениеЗарплатыВУчете");

	// --- УСН: Оплата поставщику: зачет авансов ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ЗачетАвансовПоставщикуУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Зачет авансов поставщику (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Зачет авансов поставщику (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ПоступлениеРасходовУСН,РасходыУСННаОплатуТрудаИНалогиСФОТ";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,ПоступлениеУслугРабот,ПоступлениеОС,ОтражениеЗарплатыВУчете,НачислениеАмортизацииПравПользованияОС");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплатаМатериальныхЗапасовЗаСчетАвансовПоставщикуУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплата материальных запасов за счет авансов поставщику (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Оплата материальных запасов за счет авансов поставщику (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ЗачетАвансовПоставщикуУСН";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплатаВозвратнойТарыЗаСчетАвансовПоставщикуУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплата возвратной тары за счет авансов поставщику (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Оплата возвратной тары за счет авансов поставщику (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ЗачетАвансовПоставщикуУСН";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ");

	// --- УСН: Оплата поставщику: погашение задолженности ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплатаПоставщикуУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплата поставщику (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Оплата поставщику (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСПогашениемЗадолженности";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"РасходныйКассовыйОрдер,
	|КассовоеВыбытие,
	|ПлатежноеПоручение,
	|ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная");

	// --- УСН: Уплата налогов и сборов ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасчетыПоНалогамИСборамУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Расчеты по налогам и сборам (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Расчеты по налогам и сборам (УСН)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"КассовоеПоступление,
	|КассовоеВыбытие,
	|ПлатежноеПоручение,
	|ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|СводнаяЗаявкаНаКассовыйРасход");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "УплатаНалоговИСборовУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Уплата налогов и сборов (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Уплата налогов и сборов (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "РасчетыПоНалогамИСборамУСН";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"КассовоеВыбытие,
	|ПлатежноеПоручение,
	|ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|СводнаяЗаявкаНаКассовыйРасход");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ЗачетОплатыНалоговИСборовУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Зачет оплаты налогов и сборов (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Зачет оплаты налогов и сборов (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ПоступлениеРасходовУСН,НачисленияЗаСчетНалоговыхПлатежейУСН";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,ПоступлениеОС,ПоступлениеУслугРабот,ОтражениеЗарплатыВУчете,НачислениеАмортизацииПравПользованияОС");

	// --- УСН: Списание материальных запасов ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеМатериальныхЗапасовУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание материальных запасов (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание материальных запасов (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "СписаниеМатериальныхЗапасов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"АктСписанияМЗ,
	|АктСписанияМягкогоИХозИнвентаря,
	|ВедомостьНаВыдачуМЗНаНуждыУчреждения,
	|МенюТребование,
	|НакладнаяНаОтпускМ15,
	|НакладнаяНаРеализациюТорг12,
	|РешениеОПрекращенииПризнанияАктивомМЗ,
	|ТаксировкаПутевогоЛиста,
	|ТаксировкаРабочегоЛистаАгрегата,
	|ТребованиеНакладная0315006");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеВозвратнойТарыУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание возвратной тары (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание возвратной тары (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "СписаниеВозвратнойТары";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"НакладнаяНаОтпускМ15,НакладнаяНаРеализациюТорг12");

	// --- УСН: Списание доп. расходов ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "СписаниеДопРасходовУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Списание доп. расходов (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Списание доп. расходов (УСН)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"СписаниеДопРасходовУСН");

	// --- УСН: Распределение расходов по видам деятельности ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РаспределениеРасходовПоВидамДеятельностиУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Распределение расходов по видам деятельности (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Распределение расходов по видам деятельности (УСН)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"РаспределениеРасходовПоВидамДеятельностиУСН");

	// --- УСН: Ввод остатков ОС и НМА ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВводОстатковОсновныхСредствУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Ввод остатков ОС, НМА (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Ввод остатков ОС, НМА (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "ВводОстатковОсновныхСредств";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ВводНачальныхОстатков,ВводНачальныхОстатковОС");

	// --- УСН: Принятие к учету ОС и НМА ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПринятиеКУчетуОсновныхСредствУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Принятие к учету ОС, НМА (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Принятие к учету ОС, НМА (УСН)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПринятиеКУчетуОС");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПринятиеКУчетуОбъектаОС");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПринятиеКУчетуЗдания");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПринятиеКУчетуОбъектовОС");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "РешениеОПризнанииОбъектовОС");

	// --- УСН: Модернизация ОС и НМА ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "МодернизацияОсновныхСредствУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Модернизация ОС, НМА (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Модернизация ОС, НМА (УСН)'");
	ФункцияМодуля.ЗависитОтФункций = "МодернизацияОсновныхСредств";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"РеконструкцияОС");

	// --- УСН: Ввод в эксплуатацию ОС ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ВводВЭксплуатациюОсновныхСредствУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Ввод в эксплуатацию ОС (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Ввод в эксплуатацию ОС (УСН)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ТребованиеНакладнаяОС");

	// --- УСН: Признание расходов на ОС и НМА ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПризнаниеРасходовНаОсновныеСредстваУСН");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Признание расходов на ОС и НМА (УСН)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Признание расходов на ОС и НМА (УСН)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"РасчетРасходовНаОСиНМАПриУСН");

	#КонецОбласти

	#Область УчетИностраннойВалюты

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеНаличныхСБанковскогоСчета_ПКО");
	ФункцияМодуля.Заголовок = НСтр("ru='Поступление наличных денежных средств с банковского счета'");
	ФункцияМодуля.Описание = НСтр("ru='Поступление наличных денежных средств с банковского счета'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПриходныйКассовыйОрдер");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасшифровкаПлатежаСРублевымЭквивалентом_РКО");
	ФункцияМодуля.Заголовок = НСтр("ru='Расшифровка платежа (с рублевыми эквивалентами)'");
	ФункцияМодуля.Описание = НСтр("ru='Расшифровка платежа (с рублевыми эквивалентами)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"РасходныйКассовыйОрдер");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "РасшифровкаПлатежаСРублевымЭквивалентом_ЗКР");
	ФункцияМодуля.Заголовок = НСтр("ru='Расшифровка платежа (с рублевыми эквивалентами по курсу выписки)'");
	ФункцияМодуля.Описание = НСтр("ru='Расшифровка платежа (с рублевыми эквивалентами по курсу выписки)'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ЗаявкаНаКассовыйРасход");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеСредствСоСчета20123_КассовоеПоступление");
	ФункцияМодуля.Заголовок = НСтр("ru='Зачисление денежных средств на банковский счет со счета 201.23'");
	ФункцияМодуля.Описание = НСтр("ru='Зачисление денежных средств на банковский счет со счета 201.23'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"КассовоеПоступление");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПеречислениеПодотчетнымЛицам_КассовоеВыбытие");
	ФункцияМодуля.Заголовок = НСтр("ru='Перечисление подотчетным лицам'");
	ФункцияМодуля.Описание = НСтр("ru='Перечисление подотчетным лицам'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"КассовоеВыбытие");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаКурсовыхРазницПоКФО");
	ФункцияМодуля.Заголовок = НСтр("ru='Таблица курсовых разниц при купле-продаже иностранной валюты в разрезе КФО'");
	ФункцияМодуля.Описание = НСтр("ru='Таблица курсовых разниц при купле-продаже иностранной валюты в разрезе КФО'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ПоручениеНаПокупкуВалюты,
	|ПоручениеНаПродажуВалюты,
	|КассовоеВыбытие,
	|КассовоеПоступление,
	|ПриходныйКассовыйОрдер");

	#КонецОбласти

	#Область КурсовыеРазницыНУ

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПереоценкаВалютныхОстатковНУ");
	ФункцияМодуля.Заголовок = НСтр("ru='Переоценка валютных остатков (НУ)'");
	ФункцияМодуля.Описание = НСтр("ru='Переоценка валютных остатков (НУ) регламентным документом переоценки валютных остатков'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПереоценкаВалютныхОстатков");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОтражениеОтложенныхКурсовыхРазницНУ");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Отражение отложенных курсовых разниц (НУ)'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Отражение отложенных курсовых разниц (НУ) при погашении задолженности документами движения денежных средств'");
	ФункцияМодуля.ЗависитОтФункций = "ТаблицаРасчетовСПогашениемЗадолженности";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПриходныйКассовыйОрдер,
	|РасходныйКассовыйОрдер,
	|КассовоеПоступление,
	|КассовоеВыбытие,
	|ЗаявкаНаКассовыйРасход");

	#КонецОбласти

	#Область КонтрольИсполненияДоговоров

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплатаПоставщикамКредиторам");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплата поставщикам, кредиторам'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Формирование движений по регистру ""Оплата поставщикам, кредиторам"".'");
	ФункцияМодуля.ЗависитОтФункций =
	"ТаблицаРасчетовСПогашениемЗадолженности";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПриходныйКассовыйОрдер,
	|РасходныйКассовыйОрдер,
	|КассовоеПоступление,
	|КассовоеВыбытие,
	|ПлатежноеПоручение,
	|ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ОплатаОтПокупателейДебиторов");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Оплата от покупателей, дебиторов'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Формирование движений по регистру ""Оплата от покупателей, дебиторов"".'");
	ФункцияМодуля.ЗависитОтФункций =
	"ТаблицаРасчетовСПогашениемЗадолженности";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПриходныйКассовыйОрдер,
	|РасходныйКассовыйОрдер,
	|КассовоеПоступление,
	|КассовоеВыбытие,
	|ПереносОплатыОбразование,
	|ПлатежноеПоручение,
	|ЗаявкаНаВозврат,
	|ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|ЭквайринговаяОперация");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ИсполнениеОбязательствПоставщиками");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Исполнение обязательств поставщиками'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Формирование движений по регистру ""Исполнение обязательств поставщиками"".'");
	ФункцияМодуля.ЗависитОтФункций =
	"ПоступлениеМатериальныхЗапасов,
	|ВозвратМатериальныхЗапасовПоставщику,
	|ПоступлениеУслугРабот,
	|ПоступлениеДопРасходов,
	|ПоступлениеОсновныхСредств,
	|ВложенияВоВнеоборотныеАктивы,
	|ТаблицаВложенийВФинансовыеАктивы";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"ПоступлениеМЗ,
	|ПоступлениеМЗВПути,
	|ПоступлениеУслугРабот,
	|ПоступлениеОС,
	|ПоступлениеОСВПути,
	|ПоступлениеОСИК,
	|НакладнаяНаОтпускМ15,
	|НачислениеАмортизацииПравПользованияОС,
	|ФормированиеВложенийВФинансовыеАктивы");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ИсполнениеДоговоровСПокупателями");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Исполнение договоров с покупателями'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Формирование движений по регистру ""Исполнение договоров с покупателями"".'");
	ФункцияМодуля.ЗависитОтФункций =
	"РеализацияМатериальныхЗапасов,
	|РеализацияМатериальныхЗапасовИмуществаКазны,
	|РеализацияОсновныхСредств,
	|РеализацияУслугРабот,
	|РеализацияФинансовыхАктивов";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля,
	"АктОбОказанииУслуг,
	|НакладнаяНаОтпускИК,
	|НакладнаяНаОтпускМ15,
	|НакладнаяНаРеализациюТорг12,
	|НачислениеДоходов,
	|НачислениеЗаУслугиОбразования,
	|НачислениеСтудентамЗаПрочиеУслуги,
	|ПередачаОбъектовИК,
	|ПередачаОбъектовОС,
	|СписаниеДоходовБудущихПериодов,
	|ВыбытиеФинансовыхВложений");

	#КонецОбласти

	#Область Извещения

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПодтверждениеПолученияНФА");
	ФункцияМодуля.Заголовок	= НСтр("ru = 'Подтверждение получения НФА'");
	ФункцияМодуля.Описание	= НСтр("ru = 'Включает данные табличных частей ""Основные средства"", ""Материалы"", ""Возвратная тара"".
	|Выполняет контроль суммы остатков.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ИзвещениеВходящее");

	#КонецОбласти

	#Область УстаревшиеПроцедурыИФункции

	// --- Расчеты с контрагентами при поступлении основных средств ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовПриПоступленииОсновныхСредств");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Расчеты с контрагентами (поступление основных средств)'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Таблица расчетов для зачета авансов и увеличения задолженности при поступлении ОС, НМА, НПА.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеОС,ПоступлениеОСВПути");

	// --- Зачет аванса МЗ ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаЗачетаАванса_МЗ");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица зачета аванса'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Возвращает таблицу для зачета аванса, по текущему документу.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеМЗ,ПоступлениеМЗВПути");

	ОбщийЗаголовок = НСтр("ru = '(устарела) Табличная часть ""%1"", скорректированная на суммы зачета валютного аванса'");										
	ОбщееОписание = НСтр("ru = '(устарела) К указанной табличной части добавляются колонки, содержащие рублевые суммы.
	|Если документ формирует проводки зачета аванса выданного, то рублевые суммы
	|складываются из рублевых сумм зачета аванса (по курсу аванса) и рублевых сумм
	|по курсу документа.
	|Колонки добавляются с постфиксом ""_ВРублях"" в имени.
	|Например, ""Всего_ВРублях"".'");

	// --- Поступление МЗ; Поступление МЗ (в пути) ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеМЗ_Материалы_СЗачетомАванса");
	ФункцияМодуля.Заголовок	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОбщийЗаголовок, "Материалы");
	ФункцияМодуля.Описание	= ОбщееОписание;
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеМЗ,ПоступлениеМЗВПути");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеМЗ_ВозвратнаяТара_СЗачетомАванса");
	ФункцияМодуля.Заголовок	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОбщийЗаголовок, "Возвратная тара");
	ФункцияМодуля.Описание	= ОбщееОписание;
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеМЗ,ПоступлениеМЗВПути");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаПринятияДенежногоОбязательства_МЗ");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица принятия денежного обязательства'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Скорректированные на суммы зачета валютного аванса суммы из таблиц ""Материалы"" и ""Возвратная тара"", свернутые по ""КПС"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеМЗ,ПоступлениеМЗВПути");

	// --- Накладная на отпуск М-15: Возврат поставщику ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "НакладнаяНаОтпускМ15_Материалы_ВозвратПоставщику");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица ""Материалы"" для возврата поставщику'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Таблица содержит данные таблицы ""Материалы"", пересчитанные по курсу документа и дополненные колонками ""Всего_ВРублях"", ""СуммаНДС_ВРублях"".
	|В колонке ""СчетУчетаНУ"" содержится счет налогового учета, соответствующий счету бухгалтерского учета, указанному в таблице ""Материалы"".
	|В колонках ""Стоимость"", ""СтоимостьНУ"", ""СтоимостьНеУчитываетсяНУ"" и ""СтоимостьЕНВД"" содержится учетная стоимость (стоимость списания) материальных запасов.
	|В колонках ""РазницаСтоимости"", ""РазницаСтоимостиНУ"" содержится разница между учетной стоимостью материальных запасов и стоимостью возврата, указанной в таблице ""Материалы"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "НакладнаяНаОтпускМ15");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "НакладнаяНаОтпускМ15_ВозвратнаяТара_ВозвратПоставщику");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица ""Возвратная тара"" для возврата поставщику'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Таблица содержит данные таблицы ""Возвратная тара"", пересчитанные по курсу документа и дополненные колонками ""Сумма_ВРублях"".
	|В колонке ""СчетУчетаНУ"" содержится счет налогового учета, соответствующий счету бухгалтерского учета, указанному в таблице ""Возвратная тара"".
	|В колонках ""Стоимость"", ""СтоимостьНУ"", ""СтоимостьНеУчитываетсяНУ"" и ""СтоимостьЕНВД"" содержится учетная стоимость (стоимость списания) возвратной тары.
	|В колонках ""РазницаСтоимости"", ""РазницаСтоимостиНУ"" содержится разница между учетной стоимостью тары и стоимостью возврата, указанной в таблице ""Возвратная тара"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "НакладнаяНаОтпускМ15");

	// --- Поступление услуг, работ

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаЗачетаАванса_ПоступлениеУслуг");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица зачета аванса'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Возвращает таблицу для зачета аванса, по текущему документу.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеУслугРабот");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеУслуг_УслугиИРаботы_СЗачетомАванса");
	ФункцияМодуля.Заголовок	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОбщийЗаголовок, "Услуги и работы");
	ФункцияМодуля.Описание	= ОбщееОписание;
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеУслугРабот");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаПринятияДенежногоОбязательства_ПоступлениеУслуг");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица принятия денежного обязательства'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Скорректированные на суммы зачета валютного аванса суммы из таблицы ""Услуги и работы"", свернутые по ""КПС"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеУслугРабот");

	// --- Поступление ОС; Поступление ОС (в пути) ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаЗачетаАванса_ОС");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица зачета аванса'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Возвращает таблицу для зачета аванса, по текущему документу.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеОС,ПоступлениеОСВПути");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ПоступлениеОС_КапВложения_СЗачетомАванса");
	ФункцияМодуля.Заголовок	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОбщийЗаголовок, "Капитальные вложения");
	ФункцияМодуля.Описание	= ОбщееОписание;
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеОС,ПоступлениеОСВПути");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаПринятияДенежногоОбязательства_ПоступлениеОС");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица принятия денежного обязательства'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Скорректированные на суммы зачета валютного аванса суммы из таблицы ""Капитальные вложения"", свернутые по ""КПС"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПоступлениеОС,ПоступлениеОСВПути");

	// --- ПКО фондовый ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаЗачетаАванса_ПКО");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица зачета аванса'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Возвращает таблицу для зачета аванса, по текущему документу.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ПриходныйОрдерФондовый");

	// --- Таможенная декларация по импорту ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаЗачетаАванса_ГТДИмпорт");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица зачета аванса'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Возвращает таблицу для зачета аванса, по текущему документу.'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ГТДИмпорт_Материалы_СЗачетомАванса");
	ФункцияМодуля.Заголовок	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОбщийЗаголовок, "Материалы");
	ФункцияМодуля.Описание	= ОбщееОписание;
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ГТДИмпорт_ОсновныеСредства_СЗачетомАванса");
	ФункцияМодуля.Заголовок	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ОбщийЗаголовок, "Основные средства");
	ФункцияМодуля.Описание	= ОбщееОписание;
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ГТДИмпорт_Штрафы_СЗачетомАванса");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Суммы штрафов, скорректированные на суммы зачета аванса (валютного аванса)'");;
	ФункцияМодуля.Описание	= "(устарела)";
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаПринятияДенежногоОбязательства_ГТДИмпорт");
	ФункцияМодуля.Заголовок	= НСтр("ru = '(устарела) Таблица принятия денежного обязательства'");
	ФункцияМодуля.Описание	= НСтр("ru = '(устарела) Скорректированные на суммы зачета аванса суммы из таблиц ""Основные средства"", ""Материалы"" и полей ""Сумма штрафа"" и ""Сумма штрафа (Вал)"", свернутые по ""КПС"" и ""КЭК"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, "ГТДИмпорт");

	// --- Перечисление денежных средств по ведомости в банк ---

	ФункцияМодуля = ДобавитьЗаголовокОписанияФункции(ВсеФункцииМодуля, "ТаблицаРасчетовССотрудникамиПоВедомости");
	ФункцияМодуля.Заголовок = НСтр("ru='(устарела) Расчеты с сотрудниками по ведомости перечислений'");
	ФункцияМодуля.Описание = НСтр("ru='(устарела) Таблица расчетов с сотрудниками для перечисления денежных средств по ведомости перечислений.
	|Для расчетно-платежных документов, сформированных на основании документа ""Ведомость в банк"".'");
	ДобавитьТипыДокументовВОбъявлениеФункции(ФункцияМодуля, 
	"ЗаявкаНаКассовыйРасход,
	|ЗаявкаНаКассовыйРасходСокращенная,
	|КассовоеВыбытие,
	|ПлатежноеПоручение");

	#КонецОбласти

	Возврат ВсеФункцииМодуля;

КонецФункции

Функция ТаблицаРасчетовСЗачетомАвансовРешениеОПризнанииОС(ВариантВызова, ИсточникиДанных, ТиповаяОперация, Параметры)
	
	Если ВариантВызова = "ПолучитьПараметры" Тогда
		
		ПараметрыФункции = Новый Массив;
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "ИФО",                Новый ОписаниеТипов("СправочникСсылка.ИсточникиФинансовогоОбеспечения"));
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "КФО",                Новый ОписаниеТипов("ПеречислениеСсылка.КВД"));
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "КПС",                Новый ОписаниеТипов("СправочникСсылка.КлассификационныеПризнакиСчетов"));
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "Подразделение",      Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "СчетРасчетов",       Новый ОписаниеТипов("ПланСчетовСсылка.ЕПСБУ"));
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "СпособЗачетаАванса", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыЗачетаАвансов"));
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "Договор",			 Новый ОписаниеТипов("СправочникСсылка.Договоры"));
		ДобавитьОписаниеПараметраФункции(ПараметрыФункции, "Контрагент",		 Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));

		
		Возврат ПараметрыФункции;
		
	КонецЕсли;
	
	ПоляФункции = Новый Массив;
	
	ТаблицаРасчетов = УчетРасчетов.ПустаяТаблицаРасчетовСЗачетомАвансов();
	Для Каждого Колонка Из ТаблицаРасчетов.Колонки Цикл
		ДобавитьПолеРезультатаФункции(ПоляФункции, Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	
	Если ВариантВызова = "ПолучитьПоля" Тогда
		Возврат ПоляФункции;
	КонецЕсли;
	
	Если ВариантВызова <> "Выполнить" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Отказ = Ложь;
	
	ДокументОбъект = ИсточникиДанных.ДокументОбъект;
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Ссылка",          ДокументОбъект.Ссылка);
	Реквизиты.Вставить("Организация",     ДокументОбъект.Организация);
	Реквизиты.Вставить("Дата",            ДокументОбъект.Дата);
	Реквизиты.Вставить("ТиповаяОперация", ТиповаяОперация);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "НомерКорректировки")
		И ДокументОбъект.НомерКорректировки > 0 Тогда
		
		Реквизиты.Вставить("НомерКорректировки", ДокументОбъект.НомерКорректировки);
		Реквизиты.Вставить("КорректируемыйДокумент", ДокументОбъект.ДокументОснование);
	КонецЕсли;
	
	Для Каждого Параметр Из Параметры Цикл
		Реквизиты.Вставить(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	//КонтекстПроведения = БухгалтерскиеОперацииСервер.ПолучитьКонтекстЗаполненияОперации();
	//Реквизиты.Вставить("Курс",      КонтекстПроведения.Курс);
	//Реквизиты.Вставить("Кратность", КонтекстПроведения.Кратность);
	
	ТаблицаДокумента = УчетРасчетов.ПодготовитьТаблицуРасчетовПоДокументуРешениеОПризнанииОС(
		ДокументОбъект, Параметры, Отказ);
		
	ТаблицаЗачетАвансовПоДокументу = УчетРасчетов.ПодготовитьТаблицуЗачетАвансовПоДокументу(
		ДокументОбъект, Реквизиты);
	
	Если НЕ Отказ Тогда
	
		// Подготовим таблицу для отражения зачета авансов и увеличения (уменьшения) задолженности
		// документами поступления и реализации материальных запасов, услуг, ОС и пр.
		ТаблицаРасчетов = УчетРасчетов.ТаблицаРасчетовСЗачетомАвансов(
			ТаблицаДокумента,
			ТаблицаЗачетАвансовПоДокументу,
			Реквизиты, Отказ);
		
	КонецЕсли;
	
	// Сохраним таблицу для формирования других источников данных.
	КонтекстПроведения = БухгалтерскиеОперацииСервер.ПолучитьКонтекстЗаполненияОперации();
	КонтекстПроведения.ДополнительныеСвойства.Вставить(
		"ТаблицаРасчетовСЗачетомАвансов", ТаблицаРасчетов.Скопировать());
	КонтекстПроведения.Отказ = КонтекстПроведения.Отказ ИЛИ Отказ;
	БухгалтерскиеОперацииСервер.СохранитьКонтекстЗаполненияОперации(КонтекстПроведения);
	
	Возврат ТаблицаРасчетов;
	
КонецФункции

&ИзменениеИКонтроль("ВыполнитьФункциюПолученияИсточникаДанных")
Функция АБК_ВыполнитьФункциюПолученияИсточникаДанных(ИмяФункции, ИсточникиДанных, ТиповаяОперация, Параметры)

	СоставИмениФункции = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ИмяФункции);
	Если СоставИмениФункции.Количество() = 1 Тогда
		ТаблицаИсточника = Вычислить(ИмяФункции + "(""Выполнить"", ИсточникиДанных, ТиповаяОперация, Параметры)");
	ИначеЕсли СоставИмениФункции.Количество() = 2 Тогда

		Если СоставИмениФункции[0] = ПрефиксФункцийПереопределяемогоМодуля() Тогда

			ТаблицаИсточника = БухгалтерскиеОперацииИсточникиДанныхПереопределяемый.ВыполнитьФункциюПолученияИсточникаДанных(
			СоставИмениФункции[1], ИсточникиДанных, ТиповаяОперация, Параметры);

		ИначеЕсли БухгалтерскиеОперацииСервер.ОписанияМодулейРасширений("ИсточникиДанных")
			.Свойство(СоставИмениФункции[0]) Тогда

			ОбщийМодуль = ОбщегоНазначения.ОбщийМодуль(СоставИмениФункции[0]);
			Попытка
				ТаблицаИсточника = ОбщийМодуль.ВыполнитьФункциюПолученияИсточникаДанных(
				СоставИмениФункции[1],
				"Выполнить",
				ИсточникиДанных,
				ТиповаяОперация,
				Параметры);
			Исключение
				ЗаписьЖурналаРегистрации(БухгалтерскиеОперацииСервер.СобытиеЖурналаРегистрацииВычислениеИсточникаДанных(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Справочники.ТиповыеОперации,
				ТиповаяОперация,
				СтрШаблон(НСтр("ru = 'Ошибка при вычислении источника данных в функции ""%1""'"), ИмяФункции));
				ВызватьИсключение;
			КонецПопытки;

		Иначе

			ТекстИсключения = СтрШаблон(НСтр("ru = 'Для использования типовой операции должно быть подключено расширение,
			|содержащее модуль ""%1"".
			|Расширение должно быть подключено не в безопасном режиме.
			|
			|Проверьте подключение расширения или выберите другую типовую операцию.'"), СоставИмениФункции[0]);
			ВызватьИсключение ТекстИсключения;

		КонецЕсли;

	КонецЕсли;

	Возврат ТаблицаИсточника;

КонецФункции

&ИзменениеИКонтроль("ЗаполнитьПоляИПараметрыФункции")
Процедура АБК_ЗаполнитьПоляИПараметрыФункции(ОписаниеФункции)

	ЧастиИмени = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(ОписаниеФункции.Имя);
	Если ЧастиИмени.Количество() = 1 Тогда
		ШаблонИмени = "%ИмяФункции%(%1, Неопределено, Неопределено, Неопределено)";
		ВызываемаяФункция = СтрЗаменить(ШаблонИмени, "%ИмяФункции%", ЧастиИмени[0]);
	ИначеЕсли ЧастиИмени.Количество() = 2 Тогда
		ШаблонИмени = "%ИмяМодуля%.ВыполнитьФункциюПолученияИсточникаДанных(""%ИмяФункции%"", %1, Неопределено, Неопределено, Неопределено)";
		ВызываемаяФункция = СтрЗаменить(ШаблонИмени, "%ИмяМодуля%", ЧастиИмени[0]);
		ВызываемаяФункция = СтрЗаменить(ВызываемаяФункция, "%ИмяФункции%", ЧастиИмени[1]);
	Иначе
		ВызватьИсключение "Не правильный формат имени функции доп. источника: " + ОписаниеФункции.Имя;
	КонецЕсли;

	Поля = Вычислить(СтрШаблон(ВызываемаяФункция, """ПолучитьПоля"""));
	Если ТипЗнч(Поля) = Тип("Массив") Тогда
		ОписаниеФункции.Поля = Поля;
	КонецЕсли;

	Параметры = Вычислить(СтрШаблон(ВызываемаяФункция, """ПолучитьПараметры"""));
	Если ТипЗнч(Параметры) = Тип("Массив") Тогда
		ОписаниеФункции.Параметры = Параметры;
	КонецЕсли;

КонецПроцедуры

