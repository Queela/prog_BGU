  
&НаСервере
Процедура АБК_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	ОбновитьТаблицуКлассификацияРасходов(ЭтаФорма);
	ОбновитьТаблицуФинансовоеОбеспечение();
КонецПроцедуры

&НаСервере
Процедура АБК_ПриЧтенииНаСервереПосле(ТекущийОбъект)
	ОбновитьТаблицуКлассификацияРасходов(ЭтаФорма);
	ОбновитьТаблицуФинансовоеОбеспечение();
КонецПроцедуры
  
&НаСервере
&После("ПодготовитьФормуНаСервере")
Процедура АБК_ПодготовитьФормуНаСервере()
	ТипИФО = Новый ОписаниеТипов("СправочникСсылка.ИсточникиФинансовогоОбеспечения");   
	
	Если Элементы.Найти("КлассификацияРасходовИФО") = Неопределено Тогда
		
		ДобРеквизиты = Новый Массив;
		ДобРеквизиты.Добавить(Новый РеквизитФормы("АБК_ИФО",ТипИФО,"КлассификацияРасходов","ИФО"));
		ИзменитьРеквизиты(ДобРеквизиты);
		
		нЭлемент = Элементы.Добавить("КлассификацияРасходовИФО",Тип("ПолеФормы"),Элементы.КлассификацияРасходов);
		нЭлемент.ПутьКДанным = "КлассификацияРасходов.АБК_ИФО";
		нЭлемент.Вид = ВидПоляФормы.ПолеВвода;     
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
&ИзменениеИКонтроль("ОбновитьТаблицуФинансовоеОбеспечение")
Процедура АБК_ОбновитьТаблицуФинансовоеОбеспечение()
	
	ЭтоИзменение = ЗначениеЗаполнено(Объект.ДокументОснование);
	#Вставка 
	ФинОбеспечениеИФО = РасчетыСПодотчетнымиЛицами_ИФО.ПолучитьИмяРеквизитаДопКолонки(ЭтаФорма,"ФинансовоеОбеспечение","ИФО");   
	#КонецВставки
	ТекущаяТаблицаФО = Объект.ФинансовоеОбеспечение.Выгрузить();
	
	НоваяТаблицаФО = ТекущаяТаблицаФО.Скопировать();
	НоваяТаблицаФО.Очистить();
	
	Объект.ФинансовоеОбеспечение.Очистить();
	
	МассивТЧ = Новый Массив;
	МассивТЧ.Добавить("УсловияПроезда");
	МассивТЧ.Добавить("УсловияПроживания");
	МассивТЧ.Добавить("Суточные");
	МассивТЧ.Добавить("ПрочиеРасходы");
	
	Для Каждого ТЧ Из МассивТЧ Цикл  
		#Вставка     
		ТЧ_ИФО = РасчетыСПодотчетнымиЛицами_ИФО.ПолучитьИмяРеквизитаДопКолонки(ЭтаФорма,ТЧ,"ИФО");
		#КонецВставки
		Для Каждого СтрокаТЧ Из Объект[ТЧ] Цикл
			Если СтрокаТЧ.СпособОбеспечения <> ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.АвансПодотчетномуЛицу")
				И СтрокаТЧ.СпособОбеспечения <> ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.ВозмещениеПоФакту") Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрокаФО = НоваяТаблицаФО.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаФО, СтрокаТЧ);
			НоваяСтрокаФО.Сумма = Документы.РешениеОКомандировании.СуммаВРублевомЭквиваленте(СтрокаТЧ.Сумма, СтрокаТЧ.Валюта, Объект.КурсыВалют);
			Если СтрокаТЧ.СпособОбеспечения = ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.АвансПодотчетномуЛицу") Тогда
				НоваяСтрокаФО.СуммаАванса = НоваяСтрокаФО.Сумма;
			КонецЕсли;
			#Вставка     
			Если ЗначениеЗаполнено(ФинОбеспечениеИФО) И ЗначениеЗаполнено(ТЧ_ИФО) Тогда 
				
				НоваяСтрокаФО[ФинОбеспечениеИФО] = СтрокаТЧ[ТЧ_ИФО];
				
			КонецЕсли;
			#КонецВставки
		КонецЦикла;
	КонецЦикла;
	#Удаление
	НоваяТаблицаФО.Свернуть("КФО, КПС, КЭК, КодЦели, КодМероприятия, ДопКлассификация", "Сумма, СуммаАванса");
	#КонецУдаления
	#Вставка
	Если ЗначениеЗаполнено(ФинОбеспечениеИФО) Тогда 
		НоваяТаблицаФО.Свернуть("КФО, КПС, КЭК, КодЦели, КодМероприятия, ДопКлассификация," + ФинОбеспечениеИФО, "Сумма, СуммаАванса");
	Иначе 
		НоваяТаблицаФО.Свернуть("КФО, КПС, КЭК, КодЦели, КодМероприятия, ДопКлассификация", "Сумма, СуммаАванса");
	КонецЕсли;
	#КонецВставки
	Для Каждого СтрокаФО Из НоваяТаблицаФО Цикл
		
		НоваяСтрока = Объект.ФинансовоеОбеспечение.Добавить();
		#Удаление
		Отбор = Новый Структура("КФО, КПС, КЭК, КодЦели, КодМероприятия, ДопКлассификация",
		СтрокаФО.КФО, СтрокаФО.КПС, СтрокаФО.КЭК, СтрокаФО.КодЦели, СтрокаФО.КодМероприятия, СтрокаФО.ДопКлассификация);
		#КонецУдаления
		#Вставка     
		Если ЗначениеЗаполнено(ФинОбеспечениеИФО) Тогда 
			Отбор = Новый Структура("КФО, КПС, КЭК, КодЦели, КодМероприятия, ДопКлассификация," + ФинОбеспечениеИФО,
			СтрокаФО.КФО, СтрокаФО.КПС, СтрокаФО.КЭК, СтрокаФО.КодЦели, СтрокаФО.КодМероприятия, СтрокаФО.ДопКлассификация, СтрокаФО[ФинОбеспечениеИФО]);
		Иначе 
			Отбор = Новый Структура("КФО, КПС, КЭК, КодЦели, КодМероприятия, ДопКлассификация",
			СтрокаФО.КФО, СтрокаФО.КПС, СтрокаФО.КЭК, СтрокаФО.КодЦели, СтрокаФО.КодМероприятия, СтрокаФО.ДопКлассификация);
		КонецЕсли;
		#КонецВставки
		ИмеющиесяСтроки = ТекущаяТаблицаФО.НайтиСтроки(Отбор);
		Если ИмеющиесяСтроки.Количество() = 1 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИмеющиесяСтроки[0]);
			ИсходнаяСумма = ИмеющиесяСтроки[0].Сумма - ИмеющиесяСтроки[0].Изменение;
			ИсходнаяСуммаАванса = ИмеющиесяСтроки[0].СуммаАванса - ИмеющиесяСтроки[0].ИзменениеАванса;
			ТекущаяТаблицаФО.Удалить(ИмеющиесяСтроки[0]);
		Иначе
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаФО);
			НоваяСтрока.ФинансовыйГод = Год(Объект.Дата);
			ИсходнаяСумма = 0;
			ИсходнаяСуммаАванса = 0;
		КонецЕсли;
		
		НоваяСтрока.Сумма = СтрокаФО.Сумма;
		НоваяСтрока.Изменение = ?(ЭтоИзменение, СтрокаФО.Сумма - ИсходнаяСумма, 0);
		НоваяСтрока.СуммаАванса = СтрокаФО.СуммаАванса;
		НоваяСтрока.ИзменениеАванса = ?(ЭтоИзменение, СтрокаФО.СуммаАванса - ИсходнаяСуммаАванса, 0);
		
	КонецЦикла;
	
	// Если в исходной таблице остались строки, то значит, этой классификации больше нет - всю сумму записывем в изменение
	Если ЭтоИзменение Тогда
		Для Каждого СтрокаФО Из ТекущаяТаблицаФО Цикл
			Если СтрокаФО.Сумма = СтрокаФО.Изменение Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = Объект.ФинансовоеОбеспечение.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаФО);
			НоваяСтрока.Сумма = 0;
			НоваяСтрока.Изменение = - СтрокаФО.Сумма + СтрокаФО.Изменение;
			НоваяСтрока.СуммаАванса = 0;
			НоваяСтрока.ИзменениеАванса = - СтрокаФО.СуммаАванса + СтрокаФО.ИзменениеАванса;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
&ИзменениеИКонтроль("ОбновитьТаблицуКлассификацияРасходов")
Процедура АБК_ОбновитьТаблицуКлассификацияРасходов(Форма)

	Форма.КлассификацияРасходов.Очистить();

	МассивТЧ = Новый Массив;
	МассивТЧ.Добавить("Суточные");
	МассивТЧ.Добавить("УсловияПроезда");
	МассивТЧ.Добавить("УсловияПроживания");
	МассивТЧ.Добавить("ПрочиеРасходы");

	НомерСтроки = 1;
	Для Каждого ТЧ Из МассивТЧ Цикл  
		#Вставка  
		ТЧ_ИФО = ""; 
		Если Форма.Элементы.Найти("КлассификацияРасходовИФО") <> Неопределено Тогда 
			
			НайденныеСтроки = Форма.БухгалтерскиеОперации_ДобавленныеРеквизитыОперации.НайтиСтроки(Новый Структура("ИмяДляФормулы,ИмяТаблицы","ИФО",ТЧ));
			
			Если НайденныеСтроки.Количество() Тогда 
				ТЧ_ИФО = НайденныеСтроки[0].ИмяРеквизита;
			КонецЕсли;
			
		КонецЕсли;
		#КонецВставки
		Для Каждого СтрокаТЧ Из Форма.Объект[ТЧ] Цикл
			Если СтрокаТЧ.СпособОбеспечения <> ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.АвансПодотчетномуЛицу")
				И СтрокаТЧ.СпособОбеспечения <> ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.ВозмещениеПоФакту") Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТЧ.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			НоваяСтрока = Форма.КлассификацияРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ); 
			#Вставка     
			Если ЗначениеЗаполнено(ТЧ_ИФО) Тогда 
				НоваяСтрока.АБК_ИФО = СтрокаТЧ[ТЧ_ИФО];	
			КонецЕсли;
			#КонецВставки
			НоваяСтрока.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры   

&НаКлиенте
&ИзменениеИКонтроль("КлассификацияРасходовПриИзменении")
Процедура АБК_КлассификацияРасходовПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.КлассификацияРасходов.ТекущиеДанные;

	МассивТЧ = Новый Массив;
	МассивТЧ.Добавить("Суточные");
	МассивТЧ.Добавить("УсловияПроезда");
	МассивТЧ.Добавить("УсловияПроживания");
	МассивТЧ.Добавить("ПрочиеРасходы");

	Для Каждого ТЧ Из МассивТЧ Цикл   
		#Вставка  
		ТЧ_ИФО = ""; 
		Если Элементы.Найти("КлассификацияРасходовИФО") <> Неопределено Тогда 
			
			НайденныеСтроки = ЭтаФорма.БухгалтерскиеОперации_ДобавленныеРеквизитыОперации.НайтиСтроки(Новый Структура("ИмяДляФормулы,ИмяТаблицы","ИФО",ТЧ));
			
			Если НайденныеСтроки.Количество() Тогда 
				ТЧ_ИФО = НайденныеСтроки[0].ИмяРеквизита;
			КонецЕсли;
			
		КонецЕсли;
		#КонецВставки
		Для Каждого СтрокаТЧ Из Объект[ТЧ] Цикл
			Если СтрокаТЧ.ИдентификаторСтроки = ТекущаяСтрока.ИдентификаторСтроки Тогда
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, ТекущаяСтрока, "КФО, КПС, КЭК, КодЦели, КодМероприятия, ДопКлассификация"); 
				#Вставка
				Если ЗначениеЗаполнено(ТЧ_ИФО) Тогда 
					СтрокаТЧ[ТЧ_ИФО] = ТекущаяСтрока.АБК_ИФО;	
				КонецЕсли;
				#КонецВставки
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	ОбновитьТаблицуФинансовоеОбеспечение();

КонецПроцедуры



