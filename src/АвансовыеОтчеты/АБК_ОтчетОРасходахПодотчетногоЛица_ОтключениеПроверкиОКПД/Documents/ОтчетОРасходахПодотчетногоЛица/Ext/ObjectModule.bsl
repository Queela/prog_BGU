
&ИзменениеИКонтроль("ПередЗаписью")
Процедура АБК_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	#Удаление
	// Проверка на непревышение суммы и количества относительно заявки-обоснования закупки малого объема
	Если ЗначениеЗаполнено(ДокументОснование)
		И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаОбоснованиеЗакупкиМалогоОбъема") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Номенклатура КАК Номенклатура,
		|	СУММА(ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Количество) КАК Количество,
		|	СУММА(ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Сумма) КАК Сумма,
		|	СУММА(ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Сумма) / СУММА(ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Количество) КАК Цена
		|ИЗ
		|	Документ.ЗаявкаОбоснованиеЗакупкиМалогоОбъема.ТоварыРаботыУслуги КАК ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги
		|ГДЕ
		|	ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Номенклатура";
		Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
		
		ДанныеЗаявки = Запрос.Выполнить().Выгрузить();
		
		ДанныеОтчета = ТоварыРаботыУслуги.Выгрузить(, "Номенклатура, Количество, СуммаПринято");
		ДанныеОтчета.Свернуть("Номенклатура", "Количество, СуммаПринято");
		ДанныеОтчета.Колонки.Добавить("Цена");
		Для Каждого СтрокаОтчета Из ДанныеОтчета Цикл
			СтрокаОтчета.Цена = ?(СтрокаОтчета.Количество > 0, СтрокаОтчета.СуммаПринято / СтрокаОтчета.Количество, 0)
		КонецЦикла;
		
		Для Каждого СтрокаОтчета Из ДанныеОтчета Цикл
			СтрокаЗаявки = ДанныеЗаявки.Найти(СтрокаОтчета.Номенклатура, "Номенклатура");
			Если СтрокаЗаявки = Неопределено Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В исходной Заявке-обосновании отсутствует номенклатура ""%1""'"),
					СтрокаОтчета.Номенклатура);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
			Если СтрокаЗаявки.Количество < СтрокаОтчета.Количество Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В исходной Заявке-обосновании указана номенклатура ""%1"" в количестве %2, а в Отчете - %3'"),
					СтрокаОтчета.Номенклатура, СтрокаЗаявки.Количество, СтрокаОтчета.Количество);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
			Если СтрокаЗаявки.Сумма < СтрокаОтчета.СуммаПринято Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В исходной Заявке-обосновании указана номенклатура ""%1"" на сумму %2, а в Отчете - %3'"),
					СтрокаОтчета.Номенклатура, СтрокаЗаявки.Сумма, СтрокаОтчета.СуммаПринято);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
			Если Окр(СтрокаЗаявки.Цена, 2) < Окр(СтрокаОтчета.Цена, 2) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В исходной Заявке-обосновании указана номенклатура ""%1"" ценой %2, а в Отчете - %3'"),
					СтрокаОтчета.Номенклатура, Окр(СтрокаЗаявки.Цена, 2), Окр(СтрокаОтчета.Цена, 2));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Проверка на непревышение суммы и количества относительно заявки-обоснования закупки малого объема через подотчетное лицо
	Если ЗначениеЗаполнено(ДокументОснование)
		И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаОбоснованиеЗакупкиМалогоОбъемаЧерезПодотчетноеЛицо") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.ОКПД КАК ОКПД,
		|	СУММА(ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Количество) КАК Количество,
		|	СУММА(ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ЗаявкаОбоснованиеЗакупкиМалогоОбъемаЧерезПодотчетноеЛицо.ТоварыРаботыУслуги КАК ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги
		|ГДЕ
		|	ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаОбоснованиеЗакупкиМалогоОбъемаТоварыРаботыУслуги.ОКПД";
		
		Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
		
		ДанныеЗаявки = Запрос.Выполнить().Выгрузить();
		
		ПриходныеДокументы = Новый Массив;
		Для Каждого Стр Из ТоварыРаботыУслуги Цикл
			Если Стр.ПоДокументу И ЗначениеЗаполнено(Стр.ПриходныйДокумент) Тогда
				ПриходныеДокументы.Добавить(Стр.ПриходныйДокумент);
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ВидыДенежныхДокументов
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 КАК Справочник.ВидыДенежныхДокументов).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ВидыДенежныхДокументов
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 КАК Справочник.ВидыДенежныхДокументов).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ВидыДенежныхДокументов
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 КАК Справочник.ВидыДенежныхДокументов).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ДенежныеДокументы
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 КАК Справочник.ДенежныеДокументы).Владелец.ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ДенежныеДокументы
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 КАК Справочник.ДенежныеДокументы).Владелец.ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ДенежныеДокументы
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 КАК Справочник.ДенежныеДокументы).Владелец.ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 КАК Справочник.Номенклатура).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 КАК Справочник.Номенклатура).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 КАК Справочник.Номенклатура).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ОсновныеСредства
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт1 КАК Справочник.ОсновныеСредства).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ОсновныеСредства
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт2 КАК Справочник.ОсновныеСредства).ОКП
		|		КОГДА ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ОсновныеСредства
		|			ТОГДА ВЫРАЗИТЬ(ЖурналПроводокЕПСБУДвиженияССубконто.СубконтоДт3 КАК Справочник.ОсновныеСредства).ОКП
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОбщероссийскийКлассификаторПродукции.ПустаяСсылка)
		|	КОНЕЦ КАК ОКПД,
		|	ЖурналПроводокЕПСБУДвиженияССубконто.КоличествоДт КАК Количество,
		|	ЖурналПроводокЕПСБУДвиженияССубконто.Сумма КАК СуммаПринято
		|ИЗ
		|	РегистрБухгалтерии.ЖурналПроводокЕПСБУ.ДвиженияССубконто(
		|			,
		|			,
		|			СчетКт В (&Счет208)
		|				И Регистратор В (&ПриходныеДокументы)
		|				И (СубконтоДт1 ССЫЛКА Справочник.ВидыДенежныхДокументов
		|					ИЛИ СубконтоДт2 ССЫЛКА Справочник.ВидыДенежныхДокументов
		|					ИЛИ СубконтоДт3 ССЫЛКА Справочник.ВидыДенежныхДокументов
		|					ИЛИ СубконтоДт1 ССЫЛКА Справочник.ДенежныеДокументы
		|					ИЛИ СубконтоДт2 ССЫЛКА Справочник.ДенежныеДокументы
		|					ИЛИ СубконтоДт3 ССЫЛКА Справочник.ДенежныеДокументы
		|					ИЛИ СубконтоДт1 ССЫЛКА Справочник.Номенклатура
		|					ИЛИ СубконтоДт2 ССЫЛКА Справочник.Номенклатура
		|					ИЛИ СубконтоДт3 ССЫЛКА Справочник.Номенклатура
		|					ИЛИ СубконтоДт1 ССЫЛКА Справочник.ОсновныеСредства
		|					ИЛИ СубконтоДт2 ССЫЛКА Справочник.ОсновныеСредства
		|					ИЛИ СубконтоДт3 ССЫЛКА Справочник.ОсновныеСредства),
		|			,
		|			) КАК ЖурналПроводокЕПСБУДвиженияССубконто";
		
		Запрос.УстановитьПараметр("Счет208", БухгалтерскийУчет.СписокСчетов("208.00"));
		Запрос.УстановитьПараметр("ПриходныеДокументы", ПриходныеДокументы);
		
		ДанныеПриходныхДокументов = Запрос.Выполнить().Выгрузить();
		
		ДанныеОтчета = ТоварыРаботыУслуги.Выгрузить(Новый Структура("ПоДокументу", Ложь), "ОКПД, Количество, СуммаПринято");
		
		Для Каждого ДанныеПриходногоДокумента Из ДанныеПриходныхДокументов Цикл
			ЗаполнитьЗначенияСвойств(ДанныеОтчета.Добавить(), ДанныеПриходногоДокумента);
		КонецЦикла;
		
		ДанныеОтчета.Свернуть("ОКПД", "Количество, СуммаПринято");
		
		Для Каждого СтрокаОтчета Из ДанныеОтчета Цикл
			Если Не ЗначениеЗаполнено(СтрокаОтчета.ОКПД) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В Отчете указан объект закупки с незаполненным ОКПД'"),
					СтрокаОтчета.ОКПД);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
			СтрокаЗаявки = ДанныеЗаявки.Найти(СтрокаОтчета.ОКПД, "ОКПД");
			Если СтрокаЗаявки = Неопределено Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В исходной Заявке-обосновании отсутствует объект закупки с ОКПД ""%1""'"),
					СтрокаОтчета.ОКПД);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
			Если СтрокаЗаявки.Количество < СтрокаОтчета.Количество Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В исходной Заявке-обосновании указан объект закупки с ОКПД ""%1"" в количестве %2, а в Отчете - %3'"),
					СтрокаОтчета.ОКПД, СтрокаЗаявки.Количество, СтрокаОтчета.Количество);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
			Если СтрокаЗаявки.Сумма < СтрокаОтчета.СуммаПринято Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'В исходной Заявке-обосновании указан объект закупки с ОКПД ""%1"" на сумму %2, а в Отчете - %3'"),
					СтрокаОтчета.ОКПД, СтрокаЗаявки.Сумма, СтрокаОтчета.СуммаПринято);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	#КонецУдаления
	
	СуммаДокумента = 0;
	
	МассивТЧ = Новый Массив;
	МассивТЧ.Добавить("Суточные");
	МассивТЧ.Добавить("Проезд");
	МассивТЧ.Добавить("Проживание");
	МассивТЧ.Добавить("ПрочиеРасходы");
	МассивТЧ.Добавить("ТоварыРаботыУслуги");
	
	Для Каждого ТЧ Из МассивТЧ Цикл
		Для Каждого СтрокаТЧ Из ЭтотОбъект[ТЧ] Цикл
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТЧ, "СпособОбеспечения")
				И СтрокаТЧ.СпособОбеспечения <> ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.АвансПодотчетномуЛицу")
				И СтрокаТЧ.СпособОбеспечения <> ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.ВыдачаДенежныхДокументов")
				И СтрокаТЧ.СпособОбеспечения <> ПредопределенноеЗначение("Перечисление.СпособыОбеспеченияКомандировки.ВозмещениеПоФакту") Тогда
				Продолжить;
			КонецЕсли;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТЧ, "Валюта")
				И ЗначениеЗаполнено(СтрокаТЧ.Валюта)
				И СтрокаТЧ.Валюта <> БухгалтерскийУчетПовтИсп.ВалютаРегламентированногоУчета() Тогда
				СуммаДокумента = СуммаДокумента
					+ Документы.ОтчетОРасходахПодотчетногоЛица.СуммаВРублевомЭквиваленте(СтрокаТЧ.СуммаПринято, СтрокаТЧ.Валюта, КурсыВалют);
				Иначе
					СуммаДокумента = СуммаДокумента + СтрокаТЧ.СуммаПринято;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры
