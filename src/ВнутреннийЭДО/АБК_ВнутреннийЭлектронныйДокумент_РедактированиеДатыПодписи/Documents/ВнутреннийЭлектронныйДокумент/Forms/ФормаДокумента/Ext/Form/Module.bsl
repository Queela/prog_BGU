
&НаСервере
Процедура АБК_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	// Таблица ЭлектронныеПодписи
	Элементы.ЭлектронныеПодписи.УстановитьДействие("Выбор", "АБК_ЭлектронныеПодписиВыбор"); 
	
	// Маршрут подписания
	Элементы.ДеревоМаршрута.УстановитьДействие("Выбор", "АБК_ЭлектронныеПодписиВыбор");
	
КонецПроцедуры

&НаКлиенте
Процедура АБК_ЭлектронныеПодписиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 

	Если Поле.Имя = "ЭлектронныеПодписиДатаПодписи" Тогда
		АБК_НачалоВыбораДатыПодписи("ЭлектронныеПодписи", СтандартнаяОбработка);
	ИначеЕсли Поле.Имя = "ДеревоМаршрутаДатаПодписи" Тогда
		АБК_НачалоВыбораДатыПодписи("ДеревоМаршрута", СтандартнаяОбработка);	
	ИначеЕсли СтрНайти(Поле.Имя,"ЭлектронныеПодписи") Тогда
		ОткрытьПодписьДокумента();		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура АБК_НачалоВыбораДатыПодписи(ИмяТаблицы, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы[ИмяТаблицы].ТекущиеДанные;		
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтандартнаяОбработка = Ложь; 
	
	Если ИмяТаблицы = "ДеревоМаршрута" Тогда 
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.ДатаПодписи) Тогда // Выбрана группа подписантов. Или подпись не установлена
			Возврат;
		КонецЕсли; 
		
		ПростаяПодпись = ТекущиеДанные.ВидПодписи = ПредопределенноеЗначение("Перечисление.ВидыЭлектронныхПодписейБГУ.Простая");
		
		МассивПодписей = ЭлектронныеПодписи.НайтиСтроки(Новый Структура("ДатаПодписи,УстановившийПодпись, ПростаяПодпись", ТекущиеДанные.ДатаПодписи, ТекущиеДанные.Подписант, ПростаяПодпись));
		Если МассивПодписей.Количество() = 1 Тогда
			ПараметрыТекущейПодписи = Новый Структура("Объект, ПорядковыйНомер, ПростаяПодпись",  МассивПодписей[0].Объект,  МассивПодписей[0].ПорядковыйНомер, ПростаяПодпись);
		КонецЕсли;
		
	Иначе
		ПараметрыТекущейПодписи = Новый Структура("Объект, ПорядковыйНомер, ПростаяПодпись", ТекущиеДанные.Объект, ТекущиеДанные.ПорядковыйНомер, ТекущиеДанные.ПростаяПодпись);	
	КонецЕсли;
		
	ОповещениеПослеВыбораДаты = Новый ОписаниеОповещения("АБК_ПослеВводаДатыПодписи", ЭтотОбъект, ПараметрыТекущейПодписи);
	ПоказатьВводДаты(ОповещениеПослеВыбораДаты, ТекущиеДанные.ДатаПодписи, "Дата подписи", ЧастиДаты.ДатаВремя);	
	
КонецПроцедуры        

&НаКлиенте
Процедура АБК_ПослеВводаДатыПодписи(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		УстановитьНовуюДатуПодписиНаСервере(Результат, ДопПараметры);			
		
		ЗаполнитьДеревоМаршрута();
		ЗаполнитьСписокПодписей(); 
		РазвернутьДеревоМаршрута();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНовуюДатуПодписиНаСервере(ДатаПодписи, ДопПараметры)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Подписант = Неопределено; 
	ВидТекущейПодписи = Неопределено;   
	СостояниеПодписано = ПредопределенноеЗначение("Перечисление.СостоянияДокументовВнутреннегоЭДО.Завершен");
	
	Если ДопПараметры.ПростаяПодпись Тогда 
		
		ВидТекущейПодписи = ПредопределенноеЗначение("Перечисление.ВидыЭлектронныхПодписейБГУ.Простая");
		
		НЗ = РегистрыСведений.ПростыеЭлектронныеПодписиБГУ.СоздатьНаборЗаписей();
		НЗ.Отбор.ПодписанныйОбъект.Установить(ДопПараметры.Объект);
		НЗ.Отбор.ПорядковыйНомер.Установить(ДопПараметры.ПорядковыйНомер);
		НЗ.Прочитать(); 
		
		ДвиженияНЗ = НЗ.Выгрузить();
		Если ДвиженияНЗ.Количество() Тогда
			ДвиженияНЗ[0].ДатаПодписи = ДатаПодписи;
			Подписант = ДвиженияНЗ[0].УстановившийПодпись;
		КонецЕсли;
		
		НЗ.Загрузить(ДвиженияНЗ);  
		НЗ.Записать(); 
		
	Иначе    
		
		ВидТекущейПодписи = ПредопределенноеЗначение("Перечисление.ВидыЭлектронныхПодписейБГУ.Усиленная");
		
		НЗ = РегистрыСведений.ЭлектронныеПодписи.СоздатьНаборЗаписей();
		НЗ.Отбор.ПодписанныйОбъект.Установить(ДопПараметры.Объект);
		НЗ.Отбор.ПорядковыйНомер.Установить(ДопПараметры.ПорядковыйНомер);
		
		НЗ.Прочитать(); 
		
		ДвиженияНЗ = НЗ.Выгрузить();
		Если ДвиженияНЗ.Количество() Тогда
			ДвиженияНЗ[0].ДатаПодписи = ДатаПодписи;
			ДвиженияНЗ[0].ДатаПроверкиПодписи = ДатаПодписи;
			Подписант = ДвиженияНЗ[0].УстановившийПодпись;
		КонецЕсли;
		
		НЗ.Загрузить(ДвиженияНЗ);  
		НЗ.Записать();
		
	КонецЕсли;
	
	// Установить дату подписи в маршруте
	Если Не ЗначениеЗаполнено(Подписант) 
		Или Не ЗначениеЗаполнено(ВидТекущейПодписи)
		Или Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;		
	КонецЕсли;
	
	СоставМаршрута = ВнутреннийЭДО.СоставМаршрутаПодписанияДокумента(Объект.Ссылка);
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Подписант", Подписант);
	ПараметрыОтбора.Вставить("ВидПодписи", ВидТекущейПодписи);
	ПараметрыОтбора.Вставить("Состояние", СостояниеПодписано);
	
	СтрокиМаршрута = СоставМаршрута.НайтиСтроки(ПараметрыОтбора);
	
	НаборЗаписей = РегистрыСведений.СоставМаршрутаЭлектронногоДокумента.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЭлектронныйДокумент.Установить(Объект.Ссылка);
	НаборЗаписей.Отбор.Идентификатор.Установить(СтрокиМаршрута[0].Идентификатор);  
	НаборЗаписей.Прочитать();
	
	ДвиженияНЗ = НаборЗаписей.Выгрузить();
	Если ДвиженияНЗ.Количество() Тогда
		ДвиженияНЗ[0].ДатаПодписи = ДатаПодписи;
	КонецЕсли;
	
	НаборЗаписей.Загрузить(ДвиженияНЗ);  
	НаборЗаписей.Записать();  
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры
