
&ИзменениеИКонтроль("ПриСозданииНаСервере")
Процедура ЭДО_ДляВнешнихОтчетов_ПриСозданииНаСервере(Форма, ГруппаФормы, ТипФормы)
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.Документы.РегистрУчета) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипФормы = "ФормаОтчета" Тогда
		
		МетаданныеОтчета = Форма.РеквизитФормыВЗначение("Отчет").Метаданные();
		
		ИмяОтчета = МетаданныеОтчета.Имя;
		
	#Удаление
		Попытка
			Если НЕ Отчеты[ИмяОтчета].ЭтоРегистрУчета() Тогда
				Возврат;
			КонецЕсли;
		Исключение
			Возврат;
		КонецПопытки;
	#КонецУдаления
	#Вставка
	Если НЕ ЭДО_ДляВнешнихОтчетов_ЭтоВнешнийОтчет(Форма.РеквизитФормыВЗначение("Отчет")) Тогда
		Попытка
		Если НЕ Отчеты[ИмяОтчета].ЭтоРегистрУчета() Тогда
			Возврат;
		КонецЕсли;
	Исключение
		Возврат;
	КонецПопытки;
	КонецЕсли;
	#КонецВставки
		
		ПолноеИмяОтчета = МетаданныеОтчета.ПолноеИмя();
		
		НаименованиеВидаРегистра = "";
		
		КлючВарианта = Неопределено;
		Форма.Параметры.Свойство("КлючВарианта", КлючВарианта);
		Если НЕ ЗначениеЗаполнено(КлючВарианта) Тогда
			КлючВарианта = Форма.КлючТекущегоВарианта;
		КонецЕсли;
		
		ОбработчикКоманды = "Подключаемый_Команда";
		
	ИначеЕсли ТипФормы = "ФормаПечати" Тогда
		
		Если НЕ Форма.Параметры.ПараметрыПечати.ДополнительныеПараметры.Свойство("РегистрУчета") Тогда
			Возврат;
		КонецЕсли;
		
		Если Форма.Параметры.ПараметрыПечати.ОбъектыПечати.Количество() <> 1 Тогда
			Возврат;
		КонецЕсли;
		
		ПолноеИмяОтчета = Форма.Параметры.ПараметрыПечати.ОбъектыПечати[0].Метаданные().ПолноеИмя();
		
		НаименованиеВидаРегистра = Форма.Параметры.ПараметрыПечати.Представление;
		
		КлючВарианта = Неопределено;
		
		ОбработчикКоманды = "Подключаемый_ВыполнитьКоманду";
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ВидРегистра = Справочники.ВидыРегистровУчета.ПолучитьВидРегистраБухгалтерскогоУчетаДляОтчета(
		ПолноеИмяОтчета, КлючВарианта, НаименованиеВидаРегистра);
	
	ГруппаДляКнопок = Неопределено;
	
	Если ЗначениеЗаполнено(ГруппаФормы) Тогда
		ГруппаДляКнопок = Форма.Элементы[ГруппаФормы];
	ИначеЕсли НЕ Форма.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет Тогда
		ГруппаДляКнопок = Форма.Элементы.КоманднаяПанель
	Иначе
		//Добавляем в первую группу вида "Командная панель"
		Для Каждого ЭлементФормы Из Форма.Элементы Цикл
			Если ЭлементФормы.Вид = ВидГруппыФормы.КоманднаяПанель Тогда
				ГруппаДляКнопок = ЭлементФормы;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ГруппаДляКнопок = Неопределено Тогда
		// не нашли, куда разместить команды
		Возврат;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВидРегистраУчета", Новый ОписаниеТипов("СправочникСсылка.ВидыРегистровУчета")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользуетсяЭП", Новый ОписаниеТипов("Булево")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТипФормы", Новый ОписаниеТипов("Строка")));
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Если ЕстьРеквизитФормы(Форма, "ПостоянныеРеквизиты") Тогда
		Форма.ПостоянныеРеквизиты.Добавить("ВидРегистраУчета");
		Форма.ПостоянныеРеквизиты.Добавить("ИспользуетсяЭП");
	КонецЕсли;
	
	Форма.ИспользуетсяЭП = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи");
	Форма.ВидРегистраУчета = ВидРегистра;
	Форма.ТипФормы = ТипФормы;
	
	// Добавление команд и кнопок
	ПодменюИмя = "РегистрУчета";
	
	КомандаСохранитьРегистр = Форма.Команды.Добавить("СохранитьРегистрУчета");
	КомандаСохранитьРегистр.Действие  = ОбработчикКоманды;
	КомандаСохранитьРегистр.Заголовок = НСтр("ru = 'Сохранить'");
	КомандаСохранитьРегистр.Подсказка = НСтр("ru = 'Сохранить регистр учета в архиве.'");
	
	Если ВнутреннийЭДОПереопределяемый.ИспользуютсяВнутренниеДокументы() Тогда
		КомандаСохранитьИПодписатьРегистр = Форма.Команды.Добавить("СохранитьРегистрУчетаИСоздатьВнутрЭД");
		КомандаСохранитьИПодписатьРегистр.Действие  = ОбработчикКоманды;
		КомандаСохранитьИПодписатьРегистр.Картинка  = БиблиотекаКартинок.Оригинал;
		КомандаСохранитьИПодписатьРегистр.Заголовок = НСтр("ru = 'Сохранить и создать внутр. ЭД'");
		КомандаСохранитьИПодписатьРегистр.Подсказка = НСтр("ru = 'Сохранить регистр учета в архиве и создать внутренний электронный документ'");
	Иначе
		КомандаСохранитьИПодписатьРегистр = Неопределено;
	КонецЕсли;
	
	КомандаАрхив = Форма.Команды.Добавить("АрхивРегистровУчета");
	КомандаАрхив.Действие  = ОбработчикКоманды;
	КомандаАрхив.Заголовок = НСтр("ru = 'Открыть архив'");
	КомандаАрхив.Подсказка = НСтр("ru = 'Открыть архив сохраненных регистров учета.'");
	
	Если ЕстьРеквизитФормы(Форма, "ПостоянныеКоманды") Тогда
		Форма.ПостоянныеКоманды.Добавить(КомандаАрхив.Имя);
		Форма.ПостоянныеКоманды.Добавить(КомандаСохранитьРегистр.Имя);
		Если КомандаСохранитьИПодписатьРегистр <> Неопределено Тогда
			Форма.ПостоянныеКоманды.Добавить(КомандаСохранитьИПодписатьРегистр.Имя);
		КонецЕсли;
	КонецЕсли;
	
	Подменю 			= Форма.Элементы.Добавить(ПодменюИмя, Тип("ГруппаФормы"), ГруппаДляКнопок);
	Подменю.Вид 		= ВидГруппыФормы.Подменю;
	Подменю.Заголовок 	= НСтр("ru = 'Регистр учета'");
	Подменю.Картинка 	= БиблиотекаКартинок.ПакетыОтчетов;
	
	ЭлементСохранитьРегистр = Форма.Элементы.Добавить(КомандаСохранитьРегистр.Имя, Тип("КнопкаФормы"), Подменю);
	ЭлементСохранитьРегистр.ИмяКоманды = КомандаСохранитьРегистр.Имя;
	
	Если КомандаСохранитьИПодписатьРегистр <> Неопределено Тогда
		ЭлементСохранитьРегистрУчетаИПодписатьЭП = Форма.Элементы.Добавить(КомандаСохранитьИПодписатьРегистр.Имя, Тип("КнопкаФормы"), Подменю);
		ЭлементСохранитьРегистрУчетаИПодписатьЭП.ИмяКоманды = КомандаСохранитьИПодписатьРегистр.Имя;
	КонецЕсли;
	
	ЭлементАрхив = Форма.Элементы.Добавить(КомандаАрхив.Имя, Тип("КнопкаФормы"), Подменю);
	ЭлементАрхив.ИмяКоманды = КомандаАрхив.Имя;
	
КонецПроцедуры 

Функция ЭДО_ДляВнешнихОтчетов_ЭтоВнешнийОтчет(ОтчетОбъект)
	Если ОтчетОбъект = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИмяОтчета = ОтчетОбъект.Метаданные().Имя;
	Если Метаданные.Отчеты.Найти(ИмяОтчета) <> Неопределено
		И ТипЗнч(ОтчетОбъект) = Тип("ОтчетОбъект." + ИмяОтчета) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

&ИзменениеИКонтроль("ДополнитьСвойстваРегистраУчета")
Процедура ЭДО_ДляВнешнихОтчетов_ДополнитьСвойстваРегистраУчета1(СвойстваРегистраУчета, Знач Отчет)

	Если ТипЗнч(Отчет) = Тип("Структура") Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(СвойстваРегистраУчета, Отчет, Истина);
		Возврат;
	КонецЕсли;   
	
	#Вставка
	Попытка
		Если ТипЗнч(СвойстваРегистраУчета.ВидРегистра.Отчет) = Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки") Тогда
			Настройки = Отчет.КомпоновщикНастроек.ПолучитьНастройки();
			Организация = Неопределено;
			
			ПараметрОрганизация = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Организация"));
			
			Если ПараметрОрганизация <> Неопределено Тогда
				Организация = ПараметрОрганизация.Значение;
			КонецЕсли;
			
			Для Каждого Отбор Из Настройки.Отбор.Элементы Цикл
				Если ТипЗнч(Отбор) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
					Если Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация") И Отбор.Использование Тогда
						Если ЗначениеЗаполнено(Отбор.ПравоеЗначение) И ТипЗнч(Отбор.ПравоеЗначение) = Тип("СправочникСсылка.Организации") Тогда
							Организация = Отбор.ПравоеЗначение; 
						КонецЕсли;
					КонецЕсли;   
				КонецЕсли;
			КонецЦикла; 
			
			Если ЗначениеЗаполнено(Организация) Тогда
				СвойстваРегистраУчета.Вставить("Организация", Организация);
			Иначе
				СвойстваРегистраУчета.Вставить("НетДанных", Истина);
			КонецЕсли; 
			
			Возврат;
		КонецЕсли; 
	Исключение
		СвойстваРегистраУчета.Вставить("НетДанных", Истина);  
		Возврат;
	КонецПопытки;
	#КонецВставки

	ИмяОтчета = СвойстваРегистраУчета.ВидРегистра.Отчет.Имя;

	Попытка
		Отчеты[ИмяОтчета].СвойстваРегистраУчета(Отчет, СвойстваРегистраУчета);
	Исключение
		СвойстваРегистраУчета.Вставить("НетДанных", Истина);
	КонецПопытки;

КонецПроцедуры
