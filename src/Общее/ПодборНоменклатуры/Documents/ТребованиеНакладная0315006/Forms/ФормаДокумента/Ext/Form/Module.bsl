
&НаКлиенте
&После("ДополнитьСтруктуруПодбора")
Процедура АБК_ДополнитьСтруктуруПодбора(ПараметрыПодбора, ДополнительныйПараметр)
	
	ПоместитьТаблицуМатериалов(ПараметрыПодбора, ДополнительныйПараметр);
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьТаблицуМатериалов(ПараметрыПодбора, ДополнительныйПараметр)
	
	ПодборМатериальныхЗапасов.ПоместитьТаблицаМатериалов(ПараметрыПодбора, ДополнительныйПараметр, Объект);	
	
КонецПроцедуры

&НаСервере
&Перед("ОбработатьВыборПодбораНаСервере")
Процедура АБК_ОбработатьВыборПодбораНаСервере(ВыбранноеЗначение)
	
	ИмяТабличнойЧасти = "";
	
	Если ПодборМатериальныхЗапасов.ПолучитьИмяТабличнойЧастиМатериалы(Объект, ИмяТабличнойЧасти) Тогда
		Объект[ИмяТабличнойЧасти].Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
&ИзменениеИКонтроль("ДополнитьСтруктуруПодбора")
Процедура АБК_ДополнитьСтруктуруПодбора1(ПараметрыПодбора, ДополнительныйПараметр)
    #Удаление
	ПоказыватьОстатки = Объект.ВидПеремещения <> ПредопределенноеЗначение("Перечисление.ВидыПеремещенияМЗ.ВозвратИзНТТ")
	И Объект.ВидПеремещения <> ПредопределенноеЗначение("Перечисление.ВидыПеремещенияМЗ.ПеремещениеМеждуНТТ");

	Если ЭтоВнутреннееПеремещениеПоСчету105(ЭтотОбъект) Тогда
		СписокСчетов = Новый СписокЗначений;
		СписокСчетов.Добавить(Счет10500);
		СписокСчетов.Добавить(Счет11300);
		ПараметрыПодбора.Вставить("СчетУчета", СписокСчетов);
	Иначе
		ПараметрыПодбора.Вставить("СчетУчета", Объект.СчетУчета);
	КонецЕсли; 
	#КонецУдаления
	#Вставка     
	ПоказыватьОстатки = НЕ (Объект.ВидПеремещения = ПредопределенноеЗначение("Перечисление.ВидыПеремещенияМЗ.ВозвратИзНТТ") ИЛИ Объект.ВидПеремещения = ПредопределенноеЗначение("Перечисление.ВидыПеремещенияМЗ.ПеремещениеМеждуНТТ"));
	
	ПараметрыПодбора.Вставить("СчетУчета",				Объект.СчетУчета);	
	#КонецВставки
	ПараметрыПодбора.Вставить("ЦМО", 					Объект.ЦМООтправитель);
	ПараметрыПодбора.Вставить("Подразделение",			Объект.ПодразделениеОтправитель);
	ПараметрыПодбора.Вставить("ПоказыватьОстатки",		ПоказыватьОстатки);
	ПараметрыПодбора.Вставить("ПоказыватьСчетУчета",	ПоказыватьОстатки);
	ПараметрыПодбора.ДополнитьСчетом113 = Истина;
	ТипыНоменклатуры = Новый СписокЗначений;
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Блюдо"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ГСМ"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Медикаменты"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МолоднякИЖивотныеНаОткорме"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МягкийИнвентарь"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Посуда"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПродуктыПитания"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Продукция"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПрочиеМЗ"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Стройматериалы"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Оборудование"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Тара"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.БСО"));
	ТипыНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.БиологическиеАктивы"));
	ПараметрыПодбора.Вставить("ТипыНоменклатуры",		ТипыНоменклатуры);
	ПараметрыПодбора.Вставить("ИмяТаблицы",				"Материалы");
	Если ЗначениеЗаполнено(Объект.ВидПеремещения) И НЕ Объект.ВидПеремещения = ПредопределенноеЗначение("Перечисление.ВидыПеремещенияМЗ.ДвижениеМатериалов") Тогда
		ПараметрыПодбора.Вставить("ЕстьЦена",			Истина);
		ПараметрыПодбора.Вставить("ПоказыватьЦены",		Истина);
		ПараметрыПодбора.Вставить("ТипЦен",				Объект.ТипЦеныНТТ);
	КонецЕсли;

	Если СчетУчетаИмуществаВПользовании.Найти(Объект.СчетУчета) <> Неопределено Тогда
		ПараметрыПодбора.Вставить("ПодборОстатковВПользовании", Истина);
		ПараметрыПодбора.Вставить("СчетОстатковВПользовании", Объект.СчетУчета);
	КонецЕсли;

	ДополнительноеСубконтоСчета = УправлениеМатериальнымиЗапасамиКлиентСервер.ДополнительнаяАналитикаСчетаУчетаМатериалов(Объект.СчетУчета, Объект.Организация);
	Если ЗначениеЗаполнено(ДополнительноеСубконтоСчета) Тогда
		ПараметрыПодбора.Вставить("ВидСубконтоДополнительнойАналитикиСчета", ДополнительноеСубконтоСчета);
	КонецЕсли;

КонецПроцедуры
