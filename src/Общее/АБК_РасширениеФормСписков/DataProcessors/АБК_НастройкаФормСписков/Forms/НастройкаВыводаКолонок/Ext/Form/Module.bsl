
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ИдентификаторыМетаданных") Тогда
		ИдентификаторыМетаданных.ЗагрузитьЗначения(Параметры.ИдентификаторыМетаданных);
	КонецЕсли;
	
	Если Параметры.Свойство("МассивПсевдонимов") Тогда
		СписокЗанятыхИдентификаторов.ЗагрузитьЗначения(Параметры.МассивПсевдонимов);
	КонецЕсли;
	
	Параметры.Свойство("ДинамическийСписок", ДинамическийСписок);
	
	Если Параметры.Свойство("СериализованныеНастройки")
		И Параметры.СериализованныеНастройки <> Неопределено Тогда
		ДесериализоватьНастройкиНаСервере(Параметры.СериализованныеНастройки);		
	КонецЕсли;
	
	СтруктураТабличныхЧастей = Новый Структура;
	
	Для Каждого ОписаниеРеквизита Из ОписанияРеквизитов Цикл
		ДобавитьСписокТабличныхЧастейВСтруктуру(ОписаниеРеквизита.ПолучитьИдентификатор());		
	КонецЦикла;
	
	Соответствие = АБК_РасширениеФормСписков.ПолучитьСоответствиеАгрегатныхФункций();
	
	Для Каждого Элемент Из Соответствие Цикл
		Элементы.ОписанияРеквизитовАгрегатнаяФункция.СписокВыбора.Добавить(Элемент.Ключ);	
	КонецЦикла;
	
	Элементы.Декорация2.Видимость = Параметры.Свойство("ЖурналДокументов") И Параметры.ЖурналДокументов;
	
	Элементы.СкопироватьНастройкиДругимПользователям.Видимость = РольДоступна("АдминистраторСистемы");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ЗаписатьНастройкиДляВыбранныхПользователей(ВыбранноеЗначение.ПользователиПриемник, ВладелецФормы.ИмяФормы);	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки записаны'"),, НСтр("ru = 'Для применения изменений указанным пользователям необходимо перезайти в форму списка'"));

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВводТабличнойЧастиВручнуюПриИзменении(Элемент)
	Элементы.ОписаниеРеквизитовТабличнаяЧасть.РежимВыбораИзСписка = Не ВводТабличнойЧастиВручную;
	Если ВводТабличнойЧастиВручную Тогда
		Элементы.ОписаниеРеквизитовТабличнаяЧасть.СписокВыбора.Очистить();
	Иначе 
		
		ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
		
		Если ТекущиеДанные <> Неопределено Тогда
			ЗаполнитьСписокВыбораТабличныхЧастей(ТекущиеДанные.ИдентификаторОбъекта);
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОписанияРеквизитов

&НаКлиенте
Процедура ОписанияРеквизитовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьСписокВыбораТабличныхЧастей(ТекущиеДанные.ИдентификаторОбъекта)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеРеквизитовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
		ТекущиеДанные.ИдентификаторСтроки = Элементы.ТаблицаРеквизитов.ТекущиеДанные.ИдентификаторСтроки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеРеквизитовИдентификаторОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ВсеИдентификаторыОбъектов Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ИдентификаторОбъекта = Элементы.ОписанияРеквизитов.ТекущиеДанные.ИдентификаторОбъекта;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущаяСтрока", ИдентификаторОбъекта);
	
	Если Не ВсеИдентификаторыОбъектов Тогда
		
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		Отбор 				= КомпоновщикНастроек.Настройки.Отбор;
		
		ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение 	= ИдентификаторыМетаданных.Скопировать();
		
		ДополнительныеПараметры.Вставить("ФиксированныеНастройки",	КомпоновщикНастроек.Настройки);
		
	КонецЕсли;
	
	ДополнительныеПараметры.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ИдентификаторыОбъектовМетаданных.ФормаВыбора",
				ДополнительныеПараметры, 	
				Элемент,
				УникальныйИдентификатор,
				,
				,
				,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеРеквизитовНаименованиеРеквизитаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОсновнаяТаблица", 	ТекущиеДанные.ПолноеИмя + ?(ПустаяСтрока(ТекущиеДанные.ТабличнаяЧасть), "", "." + ТекущиеДанные.ТабличнаяЧасть));
	ДополнительныеПараметры.Вставить("Выражение", 			ТекущиеДанные.НаименованиеРеквизита);
	ДополнительныеПараметры.Вставить("ЗначениеПоУмолчанию", Элементы.ТаблицаРеквизитов.ТекущиеДанные.ЗначениеПоУмолчанию);
	
	ОткрытьФорму("Обработка.АБК_НастройкаФормСписков.Форма.РедактированиеВыраженияРеквизита",
				ДополнительныеПараметры,
				Элемент,
				УникальныйИдентификатор,
				,
				,
				,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаРеквизитов

&НаКлиенте
Процедура ТаблицаРеквизитовПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборТаблицыОписанияРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Или Копирование Тогда
		Элементы.ТаблицаРеквизитов.ТекущиеДанные.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		УстановитьОтборТаблицыОписанияРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовПередУдалением(Элемент, Отказ)
	
	ИдентификаторСтроки = Элементы.ТаблицаРеквизитов.ТекущиеДанные.ИдентификаторСтроки;
	
	МассивУдаляемых = Новый Массив;
	
	Для Каждого ОписаниеРеквизита Из ОписанияРеквизитов Цикл
		Если ОписаниеРеквизита.ИдентификаторСтроки = ИдентификаторСтроки Тогда
			МассивУдаляемых.Добавить(ОписаниеРеквизита);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ОписаниеРеквизита Из МассивУдаляемых Цикл
		ОписанияРеквизитов.Удалить(ОписаниеРеквизита);	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовПсевдонимРеквизитаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	
	Если СписокЗанятыхИдентификаторов.НайтиПоЗначению(ТекущиеДанные.ПсевдонимРеквизита) <> Неопределено Тогда
		
		Индекс = ТаблицаРеквизитов.Индекс(ТекущиеДанные);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Данный идентификатор уже занят в стандартном списке!
                                                               |Придумайте другой'"),
										,
										СтрШаблон("ТаблицаРеквизитов[%1].ПсевдонимРеквизита", Строка(Индекс)));
		
	КонецЕсли;
	
	НайденныеСтроки = ТаблицаРеквизитов.НайтиСтроки(Новый Структура("ПсевдонимРеквизита", ТекущиеДанные.ПсевдонимРеквизита));
	
	УжеЕстьПсевдоним = Ложь;
	
	Для Каждого СтрокаРеквизит Из НайденныеСтроки Цикл
		Если  СтрокаРеквизит <> ТекущиеДанные Тогда
			УжеЕстьПсевдоним = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УжеЕстьПсевдоним Тогда
		
		Индекс = ТаблицаРеквизитов.Индекс(ТекущиеДанные);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Данный идентификатор уже есть в таблице!
                                                                |Придумайте другой'"),
										,
										СтрШаблон("ТаблицаРеквизитов[%1].ПсевдонимРеквизита", Строка(Индекс)));
		
	КонецЕсли;								
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	Если ПроверитьЗаполнениеРеквизитов() Тогда
		Закрыть(СериализоватьНастройкиНаСервере());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройки(Команда)
	Закрыть(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьНастройкиДругимПользователям(Команда)
	
	ОткрытьФорму("Обработка.АБК_НастройкаФормСписков.Форма.ВыборПользователей",, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборТаблицыОписанияРеквизитов(Форма)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ОписанияРеквизитов.Доступность = Ложь;
		Возврат;
	КонецЕсли;
	
	Элементы.ОписанияРеквизитов.Доступность = Истина; 
	
	Отбор = Новый Структура("ИдентификаторСтроки", ТекущиеДанные.ИдентификаторСтроки);
	
	Элементы.ОписанияРеквизитов.ОтборСтрок = Новый ФиксированнаяСтруктура(Отбор);	
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСписокТабличныхЧастейВСтруктуру(ИдентификаторСтроки, ИдентификаторОбъекта = Неопределено)
	
	ОписаниеРеквизита = ОписанияРеквизитов.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ИдентификаторОбъекта = Неопределено Тогда
		ИдентификаторОбъекта = ОписаниеРеквизита.ИдентификаторОбъекта
	КонецЕсли;
	
	Если СтруктураТабличныхЧастей.Свойство(СтрЗаменить(ОписаниеРеквизита.ПолноеИмя, ".", "_")) Тогда
		Возврат;
	КонецЕсли;
	
	ПустаяСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИдентификаторОбъекта, "ЗначениеПустойСсылки");
	
	СписокТабличныхЧастей = Новый СписокЗначений;
	
	Для Каждого ТабличнаяЧасть Из ПустаяСсылка.Метаданные().ТабличныеЧасти Цикл
		СписокТабличныхЧастей.Добавить(ТабличнаяЧасть.Имя, ТабличнаяЧасть.Синоним);
	КонецЦикла;
	
	СтруктураТабличныхЧастей.Вставить(СтрЗаменить(ОписаниеРеквизита.ПолноеИмя, ".", "_"), СписокТабличныхЧастей);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеРеквизитовИдентификаторОбъектаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
	
	Если ТекущиеДанные.ИдентификаторОбъекта = ВыбранноеЗначение Тогда
		Возврат;
	ИначеЕсли Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		элементы.ОписаниеРеквизитовТабличнаяЧасть.СписокВыбора.Очистить();
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
	
	ТекущиеДанные.ПолноеИмя = ЗначениеРеквизитаОбъекта(ВыбранноеЗначение, "ПолноеИмя");
	
	ЗаполнитьСписокВыбораТабличныхЧастей(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораТабличныхЧастей(ИдентификаторОбъекта)
	
	Элементы.ОписаниеРеквизитовТабличнаяЧасть.СписокВыбора.Очистить();
	
	ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ИдентификаторОбъекта) Тогда
		Возврат;
	КонецЕсли;
	
	СписокТабличныхЧастей = Неопределено;
	
	Если Не СтруктураТабличныхЧастей.Свойство(СтрЗаменить(ТекущиеДанные.ПолноеИмя, ".", "_"), СписокТабличныхЧастей) Тогда
		ДобавитьСписокТабличныхЧастейВСтруктуру(ТекущиеДанные.ПолучитьИдентификатор(), ИдентификаторОбъекта);
		СписокТабличныхЧастей = СтруктураТабличныхЧастей[СтрЗаменить(ТекущиеДанные.ПолноеИмя, ".", "_")];
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокТабличныхЧастей Цикл
		Элементы.ОписаниеРеквизитовТабличнаяЧасть.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеРеквизитаОбъекта(Ссылка, Реквизит)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, Реквизит);	
КонецФункции

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	МассивОшибок = Новый Массив;
	
	Для Каждого СтрокаРеквизит Из ТаблицаРеквизитов Цикл
		
		ИндексСтроки = ТаблицаРеквизитов.Индекс(СтрокаРеквизит);
		
		Если Не ЗначениеЗаполнено(СтрокаРеквизит.ПсевдонимРеквизита) Тогда
			
			СтруктураОшибки = Новый Структура("ТекстСообщения, Поле");
			СтруктураОшибки.ТекстСообщения 	= СтрШаблон(НСтр("ru = 'В таблице реквизитов в строке %1 не заполнен идентификатор!'"), Строка(ИндексСтроки + 1));
			СтруктураОшибки.Поле 			= СтрШаблон("ТаблицаРеквизитов[%1].ПсевдонимРеквизита", Строка(ИндексСтроки)); 
			
			МассивОшибок.Добавить(СтруктураОшибки);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаРеквизит.ЗаголовокНаФорме) Тогда
			
			СтруктураОшибки = Новый Структура("ТекстСообщения, Поле");
			СтруктураОшибки.ТекстСообщения 	= СтрШаблон(НСтр("ru = 'В таблице реквизитов в строке %1 не заполнен заголовок!'"), Строка(ИндексСтроки + 1));
			СтруктураОшибки.Поле 			= СтрШаблон("ТаблицаРеквизитов[%1].ЗаголовокНаФорме", Строка(ИндексСтроки)); 
			
			МассивОшибок.Добавить(СтруктураОшибки);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаРеквизит.Порядок) Тогда
			
			СтруктураОшибки = Новый Структура("ТекстСообщения, Поле");
			СтруктураОшибки.ТекстСообщения 	= СтрШаблон(НСтр("ru = 'В таблице реквизитов в строке %1 не заполнен порядок!'"), Строка(ИндексСтроки + 1));
			СтруктураОшибки.Поле 			= СтрШаблон("ТаблицаРеквизитов[%1].Порядок", Строка(ИндексСтроки)); 
			
			МассивОшибок.Добавить(СтруктураОшибки);
			
		КонецЕсли;
			
	КонецЦикла;
	
	СоответствиеИдентификаторов = Новый Соответствие;
	
	Для Каждого ОписаниеРеквизита Из ОписанияРеквизитов Цикл
		
		ИндексСтроки = ОписанияРеквизитов.Индекс(ОписаниеРеквизита);
		
		Если Не ЗначениеЗаполнено(ОписаниеРеквизита.ИдентификаторОбъекта) Тогда
			
			СтруктураОшибки = Новый Структура("ТекстСообщения, Поле");
			СтруктураОшибки.ТекстСообщения 	= СтрШаблон(НСтр("ru = 'В таблице описания реквизитов в строке %1 не заполнен тип объекта!'"), Строка(ИндексСтроки + 1));
			СтруктураОшибки.Поле 			= СтрШаблон("ОписаниеРеквизита[%1].ИдентификаторОбъекта", Строка(ИндексСтроки)); 
			
			МассивОшибок.Добавить(СтруктураОшибки);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ОписаниеРеквизита.НаименованиеРеквизита) Тогда
			
			СтруктураОшибки = Новый Структура("ТекстСообщения, Поле");
			СтруктураОшибки.ТекстСообщения 	= СтрШаблон(НСтр("ru = 'В таблице описания реквизитов в строке %1 не заполнено выражение реквизита!'"), Строка(ИндексСтроки + 1));
			СтруктураОшибки.Поле 			= СтрШаблон("ОписаниеРеквизита[%1].НаименованиеРеквизита", Строка(ИндексСтроки)); 
			
			МассивОшибок.Добавить(СтруктураОшибки);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ОписаниеРеквизита.АгрегатнаяФункция)
			И Не ПустаяСтрока(ОписаниеРеквизита.ТабличнаяЧасть) Тогда
			
			СтруктураОшибки = Новый Структура("ТекстСообщения, Поле");
			СтруктураОшибки.ТекстСообщения 	= СтрШаблон(НСтр("ru = 'В таблице описания реквизитов в строке %1 не заполнена агрегатная функция!'"), Строка(ИндексСтроки + 1));
			СтруктураОшибки.Поле 			= СтрШаблон("ОписаниеРеквизита[%1].АгрегатнаяФункция", Строка(ИндексСтроки)); 
			
			МассивОшибок.Добавить(СтруктураОшибки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Ошибка Из МассивОшибок Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка.ТекстСообщения,, Ошибка.Поле); 
	КонецЦикла;
	
	Если Не ТаблицаРеквизитов.Количество() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Таблица реквизитов пуста!'"));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Не Булево(МассивОшибок.Количество());
	
КонецФункции

&НаСервере
Функция СериализоватьНастройкиНаСервере()
	
	Структура = Новый Структура;
	Структура.Вставить("ВводТабличнойЧастиВручную", ВводТабличнойЧастиВручную);
	Структура.Вставить("ВсеИдентификаторыОбъектов", ВсеИдентификаторыОбъектов);
	Структура.Вставить("ТаблицаРеквизитов", 		ЗначениеВСтрокуВнутр(ТаблицаРеквизитов.Выгрузить()));
	Структура.Вставить("ОписанияРеквизитов", 		ЗначениеВСтрокуВнутр(ОписанияРеквизитов.Выгрузить()));
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, Структура);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

&НаСервере
Процедура ДесериализоватьНастройкиНаСервере(СтрокаJSON)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
	Структура = ПрочитатьJSON(ЧтениеJSON);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Структура, "ВводТабличнойЧастиВручную, ВсеИдентификаторыОбъектов");
	
	ТаблицаРеквизитов.Загрузить(ЗначениеИзСтрокиВнутр(Структура.ТаблицаРеквизитов));
	ОписанияРеквизитов.Загрузить(ЗначениеИзСтрокиВнутр(Структура.ОписанияРеквизитов));
	
КонецПроцедуры

&НаКлиенте                                          
Процедура ОписаниеРеквизитовНаименованиеРеквизитаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.ОписанияРеквизитов.ТекущиеДанные;
		
		ВыбранноеЗначение.Свойство("Выражение", ТекущиеДанные.НаименованиеРеквизита);
		
		ТекущиеДанные = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
		
		ВыбранноеЗначение.Свойство("ЗначениеПоУмолчанию", ТекущиеДанные.ЗначениеПоУмолчанию);
		Если ТекущиеДанные.ЗначениеПоУмолчанию = "" Тогда
			ТекущиеДанные.ЗначениеПоУмолчанию = """""";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиДляВыбранныхПользователей(Пользователи, ИмяФормы)
	
	Для Каждого Пользователь Из Пользователи Цикл
		
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователь, "ИдентификаторПользователяИБ"));
		
		АБК_РасширениеФормСписков.ЗаписатьНастройкиФормы(ИмяФормы, ПользовательИБ.Имя, СериализоватьНастройкиНаСервере(), ДинамическийСписок);
		
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти



















