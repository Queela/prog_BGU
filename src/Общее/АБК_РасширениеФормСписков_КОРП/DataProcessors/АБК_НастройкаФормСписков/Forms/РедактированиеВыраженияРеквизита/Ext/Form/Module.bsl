
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ОсновнаяТаблица") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Выражение", 			Выражение);
	Параметры.Свойство("ЗначениеПоУмолчанию", 	ЗначениеПоУмолчанию);
	
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("СхемаРедактированияВыражеия");
	СхемаКомпоновкиДанных.НаборыДанных.ОсновнойЗапрос.Запрос = АБК_РасширениеФормСписков.СформироватьЗапросПоОсновнойТаблице(Параметры.ОсновнаяТаблица);
	
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);
	
	ИсточникДоступныхНастроекКомпоновкиДанных = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы);
	
	НастройкиПоУмолчанию = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	КомпоновщикНастроек.Инициализировать(ИсточникДоступныхНастроекКомпоновкиДанных);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиПоУмолчанию);
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы
	
&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	ОповеститьОВыборе(Новый Структура("Выражение, ЗначениеПоУмолчанию", Выражение, ЗначениеПоУмолчанию));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомпановщикНастроекНастройкиВыборДоступныеПоляВыбораНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ДоступноеПолеКомпоновкиДанных = ПараметрыПеретаскивания.Значение[0];      
	
	Если ДоступноеПолеКомпоновкиДанных.ТипЗначения.Типы().Количество() Тогда
		
		ТекущийТип = ДоступноеПолеКомпоновкиДанных.ТипЗначения; 
		
	КонецЕсли;

	ПараметрыПеретаскивания.Значение = "Таблица." + СокрЛП(ДоступноеПолеКомпоновкиДанных.Поле);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеПриИзменении(Элемент)
	
		
КонецПроцедуры

&НаКлиенте
Процедура КомпановщикНастроекНастройкиВыборДоступныеПоляВыбораОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Если ТекущийТип.Типы().Количество() Тогда
		ЗначениеПоУмолчанию = ПустоеЗначениеПоТипу(ТекущийТип.Типы()[0]);
	Иначе 
		ЗначениеПоУмолчанию = ПустоеЗначениеПоТипу(Тип("Неопределено"));
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура КомпановщикНастроекНастройкиВыборДоступныеПоляВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДоступноеПолеКомпоновкиДанных = КомпоновщикНастроек.Настройки.Выбор.ДоступныеПоляВыбора.ПолучитьОбъектПоИдентификатору(ВыбраннаяСтрока);	
	
	Если ДоступноеПолеКомпоновкиДанных.ТипЗначения.Типы().Количество() Тогда
		
		ТекущийТип = ДоступноеПолеКомпоновкиДанных.ТипЗначения; 
		
	КонецЕсли;
	
	Выражение = Выражение + "Таблица." + СокрЛП(ДоступноеПолеКомпоновкиДанных.Поле);
	
	ЗначениеПоУмолчанию = ПустоеЗначениеПоТипу(ТекущийТип.Типы()[0]);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПустоеЗначениеПоТипу(Тип) Экспорт
	
	ЗначениеПоУмолчанию = """""";
	
	Если Тип = Тип("Неопределено") Тогда
		ЗначениеПоУмолчанию = "НЕОПРЕДЕЛЕНО";			
	ИначеЕсли Тип = Тип("Null") Тогда
		ЗначениеПоУмолчанию = "НЕОПРЕДЕЛЕНО";   
    ИначеЕсли Тип = Тип("Число") Тогда
     	ЗначениеПоУмолчанию = "0";
	ИначеЕсли Тип = Тип("Строка") Тогда
     	Возврат ЗначениеПоУмолчанию;
    ИначеЕсли Тип = Тип("Дата") Тогда
    	ЗначениеПоУмолчанию = "ДАТАВРЕМЯ(1,1,1)";    
    ИначеЕсли Тип = Тип("Булево") Тогда
   		ЗначениеПоУмолчанию = "ЛОЖЬ";
	ИначеЕсли Тип = Тип("Булево") Тогда
		ЗначениеПоУмолчанию = "ЛОЖЬ";
	Иначе 
		
		Идентификатор 		= ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип, Ложь);
		Если ЗначениеЗаполнено(Идентификатор) Тогда
			ЗначениеПоУмолчанию = СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Идентификатор, "ПолноеИмя"));
		Иначе 
			МетаданныеТипа = Метаданные.НайтиПоТипу(Тип);
			Если Метаданные.Перечисления.Содержит(МетаданныеТипа) Тогда
				ЗначениеПоУмолчанию = СтрШаблон("ЗНАЧЕНИЕ(Перечисление.%1.ПустаяСсылка)", МетаданныеТипа.Имя)	
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЗначениеПоУмолчанию;
	
КонецФункции

#КонецОбласти



















